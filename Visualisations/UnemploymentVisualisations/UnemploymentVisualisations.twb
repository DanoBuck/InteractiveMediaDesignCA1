<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='UnemploymentStatisticsDashboard' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Unemployment' inline='true' name='federated.1wa5dzl0yktd5i19nezyd0qtajei' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Imported' name='excel-direct.1lor86x0d88a9o1103hb21v96ydb'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\Visualisations\UnemploymentVisualisations\ImportedUnemploymentToTableau.xlsx' interpretationMode='1' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1lor86x0d88a9o1103hb21v96ydb' name='Unemployment' table='[Unemployment$]' type='table'>
          <columns gridOrigin='A1:D901:no:A1:D901:1' lost='0' outcome='1' processed='1800'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Age Group' ordinal='1' />
            <column datatype='string' name='Gender' ordinal='2' />
            <column datatype='real' name='Adjusted Monthly Unemployment Number' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Unemployment]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Unemployment]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Unemployment]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adjusted Monthly Unemployment Number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adjusted Monthly Unemployment Number]</local-name>
            <parent-name>[Unemployment]</parent-name>
            <remote-alias>Adjusted Monthly Unemployment Number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Unemployment]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D901:no:A1:D901:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1800</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Adjusted Monthly Unemployment Number]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Adjusted Monthly Unemployment Number]' derivation='Sum' name='[sum:Adjusted Monthly Unemployment Number:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\Extractions\UnemploymentData.tde' schema='Extract' tablename='Extract' update-time='11/05/2016 02:56:56 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='900' timestamp-start='2016-11-05 14:56:55.969' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Adjusted Monthly Unemployment Number</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Adjusted Monthly Unemployment Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Adjusted Monthly Unemployment Number</remote-alias>
              <ordinal>0</ordinal>
              <family>Unemployment</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>482</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37527.699999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>41.697444444444443</statistic>
                <statistic aggregation='Min' datatype='real'>9.1999999999999993</statistic>
                <statistic aggregation='Max' datatype='real'>173.19999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.556569597026446</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.535143327187853</statistic>
                <statistic aggregation='Var' datatype='real'>1486.6090590903441</statistic>
                <statistic aggregation='VarP' datatype='real'>1484.9572712469103</statistic>
                <statistic aggregation='Count' datatype='integer'>900</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2901270.7299999967</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Age Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age Group</remote-alias>
              <ordinal>1</ordinal>
              <family>Unemployment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;15 - 24 years&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;25 - 74 years&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>900</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Unemployment</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>225</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1998-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-09-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>900</statistic>
                <statistic aggregation='Median' datatype='date'>#2007-05-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>3</ordinal>
              <family>Unemployment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>900</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Female&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>900.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>900</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.524896' measure-ordering='alphabetic' measure-percentage='0.475104' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:Adjusted Monthly Unemployment Number:ok]' type='palette'>
            <map to='#499894'>
              <bucket>368.69999999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>492.59999999999997</bucket>
            </map>
            <map to='#499894'>
              <bucket>1012.9999999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>1244.8000000000002</bucket>
            </map>
            <map to='#499894'>
              <bucket>1260.5999999999999</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>285.60000000000002</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>337.19999999999993</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>730.29999999999995</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>768.00000000000011</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>858.0999999999998</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>9565.1000000000058</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>346.39999999999992</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>393.90000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>838.50000000000011</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1033.9999999999998</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1055.6000000000001</bucket>
            </map>
            <map to='#79706e'>
              <bucket>562.80000000000007</bucket>
            </map>
            <map to='#79706e'>
              <bucket>581.39999999999998</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1831.6999999999998</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2315.1999999999998</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2444.5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>404.19999999999993</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>520.89999999999998</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1186.3000000000002</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1248.0999999999999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1460.6000000000001</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>349.20000000000005</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>425.79999999999995</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>856.39999999999998</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1080.1999999999998</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1082.6999999999998</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>692.79999999999995</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>696.10000000000002</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3803.5999999999999</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>292.00000000000006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>362.5</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>789.60000000000002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>890.9000000000002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>903.70000000000016</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>654.39999999999986</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>658.60000000000002</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2520.9999999999995</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2965.0999999999999</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3636.3999999999996</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>349.89999999999998</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>453.90000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>882.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1145.8</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1146.6999999999998</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>562.89999999999986</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>594.39999999999998</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2141.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2351.5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2914.4000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>566.09999999999991</bucket>
            </map>
            <map to='#d37295'>
              <bucket>617.30000000000007</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2248.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2702.2999999999997</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3210.8999999999996</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>661.70000000000005</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>683.49999999999989</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2555.5000000000005</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2972.0999999999999</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3790.1999999999989</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>693.89999999999998</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>706.40000000000009</bucket>
            </map>
            <map to='#e15759'>
              <bucket>447.59999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>541.20000000000005</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1269.1999999999998</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1317.4999999999998</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1628.4000000000003</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>357.10000000000002</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>466.59999999999997</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>895.70000000000005</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1160.5</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1167.7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>310.89999999999998</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>378.59999999999997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>791.80000000000007</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>900.10000000000014</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>995.9000000000002</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>27962.600000000013</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>618.09999999999991</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>651.20000000000005</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2490.5999999999999</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2754.3999999999996</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3385.7999999999997</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>472.69999999999987</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>560.5</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1553.6000000000001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1749.1000000000001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1971.8000000000002</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>337.29999999999995</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>391.30000000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>818.10000000000014</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>962.90000000000009</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1042.5</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filterby Year' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Unemployment' type='sheet' />
      <link caption='Filterby Year' delimiter=',' escape='\' expression='tsl:Dashboard%20of%20Unemployment?%5Bfederated.1wa5dzl0yktd5i19nezyd0qtajei%5D.%5Byr%3ADate%3Aok%5D~s0=&lt;YEAR([Date])~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Dashboard of Unemployment' />
      </command>
    </action>
    <action caption='Highlight Year' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Unemployment' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Unemployment' />
      </command>
    </action>
    <datasources>
      <datasource caption='Unemployment' name='federated.1wa5dzl0yktd5i19nezyd0qtajei' />
    </datasources>
    <datasource-dependencies datasource='federated.1wa5dzl0yktd5i19nezyd0qtajei'>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Forecast of Unemployment'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Showing the trend of unemployment over time with future predictions.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Unemployment' name='federated.1wa5dzl0yktd5i19nezyd0qtajei' />
          </datasources>
          <datasource-dependencies datasource='federated.1wa5dzl0yktd5i19nezyd0qtajei'>
            <column datatype='real' name='[Adjusted Monthly Unemployment Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Adjusted Monthly Unemployment Number]' derivation='Median' forecast-column-base='[med:Adjusted Monthly Unemployment Number:qk]' forecast-column-type='forecast-value' name='[fVal:med:Adjusted Monthly Unemployment Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Adjusted Monthly Unemployment Number]' derivation='Median' name='[med:Adjusted Monthly Unemployment Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[fVal:med:Adjusted Monthly Unemployment Number:qk]</rows>
        <cols>([federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Forecast Indicator:nk] / ([federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Gender:nk] / [federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]))</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Unemployment by Gender and Age Group'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Shows the number of unemployed people by their gender and age group in tbale format.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Unemployment' name='federated.1wa5dzl0yktd5i19nezyd0qtajei' />
          </datasources>
          <datasource-dependencies datasource='federated.1wa5dzl0yktd5i19nezyd0qtajei'>
            <column datatype='real' name='[Adjusted Monthly Unemployment Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Monthly Unemployment Number]' derivation='Sum' name='[sum:Adjusted Monthly Unemployment Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk] / [federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok])</rows>
        <cols>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Gender:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Unemployment in Years'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Total number of unemployment by years.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Unemployment' name='federated.1wa5dzl0yktd5i19nezyd0qtajei' />
          </datasources>
          <datasource-dependencies datasource='federated.1wa5dzl0yktd5i19nezyd0qtajei'>
            <column datatype='real' name='[Adjusted Monthly Unemployment Number]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Adjusted Monthly Unemployment Number]' derivation='Sum' name='[sum:Adjusted Monthly Unemployment Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]' direction='DESC' />
          <slices>
            <column>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]</column>
            <column>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' field-type='quantitative' max='3233.3205205479449' min='410.31986301369858' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' scope='cols' value='Unemployment Number' />
            <format attr='subtitle' class='0' field='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' enable-instant-analytics='true' formula='median' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]</rows>
        <cols>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard of Unemployment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment Statistics</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5750' id='9' type='title' w='100000' x='0' y='0' />
            <zone h='94250' id='6' param='horz' type='layout-flow' w='100000' x='0' y='5750'>
              <zone h='94250' id='4' type='layout-basic' w='70600' x='0' y='5750'>
                <zone h='40881' id='1' name='Unemployment in Years' show-caption='true' w='70600' x='0' y='5750' />
                <zone h='53369' id='3' name='Forecast of Unemployment' show-caption='true' w='70600' x='0' y='46631' />
              </zone>
              <zone fixed-size='294' h='94250' id='5' is-fixed='true' param='vert' type='layout-flow' w='29400' x='70600' y='5750'>
                <zone fixed-size='276' h='35500' id='7' is-fixed='true' name='Forecast of Unemployment' pane-specification-id='0' param='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk]' type='color' w='29400' x='70600' y='5750' />
                <zone h='58750' id='8' name='Unemployment by Gender and Age Group' show-caption='true' w='29400' x='70600' y='41250'>
                  <layout-cache fixed-size-h='934' type-h='fixed' type-w='fixed' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard of Unemployment'>
      <viewpoints>
        <viewpoint name='Forecast of Unemployment'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Unemployment by Gender and Age Group' />
        <viewpoint name='Unemployment in Years' />
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' name='Unemployment in Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Month:nk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Year:qk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:qk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Forecast of Unemployment'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Gender:nk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Month:nk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Year:ok]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Year:qk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Unemployment by Gender and Age Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Age Group:nk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Gender:nk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Year:ok]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[none:Year:qk]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[sum:Adjusted Monthly Unemployment Number:ok]</field>
            <field>[federated.1wa5dzl0yktd5i19nezyd0qtajei].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard of Unemployment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast of Unemployment' width='192'>
      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
      55U0GRwqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Unemployment by Gender and Age Group' width='192'>
      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
      OMhnQn9yg/4Ba44PPEJjuzsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unemployment in Years' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
