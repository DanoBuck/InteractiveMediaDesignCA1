<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PenaltyPointsData (ImportDataForTableau)' inline='true' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ImportDataForTableau' name='excel-direct.0cy02yi0mdmiva145u30812gfpeh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\DataSets\PenaltyPointsData\ImportDataForTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cy02yi0mdmiva145u30812gfpeh' name='PenaltyPointsData' table='[PenaltyPointsData$]' type='table'>
          <columns gridOrigin='A1:V937:no:A1:V937:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='Offences With Alcohol' ordinal='2' />
            <column datatype='integer' name='Failure To Wear Seatbelt' ordinal='3' />
            <column datatype='integer' name='Breaches Of Driver Duties' ordinal='4' />
            <column datatype='integer' name='Careless Driving' ordinal='5' />
            <column datatype='integer' name='Contraventions' ordinal='6' />
            <column datatype='integer' name='Dangerous Driving' ordinal='7' />
            <column datatype='integer' name='Driver Exceedings' ordinal='8' />
            <column datatype='integer' name='Driver Failing To Restrain Minors' ordinal='9' />
            <column datatype='integer' name='Driving a vehicle when unfit' ordinal='10' />
            <column datatype='integer' name='Driving a vehicle while holding a mobile phone' ordinal='11' />
            <column datatype='integer' name='Driving dangerously defective vehicle' ordinal='12' />
            <column datatype='integer' name='Driving Dangerously Which Could Harm Pedestrians' ordinal='13' />
            <column datatype='integer' name='Driving vehicle before remedying a defect' ordinal='14' />
            <column datatype='integer' name='Fail To Comply With Signals' ordinal='15' />
            <column datatype='integer' name='No Child Restraints' ordinal='16' />
            <column datatype='integer' name='No Insurance' ordinal='17' />
            <column datatype='integer' name='Overtaking   Offence' ordinal='18' />
            <column datatype='integer' name='Parking a vehicle in a dangerous position' ordinal='19' />
            <column datatype='integer' name='Speeding' ordinal='20' />
            <column datatype='integer' name='Use vehicle without NCT certificate' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offences With Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offences With Alcohol]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Offences With Alcohol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Failure To Wear Seatbelt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Failure To Wear Seatbelt]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Failure To Wear Seatbelt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breaches Of Driver Duties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Breaches Of Driver Duties]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Breaches Of Driver Duties</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Careless Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Careless Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Careless Driving</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraventions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contraventions]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Contraventions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dangerous Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dangerous Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Dangerous Driving</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Exceedings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Exceedings]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Exceedings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Failing To Restrain Minors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Failing To Restrain Minors]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Failing To Restrain Minors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle when unfit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle when unfit]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle when unfit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle while holding a mobile phone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle while holding a mobile phone]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle while holding a mobile phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving dangerously defective vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving dangerously defective vehicle]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving dangerously defective vehicle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving Dangerously Which Could Harm Pedestrians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving Dangerously Which Could Harm Pedestrians]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving Dangerously Which Could Harm Pedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving vehicle before remedying a defect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving vehicle before remedying a defect]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving vehicle before remedying a defect</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fail To Comply With Signals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fail To Comply With Signals]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Fail To Comply With Signals</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Child Restraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Child Restraints]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Child Restraints</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Insurance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Insurance]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overtaking   Offence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overtaking   Offence]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Overtaking   Offence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parking a vehicle in a dangerous position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parking a vehicle in a dangerous position]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Parking a vehicle in a dangerous position</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speeding</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speeding]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Speeding</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Use vehicle without NCT certificate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Use vehicle without NCT certificate]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Use vehicle without NCT certificate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V937:no:A1:V937:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
      <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
      </column>
      <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
      </column>
      <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
          <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
          <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
          <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='None' name='[none:Careless Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Dangerous Driving]' derivation='None' name='[none:Dangerous Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_564920284103004161]' derivation='User' name='[usr:Calculation_564920284103004161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Careless Driving)' hidden='true' name='[Action (Careless Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Careless Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
        </groupfilter>
      </group>
      <group caption='Action (County,YEAR(Date))' hidden='true' name='[Action (County,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Dangerous Driving)' hidden='true' name='[Action (Dangerous Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Dangerous Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.130705' measure-ordering='alphabetic' measure-percentage='0.869295' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_564920284103004161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter by Selected Option' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Totals' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Totals' />
      </command>
    </action>
    <action caption='Filter by County' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Map and Bar Chart' type='sheet' worksheet='Percentage Of Penalty Points Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage Of Penalty Points Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Map and Bar Chart' />
      </command>
    </action>
    <action caption='HighlightFields' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Totals' type='sheet' worksheet='Bar Chart of Driving Offences and Penalty Points' />
      <command command='tsc:brush'>
        <param name='exclude' value='Bar Chart of Driving Offences and Penalty Points' />
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard of Totals' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart of Driving Offences and Penalty Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar Chart of Driving Offences and Penalty Points</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' field-type='quantitative' max='5937880.2000000002' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Numberof Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000d6' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#0000003e' />
            <format attr='line-pattern' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#6666664e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <reference-line axis-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Bubble Chart of Total Penalty Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <size column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Penalty Points for Counties and Offences'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' direction='DESC' using='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]' />
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Number of Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-color' value='#6666665d' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='286' />
                <format attr='maxwidth' value='286' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk] / [federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names])</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage Of Penalty Points Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Penalty Points in the Republic of Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' included-values='in-range-or-null'>
            <min>0.0050000000000000001</min>
            <max>0.48184101428610038</max>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-322530.15371996537' min='-1499602.0940846899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7488206.7395304907' min='6680774.2487437539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot of Speeding and Careless Driving'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]' value='N' />
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' />
              <shape column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table of Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols total='true'>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Worst Offending County'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
            </column>
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_564920284103004161]' derivation='User' name='[usr:Calculation_564920284103004161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_564920284103004161:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-302828.41614863859' min='-1724074.3820742741' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7480827.1700877342' min='6675454.4560632082' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard of Map and Bar Chart'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
        </column>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
        </column-instance>
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80700' x='0' y='0'>
              <zone h='50000' id='1' name='Percentage Of Penalty Points Map' w='80700' x='0' y='0' />
              <zone h='50000' id='8' name='Penalty Points for Counties and Offences' w='80700' x='0' y='50000' />
            </zone>
            <zone fixed-size='193' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19300' x='80700' y='0'>
              <zone h='14000' id='6' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='19300' x='80700' y='0' />
              <zone h='8625' id='7' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='19300' x='80700' y='14000' />
              <zone h='8125' id='9' name='Penalty Points for Counties and Offences' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' w='19300' x='80700' y='22625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard of Totals'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='45625' id='1' name='Bar Chart of Driving Offences and Penalty Points' w='84000' x='0' y='0' />
                <zone h='54375' id='8' name='Table of Totals' w='42000' x='0' y='45625' />
                <zone h='54375' id='9' name='Scatter Plot of Speeding and Careless Driving' w='42000' x='42000' y='45625' />
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
                <zone fixed-size='278' h='36250' id='6' is-fixed='true' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' w='16000' x='84000' y='0' />
                <zone h='9375' id='7' mode='slider' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='16000' x='84000' y='36250' />
                <zone h='10750' id='10' name='Scatter Plot of Speeding and Careless Driving' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='color' w='16000' x='84000' y='45625' />
                <zone h='43625' id='11' name='Scatter Plot of Speeding and Careless Driving' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='shape' w='16000' x='84000' y='56375' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Percentage Of Penalty Points Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Month:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Year:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Bar Chart of Driving Offences and Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Table of Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bubble Chart of Total Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' size='40' type='color' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' size='322' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' size='50' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Penalty Points for Counties and Offences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatter Plot of Speeding and Careless Driving'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[tyr:Date:ok]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard of Map and Bar Chart'>
      <viewpoints>
        <viewpoint name='Penalty Points for Counties and Offences' />
        <viewpoint name='Percentage Of Penalty Points Map'>
          <zoom type='entire-view' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard of Totals'>
      <viewpoints>
        <viewpoint name='Bar Chart of Driving Offences and Penalty Points' />
        <viewpoint name='Scatter Plot of Speeding and Careless Driving'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Table of Totals' />
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' maximized='true' name='Worst Offending County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart of Driving Offences and Penalty Points' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9WWxd6ZaY9+35zCN5OM+USGqk5lKVqnTrdqcHt287g9P90ECnYzgBGrGB
      PCQI8uT4IQiC5M0OArSDwAjQD3Hbju0e0nBuV92quqpBpYGSSHESZ/KQPOSZ5z3mgSJFUmSJ
      mjjcOh9ASGedffb+97/32vv/1/rXWoLjOA41avxIEY+6ATVqHCU1Bajxo0Y+6gYcVwqFAqZp
      bn3WdR1RFJFleYdMkiQkSQLAcRwMw9hTJssyoijuK7NtG9M095QpioIgCABYloVlWS/J/uRP
      /oQ//uM/3mqbaZrYto2qqj8oMwwDAEVRXlu2X5+8q346aJ+8Tj9ZlrXj/GsKsA+JTIn744tH
      3YwD8y//3f9L7/XfpFyu4Ha7jro5r81RtfvEKoBtmWTSaSSXj6DPfaDfOJaF4YAqS6/cdmR6
      mf/hn/3V2zbz0JifS5yo9h4XTuwcIDEzwuTiKrPz8QP/xsinmE+kWIovvceW1ThJnNg3gMvr
      IzczS93ZSyzPDPN0ag3BHeJ8l5+hJ1MEmntpVLKMza3RMTBINT7GWqpI/ZkrlPLriEaW8YkV
      TC3A+U4/w88WcaQgP7l99eR2So3X5sS+ATzhZj796W3WZycwZY1L1z+iUbV5NjOF4PKhYDAx
      OYvX78excziuNm59cBm3IqLrOpbk4vKND+ms97FeqPLBrY8Iu2q3/o+NE6sApcwq3/zyDlqk
      CaFa4Ptv7uBEmjjXdxYVA8Xl5dy5AUzDxKVF8ElJvh+ZxqWq1EXr8Hj8KIpEIBikIeTl+6/v
      sJqvIhz1idU4VE7sIy/U2MnHjZ0AFPIBbrcHcakb+vzJ7dat7Zq6Bp7/J0rvprA+uPW9291E
      NjGPKKicvdC/9URwawrNdS+2O+4kNJnmuiC2bSGKr57kHzeOqt1CbSnE3hSLxR2fTdNEEIQt
      u/WmTBTFHfZ9y7LeSiZJ0g77tm3bB5L9/u//Pn/2Z39GsVjE6/ViWRaO4+ywxx9Utun/2C3b
      6/wPKnvV+ReLRTRNe6d9sp9s+3md2DfA+0aUJJxtAyJJEBEEYasz95IJGz/cUyYKAmzKnE2Z
      yOYh9pJJooPgOFs3BIC4jwxBQJBkRElGkGQkUcJxHIRt2+0pEyRgp0wWNm5eQRS2yURA2CE7
      SJ8ctJ9ESUFS1D37SRJFZOmFUjiOs+O3ryvb3nc1BdiH0eU8/+r+wU2sR83kSp7/8S/GjroZ
      74Wuei9//3bvqzd8A3YoQDm1wtcPH+H2NXH1xgU2HcaJtQRBt4vFVJbu1mYe3f2c6aUibf3n
      uHa2Z8cOE7OjDM+s0tw9QH9Hw4EakVoYxYwMEPO+kOVWnlFwd1JdvIsdGcRnJFAjYWxdQpYs
      gsEgS3OzxNo6UZ4rdHxqmPGFdaLNPXTWu1B8UdzKD8/zs+tLlOwATTH/gdpa41eLHQpg6Q4t
      vX00ReqprC/y3cg0HQODCNUKtqpQKlcQRInBDz7E/n6OwTPdLM+MMbmU4eKVqwTdIovJMj/5
      yW1wHOJTI0ytFLl46QLL009ZSetEAiK2q5EWn8Xk3CLRtn4ClQKFVArJ8aCaeQQtjOzxk19b
      RTc1xPQihlOlNRoklc5w7+E3tPQM4ifN9PwCLb3n6G4Ks57M0HnqDE31EQrJJURPiKcP7pKo
      Klwb7OHZ4wmyjsr1wW4e3xtCi3XR4tepmi5GH3xLUQ4zeK4P+cTaxmq8LrsutUViaYHF5XVK
      xQKWpTM8OsH6+hr2HnNlRy+ykNb54MoAE6PjgI0gbIx3BcFgIVHhxmAL46PzlHEz2OJBaTmP
      y8iTSuc5e+0DCol5bBs0r8bc9AzxxVUUTcbt9lHOzoO7EcwcVdsFdpGCrjFw9iI3LvUjShqD
      ly9RzCYBOHvpCkYmzuPRKfLpBLn4DFbsDE0hmXIlD65m2oMq+VKBimHzZGTk+ZmYZLIlJEnY
      8zxr/OqyUwEEha7+s5w93UExl8ZCQZbZmETsmtgACLKKWE7y1dd38UUbAJmQpvPzzz5ndDaJ
      oK/z1TfDBKIBNJeGIqu43RqyJGLpeb775VeUBS+iCILsJUqOrBJEE0GQ3ejraTzRAD6zREnz
      IbLRBjOf4LuhcSTNjabIyM/X9syODxNfS2PZgACKL8DC8HeMTMVxBAGv14Msy5ilLHndQVNk
      BAQQQJUFFhcX0c2aAvyYODIz6NL0NNHubrbW/+l5vv7+Ceevf4hf+aFfvgaVDF9+N4St+Pjg
      2mVcr5gPbOfBzNqJmgT/i//pH/J7//0/OepmvBfe5yS45gfYh0yhTLpsHXUzDszf/4P/lP/j
      T/+MbDZLMHhyHHib/FC7XYpEU+hgK35fl5oZdB9E2yCs2Fufj3tAjCpBWDFR3eBVzBMXECNr
      NppT2rtPbJlMprpvn9QCYt4DqQo8WCju8U1112djj20OX7ZWNPlsqoiu62y7vq+xP/0tZLv7
      BFTZ4G9fbNpj272RZRmfz3fg7d8Vh6QANjNPH7GQ0hm8epWA6zXXfNg6ww8fkCyanD5/maaw
      57V+nk2n8YXDvM5RcxWTsZXC67XzCCnsaO9eN+nh8jrzraPk0BSgjI+Prjfzzbd3ufLBFRy9
      jGnopCoijSEvLk2mYoJZzlGxZcIBN9VSBUtS8StVxEArn1xuAdukohuIjokkK2RSSVRvCNEo
      UrZloiEf2VQSQfMR8Cgk15MsLizT1ZGjqDQSEMqUKibhaBSznCVXMglHQhQzKVC9hALe2orQ
      I2BziHXYHNoQSBBAUr20hlVmZqZIpvKcbo2Q0z1klxdobw6RMkUef/EFeUPh1t+6zuyDOGdu
      XMKvwNKzYVbjM/SdOUsyPoug+vHJFZJFgfpQngf37lE0RS6fP8PjJ48RtDCDA20UdKhUDPR8
      gqInyOToU/wBKJY7WFmKI4lVCvl6Hj4YpW/wKsGaAhwJ29fnHOpxD+tAlmlQyCVZzFoENJWB
      8xcI+zRAoLlOY3g2Q31Axt94mp9+ehOPrNI9cI7G8Mb6iIaO09y4doX6sB9ZsNFNMA2LhpYW
      /IpAoLmXT259iGpX6TpzhZvXzqNXdFra2vC5XkzcYq2dnD7diVQpIvuixKIBEP1cvjRAenkB
      3d7nBGq8V7avHj1MDukNIBJyw+jkIoPXriCZZURNQVajtMkCfi1Il1zA76+nvytLIlOir7Ed
      v/b8xpXcuOwcT4ZTdHR10dR9DtkoILlbmR4bxWnupq9BZzWdZ6DvHNb4KLmyi77+U4w8fUYw
      1oQ/rOCSPNgeDU1ziDYHiN/9gm/SOrdutVJYXaG5qwftZAxda7wjfrx+AMdiPbGKIWjE6iNI
      u7zc8+t5nsT3sgIdT/7xP/xD/tE/+b+OuhlbKJLAb5w92GJI2MjD9CtsBTqGCBJ1Dc37fh1S
      HT5qf5Gn5rj7AaIeiY/aXWQyGUKh0LHwA2QymQP3UyaToVTaxw9QS4x1+NiSStrYNiGQnnfa
      dufwnjJtb5lzEBl7y3bPS/aQ6bZA2lKpKAEcSwVBBQmK2/e1S9YWdiOLx2PKLwjCkXiw31oB
      HMfGMAwEcWNRmm0a2IiI2NiIKAdIQrUXG6FwIqZpIcsytm0hCBJbIxXHwd4V3bMVQifLOLu3
      34Zt2y9bHRwHy3aQnkceLWerfDaVfaO2HwWJfJW/err+/NPB/Bd/dL0ZWTsez8CjmgS/5ZTP
      YXlqmK+//Z47d74mW7IY+u5LpuOrPPj6K+ZW0m+85+FHjzHtEn/1b/6akm3wdGSC1OoSpUqe
      eCIHZoHxqZ2L1YrpJf793/wS3XKYG3tAqrz3vsfHx18W2lUePB594/bWOJm8pfpbpHLw4ce3
      KK3MMT85zNTiGm2qh4V4CndjjvvfjFIRAvT3RBgZnsTAy+ULLTx6PEljRw9GZplMBU53tjA6
      PkFD11kGOhto8AnMz6/T0xdjfm4dwROgnMqRLa1w90Gca9cusjI7zvL8GKcv3aI14iK1mqS9
      tZ50sQKAY+T48vPv8dV34nOSLK4VaOsbJLn0jM8WF+gavElh9iFrOYO+wSvvoDtrvClHZYt5
      yzeAiCiY6IZFVa8QiHVw/sJFbl67zPmLl2jylJmNZ9HLeQpVOHXhKn0NfmZW17l4/RZtPoeJ
      uTi6XsFkI/C5UMgD4I/VMzu9SFN7H2szT/F7fVSKRSItHZy/eI3u5jCxjj5ufngWPVsGbEbG
      npJYmGTk2TIA+cVZGs5/xOCZFrIlhdsfXyGznCDc3M2n1wcoloroQoRPbp1leSbxll1Z423Y
      non7MHlrBWhrjfHgm6+YXqvSFAvi9XoBEa/XQyDaSlOdB83jxe1y41JlXD4fHc2NDN+/w0JB
      oKMhgqK6kSUBURCQlY2JpdsTxuOW8fr8+L0qgZAfTzCIongpLI8zs5LH73UjSRoetwJGlp6L
      v85Pf+t3afWauH1Boh09pEe/Y2g0Tl0QvvzlQ+rbGvH7/AiKi4DXj1fK89XX47T1NhMMHL4Z
      rsYGRzUH+PH6AV7B2HKWz0/QJPh//+/+Hn/8P/+fr/WbP7zWglc7Hkm0an6AY0ZHSOXvXXvh
      yLEsC0EQdtjybdt+K5koijty1uyW2ba9lcfmVbK/CGn851djFItFfD7f1nbbn6wvy0xKpY2l
      zNu3syzrwLLt5/U2/VStVrfO6X32025ZTQH2YbOjN9m8YNs5iGz7Bdvc3/Z9776wr5JtXkRB
      ELYmjrv3u/m3ud32tu2WbU8gtX277cfcfl7vok82Zdv7ZLPN77ufdstqCrAPS3mLO3P5o27G
      gVnK6fzfTzbNzhv/CgL8Z9f293YfJyqVyvEeAj2++wXJok3f4Ac0hzfiMy2zSrFskkis0NvT
      84o9wNz4ECPj86j1LXx8dRBN2XydOizNTRNt6WTy8T06zlwju7JAc2fHK4NYlmeeMjG/RlP3
      GU611b+8lNk2KVZNvJrM4soarc07o5TMUprFrEVDwI3m9W5ZBSzHQbdOzvTIdjhR7d3NsV8N
      Kvvr+cm1ARzH5MndOxi+Js521ZMv6KQzaUqFNJboQ8+nkX0uCstLOKEWcgujCOEO+jsb6egb
      pJozabp2Bama57s7QzSdukhbfQBDr1IsFMnlSuRyOdL5LLFCkruPxug9f4XKygRzKZMrVy9Q
      TieJr2YZOHeauYVlzl/5EI8iUUwuMTQe5+LliySmh1kuKvTFBP7m+2dcunqD9OIoc3NxLl0d
      JD0/xmJOYrA7SDaTZeSXj/F19vHBpYscE+foj4qjigc48KVOx6f5MpGi/+I5yrrB9PAwbbFr
      ZHIb4Xe59Cq6qpCbX8DT4CZX9tKqzHJ3PoU4m6Gzs5Htcf2jj0fov3KdsUdDNNddpyHgZmJx
      gmj7aTJr06A2M3LvLllT4dGTEdr9NsVMnMmZRnJz41z8+BMk4Or16zx8cBcp3Elm+i6O6uHJ
      +BJBs0JhbpRU69/i4uUQfW11PC400NcZ5MH9YdaWJ9EkmAndANnLwLnzNA8MoL3jDq5xvDmw
      2kWae7h9+xZRpUSmLBHyuNieQ0qRJaZHHzMdXwfZTWdbA6rbRzDgp7O746UDBX0aI4+GqDoq
      ogDuunrmni7R0tFIbnqOYHMEXyhEwB+kvSnMWrpEMBTEMU2iLe34n5vv5qefISguLMMgFIrg
      CzfSFHWTyuYJhz2Ylsj6wjPmVjMUM6sMPZ4iWBchFAxR19pN5PmCT9HI83hkAuPkZEL5lWL7
      5PowObAfYHNZquM4lEtFEGU0TcGxNxbEyZJIqVRGlBVURUYQRATBoVIqYQsyHo8LATANA1FR
      EGyLYqmEqnlQFAkBh0qliuZyYVSryKoKtkmpVEHR3GDrmI6A9txRtpkNzqhWqOgmbo8HwTYp
      Vapobg+2UcF2BFSXG6taxpEUsHRMW8DrcWNUK1RNG4/bheOAgEW5auLxeBAFGFvJ8eXMyZkE
      /9P/9o/4B//LP39J/l/ebDn8xrwB6XSacDh86MetOcL2IV2skCqfnPjI/+IP/i7/7E//Jfl8
      Hr//RabrnrrXy6BxVOxu92FRm+7tg2TpROWTkxhLEx2iso5LNfHK+lbwSybzIkXKcU6Mlc/n
      KZfLtYCY40LRlnmW3J7wafPCO+9JJhxQJvJi6vZClqvaPEk6VCoirorDRtSMxM5jSjQFPPSG
      jt9b4VgkxjIrBcYnn6EFm+hua+BdBwvl83l8Pt9LXkGAfDaN2x/ekZu/Wi6BrKIpO/XUMcuM
      P5uns7eP91XZNFM2eLJ8chJj5SrWtvbu327bceitP34KcFST4B3GmUomjxQIIRbiTCwksCwT
      XddZWVykYprY9kbEVT6dIJWvYOhVypUKtuNg6lXK5Y3/O7aNZdvYtoVt21QrZQzTYmlxkWql
      gm5a5NfmSVccDL1KpaqzNP+MiumgVyrohonjQC6ZIJnJPf9sU6mUMSyL1fGnGL4womNSLlew
      nrdLr1axLItyuYxlbzz5LMtC13Vs26JSLmNaNqahUy5X0PUqVd2gNgk6ejbXGh02u56fAl5/
      gNaGMA+m13jw9RD423DsCqpssGAEMNJL+EIKoktk6MvvEWSN3iv9zDwap5orc+a3fo16PcXE
      OoTsFBUEhh48Qg210xmTGRp6gC4G6fGVMfAyPDqML9KCBlTWZ/jLL7/H8dXzn/z2p2DrTI0/
      ZdKC5gY/D4ee4mvspq68RrFRorowSdV20ILNSPlZdLUOj51h+NkSbQPXuDXYy5N7d6hIIUJi
      gUcTs9R3X8ZVnsMyBKqaB8mQuPnTmy/StNc4ErbPGQ6TPf0A66vLqJoHd7iZq4MDKCL4Qg1U
      1iax3NEtrWnqHuDKuT4cK4O/aYDTHY0IgBqMYRUSZKtAOUvHwCXOn25D0IJcv3GdhsCGu8ko
      lQi19nC+rwMBKKXXifZc4NJA98bwS1TpOz9IY0BmZS3N6YvXGOhspb2zh/OXzoCgcfnyRcxK
      AdUf4/rlc5QKZQav36AtthFgrXojXL9ygVw+z4VrN+luDhOKtXP94hm6By7Q0xSiZvo/evYa
      Fh8GOxRA9btYHHnEYlHjTFcTTU1NCEBLczOy6iYWjdHaWk8gFCPo8xKLhXEFAoSDrRQX7vHt
      2DwyAiDR1RQk1NxNd/8FhOI6uYpNY0MMQZCoj9URaGijqbkFX2WNh6Oz1De20XBqkHo7Sa5k
      IAD+oI/pJw8Q6nq4ee0SleQyJRP8sRheFPp6G7l/f5hTfX00NjUBIucGL5BcWsIWNtS0oakJ
      UYDBy5dJLi1gOCINsRiSN0jE6yIUiyEWk6xmS6wurXA0cUk1jop34gdwHIOZ8UlsT5jutsaN
      Wq8nnPlkgScr+0TVH0P+8X/1B/yj/+1PX7lde9jF+ebjVxEzl8sRCAQO/bjvZOAlCArd/Wfe
      xa6ODSHF5qOWV9u8j4sfIOqW+KhFOUBirDKZzItB33HxA2QyGSqVSs0PcFwQFY2q9eJNJsge
      HHaWlhBkDzY7c1QJCnvKLHbmu9pTpu4t2zEskze8A7tlFiKG7EHyiQSC/hP3FpYkqeYJPk4s
      Zat8OXty1gKt5nX+zfAaAH8Y8qHJJ0sBjsUkGCA58Yi//Pwzfv6Lr8lXXzxnVpbiO55M6ysr
      VK39nReOs85f/Iu/5G9+/nPm199fktnl0QesVHbKMrNPmM1YjH3314wsFpmfHic5O8zU84Cp
      ajHNeqb03tpU4+Tw0hvAsTWu3/4JweQMo/E0am6GqhLFozoIi3N465pJryyjY+IuZ3n44BEF
      Q+WDj87x9P5DimWF67/+IR4ces7fYKDPz/2HY8hZmYnFNfouXCU5NUKyUKTzzDWstUlmV7J0
      DJzFSS6wXHAYPNvGxHgcTzSKkVwkXZW4eK6TtZxCVCuB6mZs6BGexm7qbItqOsGy5salpyHU
      ijfWwNL8PI63BSe9QEU0CIcFhu9/zaLfy6XT9eimxNjD70gaCpcvX8ZdexceKUflCNs3HsA0
      bUTBoWTJnO3rIpvJEnDBfHyJXNmmkMtiGgaRllOcawgSTydo6r1KW0DdMU52HAvHEchkczhW
      nmdTcRw1zAcfXKKaXCAvRLhxaYDq2iwPJ5epFvLkCllMtY7uoIUZ7uHSqWaWV+bJ5KuUixtV
      3h3HoVopY9vgDvhZXVhgKZEhoIkoapBKeg7RHwMjTUn0oEkip85fozGooJcLFJLL5NRmbl4d
      5HVLltV49xyLpRCwUa7y/hdfcHc6S29jkEhdHYok4va4cde1Up57Rqy7A7fLjSgpeD0uVI8b
      v8fH5KOveTq3ymbCifmxe3z+xV3aTvXi4KC4fXhdKl6fF0lScPlCWKlZvvl+iKqrjraIG0V1
      oaoa9fVhtFAjxvIY3z+doa6xm2J8mCcTCwiCgyhLmJaJ7HKjyG5CYgo70IokgCArSIiEg34i
      mobk8yPKLnwuBZfbjaxoaMEYWn6Or79/yPrqCtlShaWVWna4o2K7dekweWfxANVikgf3hhGD
      jVwd7DtgRUaTsYcPWS2anLt4maj/zQISrUqeh8PTXLh8AfUdreAbX8mdqEnwP/1v/oh/8L/+
      cwD+8GoTmnw0MbZvylElxqoFxOxDuVLF3pZjwnYcBHblytlXJuxIy24/z0WzXTV3yxw27OPb
      zZd7yhxw2C1z+L2/+x/zZ//q/6FUKhEO+Lby3uzOAXScZNs/F4tFPB7PS9ag3dsdVHbQdtSm
      fvtgmTvLdpqGgSAIWw4ex3EwTRNRFHc4eA4is237ef0DaYeDZz+ZLMs7nDm2bb8kw3GwjSp6
      uUhFlbe22z60ME0Tx3FeKdvPEbb9/H9I9iZ9UigUsG37wH3ypv20W1ZTgH1I6gKPVyt7fLPb
      WmHDSyuIXke2mw2ZT5X4tCd0sMbywpFkmuaRDCXeFsMwjiQm+L0rQCm5xHdPxglEWzl/phdV
      en9j04XxIZ4tZ2nt2UiSBYBtUawaeN0vFjwXS0W8Hu8P7suwHHLVo1sn+qbj0qOaTL4tR9Xu
      964Aek6n/8YHyKuzTMdTeCor5B0fp7ubWZmbJVUVOdffRWJhmvW8RW9fL6uzE9ieGC0RD/ns
      OqYSorQ+D75GmkIayG7MYh7ZJTA5OUdz12nqAm50W+PDTz7i2fd3WQv5kSpJSoaMbtmEfRrh
      UIBsrkIqlaAhFmV5fhHHV093o5/xsQnUUCNdbQ2HVzy5xpFzSEMggWg0zMJKleLKEuOzOfzR
      j1lZLxEWbRazq6QzDj59jWdzAmMPRnCYxLk+wFpapy2UpySGEePjjGejxGKt5GemcQIiiUyF
      pu3zeFGmKaqyvJJkPbXEtYFeRubXsdIrmGYj2apMJpVEoYKjhSgk4kzkHXyxZuLTcTpqCvCj
      4hCutcnizDQPRmZpiEKh6qenqQ7DcQhH64kEfSAIVMs50rkCgqzQ0tnDlasX0CSNnt4uPG6N
      Yi5JQXdwKwJL8zMsJlKEYs1EVJNncxu1wsxyjqmJMUaWbZoDMl29PXie5zns6GpgaOgZ9XWR
      jWYpLmJ1UXweF6IA2VSSUsXY7yRODEdVaeVtOap2v/c3gL+lhea1FK6WDiIBL+6LIhYuAiEf
      +EHCxutUmUjMkq64+M3bHZgeD6agEQ56ESUZyddFr5QArYewVyGxto7a1YHXLWG39xCqiwHQ
      1nuKVK5Mx/VeXKKDVxBAFDjb04HiUrh2zUvAJXFm4CyyLCFJCm1dneQS03z+zWMi7edO/NP/
      pFq1j6rdx8IPsJXf/XlxhMNeF+g4NrbtIIjiln09VaiQKB1dYixVFuiOuF+94XN+9rOf8ed/
      /udH5lB6W37UFWIEQTiy9NgbxxfZfXjZ1mlUjzYxVipVPnCgh2maZDIZisUipmkei0rxr9NP
      +Xy+Vin+OGEIKsuV7WZQZQ9T/nPZjqmDurdMZxd7ybSXZPVeH2G/unvDl5BlmVAodGQJpt6W
      Y5EYawOLYkHH63NTLpdxuw/+GgZ+8DfFYgGPx7dn9fY32d+e2+fTWIoft2Sh2wKqaLO8vIon
      ECSfTmMD/nCMutAP+wHSFZOh5aOPGTjb4KHhAAqwSW0S/HrsMeerMjY6A8Ds7Oxr7/DFbxxS
      K0tsf4iOj4++0sFjlHMkUjlmZg7ehvjMDJtJDJcXJ7k/NEEllWAukWJieIiCblEqlbCK60zF
      k0cWfVTj+PGKIZDDswdfMbJc5OaHtxi//wvW8xYf/ebP8OdnmLdjqPkFRBEePhkj1NxH0Fnn
      i88XUSPdRM0cIdXhzoNxom2nAMitPuOLb56g1nXw2x9fZnTkCU1NAR4Op+ipV5DCUTLpNUYe
      PyWZMxErCX7x2SJatAe/vkgiVyXafgazkODKQBN3x7OsjT7Ekyrzk8sDiFqQZneBpawGboUq
      Khd7uxEA3eNQcAlEgx6wy3z71beYWoDLV67gOZkO1Jc4qgRTb8sxSowlYxhFTL1IvmQSaWqj
      OepmeXmFXEWgu6sN0bJwN7RTXByj7GikV5ZoaO+mLuRBCcS4/eknhFRwbJvMepbTl29wrmej
      WFt6eQlPQzsNkY0A6BafzPBUlvoGF/GSTVhyED1RBs6c5fKFXlyBGD/56UeEVJGSpfDxx9ep
      ZjJYlkW1XMISvfSfO8P1wYGtM2jqOc3K1DiWA46pU9YtKpXqztOs5hHCXdy8drEWEPMjZg8F
      UOlo9HDnmwe0dfdgmQZlXaa1rYVT7TFyJRNNEQGFxvoAkYZmBi5cxCxkQVSoi0YAiUgkRLix
      gbauLtYnHzE6u0os1kjzqQv4rQKOuKHxgdZ2Am4v3bEw0foGZLeXSMBHnVfk4fAUoUgEkIlE
      AnS31vPNd8N0nOqiwS/zYGKVWMRHMOji0aOxjf0FI6ial9OnO/G6PfSd6mTouzssJgtImu/F
      2N9VR5OW47sHw6TXagExP1aOhR/gODKfKjKcqL56w/dMT9RF3wGyOW/6ATbzAp00jqrdJ3PA
      eAhEVIePnyfG2rRbb7dv/5Bsu31700Z9UNl2m/eG3bpMNmvsku20b5umiWVZ5InqKaEAACAA
      SURBVHI58vk8kiRt2fx3b/emfgBd1xEE4Qf9AG/TT4VCYWud/6v7xDqwbK/z3y6rKcA+SLKC
      JWx0pgCoqgsBgU03teAcTCY5IGrOK2UeSUTgzaKfYKPMqNe7MbzzeDyv9duDsLnP7bjd7nca
      wfUuI8IOKqspwD7ECwbfx/cKiHk/fNodoMF3cHv/bja96dujrE4Su73Hh8UPHlHPzfHvv5xE
      UxwGP/4p9Z6DdKzJ1NQSPT0dP7iVUVzjq68fYSMw+NFPKC8+Zq7o5talfobv/oLVgk0w1snl
      s13P1+dUiC8VaW6JvrIF33z2F5Rx09R9nv6O2JbjrVzOAW5koUymIFBfd/ySxNY4XH5Y5RyL
      +pYuwkKSSqXCs4VpKkKAoJBlbl3nwsVzzAx/T1Gq49q5Nh4/HEKJtqAnFvjl0gwdZ65Cepa5
      ZIXzZ04xMfIYNdrJxdNtLD6b59JPfp2wkOLbe8Okl8bxdl8CQA00cPtqPzPjQ2RXF5ldyxOJ
      hUEXWFiI09ISJb6cxsitspy3Od/XxfLyArYrRn9nA6GmHm4O9PHg/kPW5RKuxk5Si9MkFsdY
      zbi49tEFHEtlaWqYmUSVC+d7GXv0GK2ug/N97Sd6Rejm+P2kcVTtfoUCQLVchoCEWSqRLFhc
      PBfl//t33+D2+4gnWymWDJYXRpmpswl3DtJRLzNSLHLxXBujQ5PMLc3h9rhZSdRTNWxkc6Mk
      kbOVOUFA1nwMnL9IQ0/frgYI2OUURaWZizGZB/dSRANlFieT6O4oTyem8bjdrCQCpEwX1zti
      O36LAIVUAuo7WUsm6ew7Syf1uIUki8kUE6PP8Pg8JFJRyrqNaurYDu+8NtphsjkJPGkcVbt/
      +KiCQGZ9mYX4GoIkUReLoSku6uqCyO4AbsmkUrHwet14Q1HmR77j8eQSLo8XWVJwef3UhXzI
      qhePR0USLFKpDDbQ0tXMvc9+zs8/u0dbbzvitnFrOR3ni198TqrqIeBz0xirRxQEFFmmqT7C
      05USXY1Bwn4vstuPV1NpbKjfWsqcXJzk888+Rwk24fEoPPjlF6ykq2jAwwffkTNA1vzEIl5k
      lxuPqiGLFul0BvuEG4VP4vgfjq7dNT/APkytF07UJLgWD/Bm1KxA+9DkV/nt04dXOs+rnswn
      90mnpgD7UCmXKWxLD69Xq4iS9MJU5zgbjqBtMsdxMHQdSZZfBH/YDoaxU2bbNqZhICvK1tg3
      vUsmCuCRhR9NQEypVKoFxBwnUobEd8vbl0JsdpX1DmXOvjK/JvG7A5EDt3czIEYUxSOptfW2
      HFW737kCZOLP+P7pHI6jcuunt/BI+5tU9GKRsiAQ3OZlTCYXgQjRqIdkYhlvuAGX8goLgWMx
      fO9rVvMGgVgHg6ej/PJv7nPuSi/3Hs1z4+YNIm8xvj5JHFWe/bflmBTKfnvmVnJ8+uu/Bqlx
      7o8u0hbzEaBAQfazOD6MEmmjKSgQX1yhnC+xXCxw/caHrEw8wfQ10dPsQi9lmSllcVHCZef5
      9hdPKIoKH1w7w9jDIVIVmU9+epPNXNJWIYER7OGn15oYffyQsZFF1gs2c8P3yBoNlHMJvhma
      Idx2Gq+xxlw8Sbj1NFExw9hClnNnepmdHEMJtXKur5Mf0NljTy0e4DWP+873+Nym5DgOqsvF
      +uoqSUfHJy+xnC7jqaygORqxzjME7RItokidajBVtVhenKA11svdr8e5/R/+Dsmph7iifrzR
      blpcebKJGfw913DPDe8sJCcI4NhbDWg9dRpPwEVPKIHX6iUz8zmZsoi+vEq93+HKtatMzS2x
      mCvzyUfXmR++y2qugltfxujtRDqZ9xBwdLW23pZjUyPsbelqCfH5z/+GXwwl6e+uI6QVcFwx
      6uob0WTw+X24vEHCfjeKS2Dy4QOWMyVMCwJ+H6IW4JNPbzI7PomkaEiihNfrRtVcqP4ocw+/
      ZGR2ZUfqFNEbQyvM8Nlnn1OWI3hUBUURQVRQJKhvaEEWHPw+Ly6PF0WWcGkewh6TL375LXIw
      iuw4eHy+Q0/JUuNoOVF+AKOU4u73j3G89Xx09ex7vVmfrRX4bunoguI3JsGvXve0yaYf4KgK
      Tr8tJ7pQ9mGheCJ8dPsnh3KsFr/C7/a/SNftOLyUzeJ9ykRBwLbtAxd+2EwuZhjG1u/22u44
      ybZ/NgwDy7JqBTKOC6ah70jX9y4TY/2QfXtTZgG58uvZtwuFAtVqlUKhcGA/wNsUyHiXfoBy
      uYzjOK/dT9tlNT/AOySlizxaKe+S2ryczWp3bff9ZHvlvTmobK+Vki9k9T4FWZYJBAKIongi
      l0IcVbtfUoD41DATC2naTg3Q3Vy39UquVCq4XC+WBlSrlY3op7caiOskEiVisRDgUKnouFwb
      xk3bqLCSytPcUP+De0gkEsRiG6tADb2CgMFyyqatMbjvdps4tkV8ZYWW5paX9ls1bdaLJ2Np
      sXaS7bZHzEtWoJwh8fGtDyguz5AuFUgnEqwkcywvL5LP5rAdm3y+wOryEno5x8z0FLNLa9hm
      lZmJMWbja8BGqvLRp09Zy5QAh2Iui+lALp+nnEsyPv6MiqmzNDvL2PgzyobOcnwVs1pkYmyU
      VDbP6noKvZRhbGySYtXEsU3yxSKV3DrZkkmxkGd1Jc70xBhr2RLZxBKlSpGV9TzlfJKxsUkq
      5oZ5dHlhivHn+8mtxxl/NotuWays/mplgqg5wl6PPYdAgigTC/jJlVeZepDg8q1LLCVT2JUy
      EaeBeMLALKTwi0US1Qh2ch61oFB1RVmdnaKzuR6jnGVs9AnCQo6f/eYNMutxZMshsbBEamGc
      5XyV9cp5xKpBSDaIryTJJLPouVW0+lY2q3zeu/MZi+tllgoOP73cydz0PJJcwbLXwJGwjSpK
      NMz87BJRMYMv4AXH5PuvvmA5XyJRVvjkUifVik44YLK4Fic1s0xbk4fRmfXD7OtD4agKTr8t
      x6ZQtq2XmZ+fZSqZJez20NHbR9jnAgRaGyLcvz9Ga9fGkEGUFBqbWwn5PDg4mIaOYW5o8tLi
      KmcuXSWsCtgINDbGmLj3PXXd3bhDDdz44ENOt9cTqmugob4eWdjoAEkS0atVrOcL8zVvlKsf
      3eJsVwOCqOJXC2SrAcxcAjUUQvUEaGtpwqPuPBV3OMa1G5/Q37FhSvRHYjTW1yGJAjgWVd1A
      fB75YpSLVA2TfPHoc4G+LbUaYa/HS2+A9rZWVtNFzl8cxOcSUFs2bqy+/n40r4fBi26CCvSe
      7kdTJFwSWB0dVNOLfP3L7/G19ALQ1dfP/HKKc4NnkAHBE2Hg0mWiXhfhi2eIJzJoriAdHQKa
      JtKg+YkGw7g0kaWlFRR3gFNdfjSaWFhZx6VtzA2a2vsJ2yqSFUF0BXAiPkCmo6MF0YkhaRr9
      PQ6KHSSeyGzNKTo6OpBVhRYPNHpcrOcMBloaqJb9OM/Nhif16VnjzXlnjjDbMqhUDRRVQ5FP
      /tr2tVyZpfzJyLTsd8n813/0e7WAmDfgnZlBRUnB86uSYRbQMOj0Hm2BjIPbt/WteIBcLnci
      4wFyuVwtHuA4Ycsame0mf/XlGgWRoJ+AdjzedpvxAI7jnMjUiI7j/GoWyn4VRqXAeqZIOFqH
      SzkeNxNArmoxsv7DfoAzda5jowCb1CbBr8eR5tBwzBIPHj4hm86QL++diNa2S8wvvLmtPhOf
      I6ODWUyykjm8IPcaJ4MjfQNUsxkCLV30tTdil9N88dm3GEhcutDJt99NgQK9zX6GRhaxb39I
      fPgxWmMncmGJuXSVq+dOkbWDBEmCI/N4bAxXqIUWd5WFTAHZFUVYHSMbXud2t4d1u5G5J9+S
      121OXxhg+vthqrLD2bN9PHowQkNXP5fPdZ/oxFg1Xo8jVQDFrVFYSmI315FbWyXSc55G0mSz
      ObrPXsUvr+PzBjkn1NHRECC32sGF/ka+/iaBWyiQtQPoyVnSLi9qcQHRF8HvUUBUuXn7OvOj
      o4SiZ3Gaz6DmRqnmM0iRDm42uZleW6Wh6wzN9SIFw6GlMUqpkMWwQTvBGlDzBL8eR3qpJU+E
      Vr/Fna/vovubENaneLZWoamphZBfwesNoGle9Owc84ki9bEIiC4CHhFftJmIz01LXQBvtJGu
      s+dxmxUESSUYCSEBwVAIbzjI2KMhTCVIQ0MjYdI8GJunvb2bUMiL6vLg1VQMQ8cdCCKf8GU1
      J9WXcVTtPlEBMYdJPFtmIv3DfoDeiEZr4HgE29cSY70ZR24FOq4EZZurdTsDNnanHjeMItls
      eYd9e7PwxXab/0Fktm1vFXnYbt8+iGx7PECxWNySbRaD2GQv2WZ50u12+4PK9u6TV8v2Ov9i
      sbjlG3if/bT7/GsKsA+SJOMIL0aIgqwgIOyIJnpZ5iAqKpIgIEsvLuJmtNLmdu9DJooiLpcL
      0zRxuVxb221POruXbHPo8SYyVVV3tOOgsr3OwTTNrQIZ77Ofdp9/TQH2YaVk8SjxZovjYl6Z
      m22HW3tge7TWSU2Nst1De1gcS3tHdn6crx5PgJ5m5NnyS99vFtGuUeNtOZaPCqsqothJVvM+
      SmWDtYUJRmfW6B+8QizgolKpYJSKjI4/JltSuXzpFCNDQ/ibTxNRDcL1Tawm1tAki7XVNSL1
      9TybnKat/wKu6hoz8ytEO/qpk3I8mV7j/Ll+5safokY7GOhpOdH1AU7q0/8YFco+HrT19BKf
      msZ2bGaWM9z8YJCZ8bGt781qBTnYSH9MZS1XpmKCY5kk11cwLYuVtXVWl+ap7xxANApYls7I
      6ATpbIHzlwepFtJMLaS5dfMahYUxljJFluamqJ5MM3qNN+R4KoAoorgChN0W+YqJmwpffvUN
      7nADAIIgIiDi9bg3VvvJMqJVZWl1HQWDr+/cIZnXcfkjRP0uSvkslqCgqhKKy41LkVFkFb+q
      8+Wd73A8ASQHAuHwMe2QGu+Lmh9gH2ZTJR69YaHso5gE1wplvxknc8B4CNR7ZD7ueDOrhHKS
      JxE/MmoKsA+WXkG03ywgxpEkMuXDDIjZWSAD9k+CdVwDYvL5PLqu1wJijgsVQWW+tH1G/PzC
      bwuSudwU3CrMd9RsBsTIsnwil0IcVbtfUoDU0hSPn8Xp7D9HRyy0Q8sOUspyYeIRz5ZSdA5c
      put5cqpND9za+jqx+noc2P/GMcrcf3CfXFEn1NjFxTNd2yamFlNPhlhIVbhw9ToR7x5BFI6D
      w37pth1sGwRReGVi3YppkyiejJjgGm/OS3d0Im/w8UcfkJsbJ1msUMznSGeLzMzOUCmVsB2H
      crlCtZQjvpzAsEzKxSLrqSwABUvl008/pbMhQHptmZW1FJahM7+4xMLiIkY5z+JyglIhy0o8
      TrFiYFSKLC0tkS9VQXFz5cYtAgE/l850US1kiK8kMCwHsNHlIJ98dIXx4cdYRoXleJxS1aSY
      TRFfSZBNTPLV3VFyxRLlUpH1dJZcap2l5QSWYzA3vYReLpJYXSadP/lpUHZTK5T9euybGKs9
      FiGRX2fx0TinL18lnU4h6GVCLe3E5xdJzo2xmCozcP0q2akl2i9eoA4ori/w+ecrnLpwnaXH
      3zG6oPNbf+c3yOY2FMSq6uSKRdbmxvD6/cTzDkp+DsWtMrdu8uHFjhcNsUo8Ghol4FdJlW3O
      dUXJJRa4l0+i+eqYGLrDw4kVQh1nCBbnscMd9DWp6NUqZiXLvYcTdJ0ZoLQwwqPJeS7/2u9Q
      TOcRi3HWtQDV+QQfXrt4GP18aNQKZLweL49pbJNcNs2z5SQRj4fWnn5aYxvmqdamCGMPHhFp
      bUNw1/PJT27THgsQaz9FT3MdAN66Nj799FNaIlVMuYOzrfWU9wh28IRi9J/uwi2JmEjUR4Mv
      bQMWtuSiLhzAMDaGI95wAyGPTCgUQbdkrt36hIunWjl1bhBZT1MVvQQDQTwumYaO03TWeSiI
      Aa5d7KFY2AiJlFU/vf39hJ/XDbMMHdOy0fWT+fTcTs0T/JrH3S1oqQ8zOTtPa/95In4Nl7RR
      wK6nuwc1GKKt26Ep6Md3vofppSQdoW7a2l7oUUvLZqLZMC2NcQyph5jfT1iRcWwb1euhTXEh
      2DbILloa3SQKU3z25T06L366tZ/unh6Q/JztrWcuUWKgrxmA9s52/H4v6WSS5vMXmXg2i7u5
      E2wDX7SdxqZWrMI4mUqEtiY/gqLSXu8nb4fpiUVwogFc8saJb7ZVL+WxND/lYpH66OFnJqhx
      dBwLR1ghm6JQsYjURVGl4+GLTRYqLJd+uGvO1ruOzZCjFhDzZhyL96UvGMG31wjoCFFsnVb1
      h/0Aa2v5Y5IY64UfIJPJnMjEWJlMppYY6zghKC4q1ranu+zFBsIeeSPB7jFj0w8gCALB4DF7
      mhyAo2r3e1MAx3HQdQNVU7Gea/Hu741qBRMRlyKDKO1Yhryp+TgOlm0jSRK2aVCu6siKhqa+
      X93NVCxGUi9Pij/t8B1LBdhkeyjiSeKo2v0eB9wl/vrf/gWZssnDR0MvfVtJL3Lnu/s8GZtm
      fXac5HMPay6dIFc2eDT0cEPg2Ew8ewZAavoxXw+N8NVX37JfiquVpaU9iwwBpBJLlLfd07Zd
      Ib6cfLPTq/ErwXt9jHZ0tDE/u4ADpOJTDI3O4Y4288FgP0vz61y59REBSWBl9Hse3PkFPn8d
      /Y0qyBuWmOXpYZ7OJBC8EQYAUfFw/ko/yaG7FEppHj8YxnBFON2o8Hh8ifaeLp5++y31Zy5R
      T4HlgkNfR4jRyXkaOs7hM9IokslfPpxDlUS6mjzcfzTHjZuXmJ6cIdzUucvzXONXnfd6rbVA
      DLeRIlMySa4lufTRbfzVHCXAownkihtZjSXVy9UPb1PnEzGrledeX4tsQeDW7Y+JBTZy/Ft6
      gS/+8l+TUMJY8Snm1osYhSK4PagSVE2FgfPnuHr+FJYjc+3GFQqpNLatMz29QLVcxjJ1us7f
      pL8rRl1LNxcuXKajOYZXFSkX8lhHbhN7O2qe4NfjPSqAhN/noftUByIyDS3NPPn2K4xgDA/Q
      0NNL/PG3fDM0huLxo0kCfr8flzeASxEJhqKE/ALf3PkWU9wozucONfIbP/uP6I+AHWynKaTh
      8noQbQdHENBcLjSxyoMnzwhGoiiSgNvjRnEFaG4I4Q2GUDQvfk3E7fGhyi5yiUnmVzIgCiia
      duIrxR9kvdZx5KjafSz8AMeRxUyZ0T0mwZ+0+9Dk43eT1fwAb0bNDLoPUQ0+bt5pQxdFEcfU
      N+KPHQfLshBFcYd9/21lkiTtsG/bzy1gB5GVy2UqlQqyLG/JtlvfLMvaKka9XQY7rTAHlZmm
      iSAIL8ne5PwrlQ2zxrvuk1fJagpwQHZ7fHcnf9oue51t39Ux9vv9D33elO0eBOzn3X7f5/Au
      93fQY9QUYB+SVXia2l0VHm4f0yHQZma4crm8o6D5SaFcLuP1eg/9uDuupJlf5/PPf86Xd+6S
      Lr64+MV0mqr94imhlwsUSm8WML6dZHyBzZiTYi5DxXixajQ+MUnxVTsorLCQfvkmPSh2Ockv
      vviGbOnlsb7jgL3H33Gn5gh7PXa8AWzDpH3gMi0ek6ezC1gxH6m1NVyuAH7JpiT4UapZyhII
      iKwvPmIxUeH8lUsU4hPMxPOcvXqNsBsmHj0kZXm4PHgG0SyQKYj4pRJlxcfC0yGUWA/eQoKR
      2Xma2vsJymW8ioepiSHSTpBAKYvHrPJ46AFqfTd9HQ3k1tZwRfzMz67R3hyimkkzPrdI3O3m
      0sU+ph7dwwq00hGUmJifQwu1c7a7mXx6HdkbpJxOIaoi89PPEAKtqGv3WS7FuHQkXf9+qFmB
      Xo89h0Cay41jpZl7NkrbmQ/ITI/iq/MRjy/gVMs01rkp2ArJTIWLPQ0sZ5bJZ1QGmrykKgZh
      VaBUMVhLTLDU2kVHWCEen0ZyLEKuMpPLBYTVYS50hTl9/iqJ2XEcRUA0i6SEFgZPR5l9mCE+
      PcL8ahYxMUxbawOClWHiaZZUdh3ZyeF1qfjr22lW1lkdG+LRUh7XyiiuxgixvotkZ57h0Exm
      bRWX5CG5sITkV6jrvUBhbpq2U32I0gBBz2F3e43jwi61s5kefcSdbx8SjsXwhBqIBTfGk7Lb
      j5Sdw/I1bNnKPf4AqqwgihrF1BxPxudwHHD0Ismijs/nw7FsREUjKGTJOQG83hB+r0ZbazOK
      6sLt0lDkjRWGgitAaWWc4cl5HMDj9ePxeGhqbUEGPKFGluNTnO+tY3i2QtQrEQj4kRUF1Rci
      4FJpam5GU1z4fG4UZUO/XarAyKMHzCynQNLwezWUbWuJSul18uUqq2snf1nESbVqH1W7d/gB
      HNumWq2CKKOpCra9YYLaNFnZlgmijIANiDiOjSgI2I7BvS9/wXpJ4uav3Saiyeh6FUcQUWQF
      URSwLRMbEUkEvVrFEWVUSUQQJWx7Y+wviiKmoWMhoogioiSgP2+PqigIOBimiSxLmKaNIotY
      joCAjSCIGNUKtiChyhKCJGFbFqIogWNRreqIkowkbZjZHNtGEMBGQnBMHEHEsR3k50W+F9Ll
      fRfDHcdJ8KYfIJ1OH0m50bflqNq9YwgkiCIu94t6uJsTk61/5c214NKOfyU0bnz6mzt2rGo7
      LRGiJG+9bjTXzpq72ydAiqqxPdfDzm2FrfXoirKxN0l40Q51v/0K0o7z2hBtth22umHbfR12
      S1xqfHmEKB/jlaBQmwS/LjUz6D7YegVtj8RYeeM4VorfmRhr83cnKSAmn89vOfFqATHHAENU
      WaluG5cKGh0BFZ96PJ+wtcRYb8aRDWb1Ypqhh0Os58o/uJ1jG6TTuQPtMxmf5t79hyTzb18Q
      u2Q4LOSMHX9V8/hPMGuT4NfjaBTAMRkaGqW9qwNZgEqpQKFUxnZsDL1KpapjVMsUS2Vsu8Ls
      zDKWqVMoFLFsh2q5SLFUwbZMCvk8urkxiU6nCnT1djDx8D5F8/m+ykVml1Y2XuGOg2lazM3P
      YVkm5WKBUkXHsS2KhTzlis7JvH1esFnM7qRxVO0+miGQlUUJtBEJbcz67372bxmLm/wHv/MJ
      T7+5T/uZAaYffMt6SeT/b+/Mups4tzT81CSVZlmS5wkPYGMbYxvCfAInZ/VZ/bPyS/q2b/qq
      1+nutXLSp09CmGzMZGNjY/AgS9ZozUOpqlR9ISA2AQIJYDvouSpvl1RbJe36vqr97Xf/6V+/
      Buos3Po/lsO7HJ+aIb36GFfXCD2+Kg9Wk5y9eJmekAdBUnD7Aox2q6w/j5HYWWJ4YIRkvkIx
      GWVgqI+tZI1SJoFk5NmKFKlaEkNdDqLpEsWSwJ+/OX+k54XNm+AP42BGAMmDloug6TVK5Tim
      0sdoh4+SodM1OMbxbhemvZOvr3yFyyYDJrmKyMUrl+kOBhifnkLR08gtxxgb7CQWT/z83maN
      tWiZkFtk8ORp+tobhdYDXV7uL4YJtTYEvLC5mDg9TV+rl0LVYHxyEp/6Bq3RI0YzE/yBxz2Q
      owo2picHuXt7jrzmJuCtobT20Or20dkRACXI5EgLmzspFMVBT28309OjhDe2sCSFUjaN5O3C
      p9RI7hbp7WmIZrlVi1s/zdJ76gxBv5eg1wOySl9nG87QMTrbfATdNvp6+/D7g6iqTGt7O90h
      L9//199IadaRL4hp8mE0C2KASiHNVjRNa1cfAU8jf5EsVNku1fftN9xix2M/nFOMl4mwfD6P
      1+s9aHc+mIPy+yhPdz8aDk+QkZHgPpvdqjGg7s8DaIUyZuVw5wGy2eyRzANks9lmHuAwIdtV
      NKtx0u2SiN9/uOfWL/MAkiTh8Xze/mQfg4PyuxkAbyFdMVnebeQTerwKYyHHr7zicHBYtEo/
      lEMhj16Mb/M/3/033333PbHcLwtetOQ26+lCY99UjNxHaKr7dHUF84UWSToS3Sd49eThXcqv
      PR4uZVLk3rMYp7y9ymax2fi3ydt5Ta9QZuLsBRyVJLuJHTYWthDd7RxvdfI0sUPI4cH0iKyu
      ZfCLBqKjzOy9eYpFnYkLV9hemidXKjN+7q+0ugwe3r5JTvRy8cwkRj5J1nKiVtNoNiebKys4
      2/qRyxluXP8n7o4hgqKGWs1z5+59lGA/DsvCKGe4tbCI3d/F6bEhqloFRBdz178jX1U4feky
      IZfA0vw9UlWYPvsVLtlkYf42iUiSoWs9PJy7T67mYHqin4XFR1R1O1+dm2Dp/gPKhsXM+av4
      jl4V4Rup1+u/vtMh5KD8fm1iq7M4d4tnCZOQR6JiGETXV8nm8gT6T9IVUHk0ewfFH0IvFNEM
      A3eojz9NdrG1k8XfdYKJXn/jqm2UyBRrJDY3yGs6Dq+bZHSHSLpAZmuZ3ZJGLp2hbvdw/vIF
      7HWdYi5PMhWjY2iKqZE+AGKrj4mXdTLZDPW6hVYuodUMHC2dXBzro1AzsWpVMqUqud0o8d0y
      hr6LzXucSzNjmHqVQrFCJrxKPG/SMXiSUz0+tqNpekanGGxz/KG6w79UbzhqHJTf+wJAUpzM
      XLjC+ekx7EqjG3sgGMSmegj4nIiKk/PX/kIlukbd7kCRZNwuJ5LNSYvXRWTtIfeXt3g5nRME
      AX8ggCyKCLILr5xFbemjp7sXmyTidDlxOl3IkoTToeJwOQkG2og+vcf9J5uoThftg8dw1i2c
      TieiAIpdRZEl3G4Pkl1trM0XBEQBPL4AdllElr1kY4vMr4SxSQ0VAH8whE1RcDpUbA4ngRYX
      Kw9mWXoWAy1HJF0iFY+gHc2VBK9odoj5MD5aHsDQSjy8N09N9jEzc5pD+rj8FXo5y/y9h0ju
      dqYmR1FeGwvDe4SxjsJNcFMY67fx0cJOtrs4c/Hrj/V2nxzF6efClatv/X+rKtLa0/jRC4Cm
      ab/QlKnX67/L9nr6/3Xby/ay72vTdR3DMBrNuj/gtbD/Kcz72n7v599rMwzjref4Y5+nvbaj
      OV5+BkzTgD3TUl3XEUVxXzLnpQra+9gkSdqXzHmpePY+NlmW9yVzXiq+tbZVzAAACQBJREFU
      vW7TNI1KpYKiKK9sexNXhmFgWdZ72WD/tETXdQRBeC/bbzlPlUpjWfznOE97bc0AeAt5Q2Qt
      ZzAaUml1Hv5FcpIk4Xa7kSQJh+NwT9feRK1Ww+/3f/bj7h9btBzXf/wnN27Pkyv/LDhVKxfR
      9uiGm7pGpfrrglRmtUz8RQPtT0EkvI7+xocHFomd2N4LONXsDjfuzO9rkPEuDAsqhoV5xJ4q
      ioLOjR9vUztiK7z2jkCfk/0jgF4hNDDJgE9ncW2T4b4Q+Uwa2ZJR2urYsaNaZfK1OgYK+dQ2
      0USewZPjCMU4q+EEA8PjBL12SrtRFh+voXYNUc/vEM1bjI8NkdxYJ1kyGR8fIRt9TiRV4cTE
      OLnIUzKGixO9IXK7CTTJi57dRrOFGOjwoNdtWNUCikfl6eMn+LuHye2mUB0+3IEAlXwWn8+H
      ZVRZXloinjW5HPLweHGF9oFBNm7codY5TDUXZ3k7wcjYOFpqk63dGmMnRziklY4fTDm6jika
      bCWq+MQCra0BdtN5rFqGtZ0Sp0+NkEvEyVUFbHqKRFnm9OQ4u+EnbMQqjM1MkN9aIaW7OH1y
      APGIZpbflzcLY7m9SHqa5ysLBHrHMWJhaPUSiySR9TKtAR9FSyWzvcNwT4hwooCWiHCiy81K
      skTQY7H0NM7IiSFiVYH8bpqt1SiOoJt8vEiX30EsHyOVNGiTy4QTUZZnH2JZdSTlErvxDCM9
      FZJWC97dZ6zUu/DYWjBj68jdfmKZEi09jUucWC/zfLOMUSzi8/nYeraCt3MQiwhP7t1hI1Fk
      K1VjovsYtpF+Hnz/dwqmgGZqWHUnp072/oE6wlisRnbp7e4msrWGYi+xaVpkc2me3rqJLkpI
      Phexh8tc/us3rN9/zMpaHHeLRDJi0qUa7KTWufWPOURRJNTfS6/r8E//fg+/+O7j2+ss3F/A
      Fgjg8LZyrCuIKICkelBrMUqiD+XFRcHtC9DidTd0f2pVIjuJFx1WBDAqbEdj6IZGOmdwrLeD
      umHiC4Twul2IooBWyrCTzCCICq0d3YxPTeFRFAYGj+F0OCll4qRKBi6byE74GRvRFKo3QKtH
      YeXpBgCqv53i5jL2UHtDqlsUSMYiZIsaqtNNT/8wYyf6sdvtqA4H7pYQQydG6e/uRNSLRGNJ
      yoUc5ZpOJvd+tceHFcsokcmViCfT5NJJ2k6c4NHNm7R19OBv7WR8apqegIeewRFaXDrpvMRA
      dwemBVoxTTSWwhIk2rt7mT53Bu9n1D86qETY/hHAGWJiSABZJdDiRa81ShbbT44iyDItx6cw
      JRWbWMdhCVitPpBFhhwCi89LLITzzPxFBcHOqakJ8uUaHp8PM+Sjagh4vC6oC8giOKmxlt8h
      XJT5l2CIbqdCRQe/34coCEiSl1MjTkxJpcWt4lediGMjuFUbUt8gw94WFMGEyi4F0cV4qFH5
      1T14EnU3g23Ag8cpk0plsDu9uDoCCMicPjtDJlfC4w8QmHSTr5rY7TYEUcTas0z2SCKqnLvy
      NQG/F61SRrY5uPrNNdxeD/6rl8gUqvjdfvyjPhAUzl2cRKvL+HwK4dl5wlUbo54eui/5KNXA
      9Xpy5BNyUEshmgUxbyFX0cjrAkGHjPMz/hB+Ky8TYdVq9UjKox9UIqwZAG+hVqsdqaXFi4uL
      TExMUKvV9hV8HBUOyu9mALwFXdcP7NHc76Hp94dx+Mf2A+IoXf330vT7A4/bHAGafMk0R4Am
      XzTSt99+++1BO3FYSW4+4fbdRwiuAC3ug3myYlayzM0/Qnb7cauNm8Ttp4+YffgE1ddKbvsJ
      cw+WUP3t5LaXmbv/GDXQgUdVsIwSN3+4Tni3QkfQydyNn1hPlekKOJi7dZP1ZJm+rrZPooWk
      5ZPcmb3Ls8guvd0diILA9upDZh+uNPwOLzP3YBm1pZ1seIm795dQg514VBlLL3Lzx+ts71Zo
      DziYu3GD9VSZ7oDK7M2bbCTL9H4kv5sjwDvYTpe4eu0i2WiEg5ooijYXx3o7sV5pZ+ok83Dt
      0ini0QTJgs61P00RD0dIlkyuXT1HfGMLgNzGGp0zX9PhqBPbWCU4dpkeSWMrEabtxHkG7FUS
      v7/X4RuRHT7OXrhEq1PCxGr4XRB+9rtoNPzejJAqW1y7+hXx9U0AspvP6Jz5mja1TmxrjdD4
      ZbpFjc1EhPbR8/TbqyR/e2/EfTQD4B1Isows2RB4zxV0nwBBUrDty0PUkWQbkqKAaSDJCpJs
      b2xLMpKsIliNX7Wug+qQsYkyNaOOXVVQFRFNryPbbKh2kdonqoATRIutpyuE+oewieILv+0v
      /Db3+K0jyTKS7Hjlt6GDwyFjEyU0w8RuV3Aown6/P9JX0rwJfgdrj24TTpUI9J5k8njXgcgm
      VrMxrt+6S010c/HyWQzNIPl8gUShRsfwaerxZRKFKh3DM9QTSyTyVTqGz9Dm0HAo8NPsEqLd
      yfnJY8zOLWHITi7NDHD37mN00cG1P1/C9gk+2O7zu/zwpECbz8vkmREqJYPE8wWShRqdx6cw
      Yo9JFqp0Dp/BjC+RKFTpPH6WVnsV1WZxY3YZ0e7i/GQfs3PLGLKTyzPHmJtfwhCdXL128aP4
      3QyAd2BZdQxjf6HFZ/ehbmK8WJNdSkco29vp9NkxzHqjn5ll/XJbrLP2LMzg8UEwDRCkV33a
      Xt+WpE8zCXjd74q9gw6fbY+vdQzT2r8t1ll7ts3g8YG3+m2aBsJH9LsZAE2+aJr3AE2+aJoB
      0OSLphkATb5omgHQ5IumGQBNjjzJtTn+7T/+F6uc4vtbj97Z6NBMrvCPR5FXfzdlUZoceSq5
      GIXIDivxY2ztpNhefUbriW4iqymsUoSVSJyWYIhMyeLqkMhPP8yiZ8e4dn60OQI0+WMwduky
      T27coA48f7BAiRILD9ZYebTE9FgPD2ISQnGDRK5K1/Fp1J1F/vaf/94MgCZ/DBQ1SLuzRCxb
      QxTz/Pj3m2Q0HVGSUWQJu6oiK40Jz86zRyyndQb7+5uJsCZHH9OoUUdGtHQ0U8Am1qnUTBTF
      hkgj81wzQcJEFEXKlSqibMNpV5oB0OTLpjkFavJF8/8hwvE8SGrsuQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart of Total Penalty Points' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Map and Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Totals' width='192'>
      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
      HoEAydBVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Penalty Points for Counties and Offences' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage Of Penalty Points Map' width='192'>
      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
      fNH5ArrMwmk3Ql6WAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot of Speeding and Careless Driving' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table of Totals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Worst Offending County' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO292XMcV5ro9zuZWRuqCrWgsO8EQYiLSErU3lJv09M9i+/4tufa1zdiboQd
      E+FnP/g/sSOuHxyOOxGe6XZ3z4y6NT0ttVoaiZIoUdxJACQBEvu+FGpDLVmZefxQC7IKAEVK
      lOQmz09Bgcg8eTIZcb5zvvOdbxHJZFJ6vV4UiqcRw+v1EgwGv+3vUCi+FbRv+wMUim8TJQCK
      pxolAIqnGiUAiqcaJQCKpxolAIqnGiUAiqcaJQCKpxolAIqnGiUAiqcaJQCKpxolAIqnGiUA
      iqcaJQCKp5ZyuawEQPH0ommaEgDF04uu60oAFE83SgAUTzVKABRPHY7jUCqVkFJifNsfo1B8
      06ysrvBP775DW7xNCYDi6WMrmWTw7GlC8ahSgRRPD1JKHMdheWODQGsYEEoAFE8PUkosy2Kn
      sIum64DaBCueEqSUAHz62WfMT98DKr+rPYDiqaBUKvHW799mY2MTs2RimRYen0cJgOLJREpJ
      Pp8nEAggpWRlZYWsBr3nzuCZX8Tj8wLKDKp4QnEcB9M0KZfLrKys8Icrl+geHSEUjxGKx+rt
      1B5A8UQihMDr9WIYBiMjI7RHo0Q6EvV71VZKABRPJpqmEQwGCYVC2LbNSyefZe7TS+ym0q5W
      SgVSPAV8+tln3Lg3Rby3B6/f33BPrQCKJ55INEL/s8eJdHeyvbRcN4kqFUjxVPDcmbMcb01w
      7/wFtsbvMHP1RvWOUoEUTwG6rnPq5Enu3r9HsbWlqgapgzDFE4xlWWSzWa7euIFZLpPazXL7
      1jiax+C5P/9xvZ0SAMUTyfr6Or/4xS+IjA7TNTpCu2+Q8OgRMtvbeAN7G2GRy+WkqhGmeNKQ
      UrK0tMT7H53H6Omgc3iobv+XUiKlRAihVgDFk4OUks3NTe7PziAdyScff4zl95KfmyW5ssbY
      Ky+hGxoVORAIoVQgxROAlJJSqcQHFz4hKS1C7QkQ0H32WdbmF3DSaTLb2whN1J+pHQYrFUjx
      R082m+XX//YebWMjdf1eyr1B7qZ2BFC7p84BFH/UZLNZxsfHKUqncXO7b/CL+uB3owRA8UfN
      xxcusKI7DJ455bp6wNTPAaMfJQCKP3K6OjoQuo6mNQ5lKdk34wux96ciJMoVQvFHzujoKNFd
      k9WbE6Q3tsgmU5iFYv2+bVnYls3CxB3sso2UkN1OsbWwVDGFqk2w4knAcRx+/a+/ZSG5hVkq
      ceylF8inM5hrmxSEZPXOFD3DQ7Qk2ugLhJheXSbY3qYEQPHkkM/n2d3dJZvNcvfePU4eP46u
      aXz4ySe88eqrfPDhhwwPD9Pb08P5zz/je6+8qgRA8eSzvLzML3/5S37wgx9w5syZ+nXTNJUA
      KJ58pqamiEQidHZ2NlxfW1tTAqB4Osnlcvzh/IfKFULx9FBzggMYHx8nrauAGMVTQG3QO46D
      lBLbttnc2mJrfUUJgOLJxnEcFhcXSSQSbGxssL65weWrVxGtYYbPnFJ7AMWTTS6X42dv/RqP
      z8fa8jKn33gZj8/H1sqacodWPPmk02mCiTi2JgjlI5RKJeJdHYRjUUAqVwjFk4mUkhs3b/LB
      zWu0DQ8gNI34QD+L07OV+0hVIknx5GHbNnenp7kxdQcRa6Xj+DE0TdBz9AhWuUwpU80MJ1VW
      CMUTxvb2Nn+48DF2MEDHmZP161IC0mHpzjTt3Y2HYUoAFI+dVCrFxOQkoVCI4aEhwuFw3fxo
      GJUhJw4K1/qK+Hw+Co6Nx3ZYvTGOCPhpHx4ktXiXS1dm6O7t5fjZE5Qym5x/+33aTypfIMVX
      pGZjrw3onZ0d/vmD9wn391IulcivrtPf1o5plcmaJeK+AIO9veRLRRKxOACRSITr4+MYmsZg
      fz+9vb37/PsflqWlJYLBIJO3b3N7eoqSYbKatHj+lVHe+eW/8df/01+zNn4RRr7D9qU/qBVA
      8eWRUpJOp3nrX3/Lf/jpf0cgEMDr9eLRNLwtAUJtcaLdXZRME6Qk5vdT3M1zY2cLzWtwe2Ya
      zdDZXV0nPNCHN+Dl3sRNXjdNRo4caVglLl76HE1olE2TsbEx4vF4Q5qT2t/7+vqQUhKNRolF
      o2TLO/giESLRNjpGR5iZmGJk7BnOv/sWOxubSgAUXw7btnn73XdZK+4SHBniwqXPOXvyFDs7
      O1i2jaZVitAJIfD4fPXnfMEWfMGWyi9tbQDE+nrr9x1Hcv7aFUzT5MTx49VrDpMrS7SPjqCF
      ffzmwkc82zvAsydPUiqVuHDxIqeOHyeZSuH3+0gmk9yZmyMQbMF2/Fjbs1z5NEkg3k9xdw3D
      H2Tk5HFuOy1KBVJ8OTY2N3nnxlUSR4ZACHZ3UqTmFykmdxj67mvohmtu3UvGfDBN9/OZDPGd
      HD/4/vcBGJ+YYLqYJdQWrz+S2dyivJmkWCgQOzpMfjuJL9JKPrkDWym8g73Ee7uRUlJMb7K8
      mmbomVHufHSe0y+fZmlmmcTwMbUCKL4cyWQSK7eLYzugCWzLwus46D7fo29wm5r7AgE2F1aA
      SnG7W7P3SZx6BiH20p1EOhLI9r2KL8FoKwDBaITlnRssXLrC8x0/QTcM/JF2jkY70DRB5+AQ
      xYLD6JlnAWUFUnxJurq6CNy9g1kqsnj1BrrfT8gw8HR1IJoD1JGVMS7F4auAi3LJJJ1Os7i0
      xK2JCYx4xCVUe5HuBwmabhj0v/Q88VQaTdeRUjZsqEv5AnpbFCGEiglWfHmu37jBeHobn89P
      HzrbyW3S4Rai3V37LThSIgHBQwhAta1j2ayPT6ID/efOuBL9yFqz6ua3/hiwXyikdCpvFgJN
      E2wvr1JKpzhaPSdQrhCKL8XOzg65uUWGdC8vvfACtu0Q6exoHPy13CSiMgC/ePBXfggEumEQ
      GxkmUywgkeysr2MWi1Wzq2ga+JX+D1oRKtdrbSXx7k4K+SIbSytsr64rFUjx6FiWxZ3lRRLh
      Vl44d65i6TEM2Kf6AC4T5aMSaA0Tbk9w9+IVyiWTQGsYyywx9uI5hHbwgN/PXpuKLAoGnj3J
      zuoaxd28EgDFozM/P49jGBwZGEAIQblcpi0eZ2EnhTfYguHxoOl6VeV5+MEvqR2qVQ/YJHQf
      HWkY6KmNTe5du8HoubP1TfGjICUYXg/tgwMob1DFlyIQCKAjmV6Yx7Ztbty8yfj6CprHYPHi
      FVbvTFUaCvarPQelbAOQe6fKlUdFfT/gDmXcmF+graeLvVyfksPSHlaecw64XntO1QdQfAl6
      enr4T3/2l+RyOTRNY3BggMmtdQqpNN6yRYurEnud+hg9ZEUQoOFW7EXdmiSrT6U3t/B5Ddp6
      uhuEpfYC90rhrgS571WiogpltpNKABRfjkgkQiQSASCRSPDiwDBrGxtMeTz4WloOeMI1IA/V
      igT7ZvOq3b9cKrG9sMjgyWcqLUWlrWufXe+jUetq7E+IioVp5f4Mu8kdJQCKh8ft+Fbz7tQ0
      DSklx44dI18qEjs5RqA13Dju6sloebAlSBzewCqV0AydUr6A4fVWDt6qRa9re+/Uxibrcwt0
      Dg0Q7Wivfme1a7FnIl25N0M4EqJ3eEAJgOLRyOfzaJqGEIJ8Pt+gdgz09nH7888oB1vw+gOV
      i7XbX9b7ufqcPxSitb2dtbkF7LKJtB1OvvEqtVXDtm1W78/Sf+okm/OL5HZS9I0dq3RR7SO1
      sUm5ZLKbSjF8/Ci6YahNsOLhqJUhMk2TQqFAPp+vX3ccB13XaW1t5S9fe5316fsVi86jDnpJ
      w55WSoljV1KZCE0j1t3F0NnTHHn+ORwpKeR2AUluJ8WN9z4kMTiIr6WFziNDOJYN7A1+6Tis
      Tt/Hq2sMnxirnxKrFUDxSHi9XjRNw3Eq1pVSqQRQN4dmMhkyi8us6zqdx8f23CKkpJDeYn0j
      Q+fgEAGfjrRNVufm0cPtdHS0sjU/i+WLEAsKttMW3b0dFPJ5gqHg3g5CCIRhMHLueWav30AC
      Hp+f4999nfX7M6zfn6G1o4NSsUgulSIUrbhRlC0LhCDamcDj9VasTihfIMVDIoTA7/c3XCuX
      y5RKJYQQmKbJJ59fJN3iIzE2Sn59A8e20euHYyaz41NYToG1HYtXXh4jvTrH2lqK9LUJCqNd
      TK2ajBzxsHTzBruWBvkhMqKN48dClS4k2E5l32H4vBx9+cXaxyEAu2wx9twpzEKRjHCYv36T
      oefOEIpG0HWDYDTK1JWbnHjlHEJooFYAxVdBCIHH46FcLiOlJLWbo210GKFpyOFB1+wP4OWZ
      l57n9qVL9A60AxDpHWVYTjEtvawtzyAzJusbrUR8OsubWZZXt8huTtOW+DEd8YplSdO0RruO
      rDjaSSHQdA2EoK27i7buLjr6epi+Po7QdYR00D0ebNPEKluVVQC1Aii+AoZhEAqFyOVyFItF
      ioaOplcCYbaXltHyBTAMhISyJrl//Qrx0bP0dkQBSC/dY2Fb8OLrZ7n30SY9L7zM4sX3Gfjh
      X5LouUNmeR5x5BgL82t0xI/U3+uOBKtfAzqGh7l/8xaDx0eJJtoIRlo5/cYrpNY3iXYk6kE6
      0vWsEgDFV0IIQUtLC7u7u6BpmPkCmbV1+nwBXvuTN+qm0nx2izfv3uWTf32LvPwpsRaHgL3D
      /M1p1udmePVPXufme2/j6TpO0A8Zb4ThV7/Dx/9ynhM//NOqzu467KoeAAitcnwmbYeVqWkw
      PNUSSQLpVNrHujoAcKSDQDRaaJU7tOJxYFkW127cwDRNjh45si8XP1QKVbx76SKdDRUd93Ds
      quWmamatI/cSWdW9Pl0GfiEElmmycP0Gg2MjhOMxNN1oWCGag/dr15QAKL4SNTNoxd/+cKt6
      uVzmZ2/9mujxMQxfRf8WtZPfJpVG1O2nrgFc/dlwr/qcAFbvzZBoixDv7qz6ANU/sOJKcYBT
      npTKGU7xFZBSUigUyGQy9XOBwxBCEA+FSS0ukU+lG315auqMO26gOl4d18wthKisBDTq/tJx
      2JyfP9jz9JA4gVqfag+g+EoIIQgEAng8nvo1x3FYWVkhEAigaRozs7OsJ7fpiMXZmLqLE4u6
      zsgO8P9xoYn9LqXuNCiSiso0+tKLLNy5S0trGJ+rYvxBqo8bJQCKL01t8NdYXFzkysQ46Xye
      steon7bGervxDfaylM8TP30SX8ilclcjug55QS2vYb3NvrDKqooTCIfwBVvIZ3P4A4Faxw8Q
      rQpKABSPjXQuSzkRo6NtpHKhNm6rozDQ2vpI/cmqjb/29xrC1anbJFrOF4hUU6fUruuulYJa
      XIFrNVACoHhkpJRYloVhGA2qhUc3KKQzhOKxqvslruCXmvmSAyb8A3z3pXvDW7kgHadyuFb1
      GhVUPVMdh835Bdq62tF1nXK5zPbaOplkitZYFM3QSXR3HagGKQFQPDK2bVMsFgkGgw0z8NTC
      PG1D/Yc8VR35zWPwMBfo+iQv678KXd9rWXV/SG9usb28gldIhp8/Q3Jtgys3ppChKN5onMW1
      XUq5NKeLJfqqSbzcq4kSAMUjo+s6oVBo34zqWBbYdsWOL2sDfi+0sZIbqFEF2bdCNMlC/Tkh
      0NyDV0rK5TJbs7MMjh3FG2xhc3mVe9PzeAdG0X1+JBIjEMQTjbE8e5uO3m481cRd9c2xOgdQ
      PCwPsqhIKXnnD++SDgWIdnfVzZfN7LPwuyNWHoAAzEKBmxcuEwoHsSXk8wUsBywHNJ8fT6wN
      X1t7PaC+9qAQgnImTWHmDudePElnX2/l+5QznOJhMU2TUqmEx+PZ5xVa43uvv8E7H35AUq4S
      7+ne23hW79dm8tpKUFkkDhCmqqt1c4a5fDpLOdpBLtSKHmjBqxt4XTl/6j/dslf9uxYI4DUE
      gabJXgmA4qHQdR3DMNCrzm5Qqcjy2ZWrCE3n3LMnmVtc4u7aFsmJKWLhSbqODGFbNrl0Bk9L
      Cy3BINKxSfT24PH7Dpz0K1bRxhu1w671xSV8bQNoPn+1rYRq0gd3lrhKxghX+CYSzfAg/UGk
      dKo+RSARSgVSPDq2bbO5uYlt2/zDex9STHRj5zLoHi/e9k5AUEpuUU7voHk8aF4v3kgMq1ig
      nEkTE0WGTjxDS2u40bxZ1c1rK0cNTdPY2dzi9v01Ar0D1X3F/u+q5yBtOFzb21vYxQLmzB3O
      vXCCWGdH5XRZCYDiYZFSMjE5ycSdu0yXJLqm4aS28NsWhaOn0FtaDsz/KaoDtqYM2YU85ZV5
      Ij4N07KxpIbPgNGzp/BV1Svp2htoQjB3e5qdcFf1Qx7ye+sWpD0hcEolrMV7nHvhBJF4TKlA
      iodHSsnVyTvMlGx8gyMIBKKjh53ZKYJ+/95Aa85ssueZBgj0QAvG0ROY1asGkLt/m4vvnuf4
      cyfp6O+rt9Zqeo2uN1hvvsjFoR7z2HRb8/kg3klmK0kkHlXOcIqHR9M0/tO//yvOtkWQpllR
      OTwGoWMnEZp+8EN1majNx5WBWcv2Vtu0BkaOEz7zEqtzS1iWVXd+cxyHmVuTrCbzroD5Sm+O
      dA5IkLX34r18vLL+3sotDaf6ixIAxSPh8Xj48ffe4LQfUtc+xzHNBwzCCrJhSXAHtFTdqaVT
      CV7RDcyOQW5+dpXszg7JlVXujd8hqYXw9w3uzf5U1BpN7K9D0OxCXTMKub/ACAZJbu4ASgAU
      XwKv18vpgT5CoubG7L7bNNya1aEmh2ZR/a8W8OIJhXG6hpi4u8S99V0ygQR6JNbQt3ClQ99X
      D6DppY37gOqsb3jI7RYxiyW1CVY8GqVSif/n1//CZqGIYVuYR46j6XtbSSkdHLOE7gu4rtU2
      tHv9NBs6G3T6ZrXe5RJx0NN7zRql7ZAoAIQmMDNpYpkVtQlWPBrlcpmM7WC2dVEsFfGUy1AN
      PzRXF8mvLGLnssRe/QG6qzpkxTh04Mh2/SarWaHdvzcbNA8/MXb379pxNMz+tSt2YZdYW0yt
      AIpHQ0rJyuoq2zspwsEgv/j4M+zeYRCQWJ0jl89jaIKSN4DVP7Jn2y+bCI+3ntS23h/uIb1/
      ANcG/T6TpquP2+/8ilQ+wKk//wlhvwcpJbN/+HtS8dfolDPMzW8R7B7Fm5sjaUV57twwWbuV
      eFFViFE8IkIIent66O3pAeCvCnlu3LmL8PoYOzFG0TQZn5kjL/esQnY2TWDuLru9R/DEEw0n
      tocZ9fetFq5lQLIXQklpke1MkIHTo/g9lXeaW7Psagn8hsTMQ+eRo5QKJRwjiNex2FpaQ4sI
      PJqjVgDF46FWNf7//O3vcXqH6vsCp2xyJLdFd1uct29MEA4EEEfGDjebuvoDt52/Zv+v/lpT
      qYqzfPrOPH29JlnfSU4828mF//t/x/L6SZY7ODnaii/RzfZaimfOjLIxN0chl8ExC3iCQ8oK
      pHg8CCFYWl4mVyzhFAtAZRB7ttf5yRvfIeDzUd5cxzCLFdNp1aLTHOT+gDdwoP7vHyIWTLI4
      u0Us0cL6wiqv/s//K6/+xV9w6tUX8Xth6fYE0gjgCwaQ3hid3TG21nIkTp9QK4Di8ZHOZLh8
      7TqZbJapVA5H13l1sJcXz5xG0zR+8fbvWYn3gnaQx84hlh3pEhDpWhFcm+ragZqmCdeeojHw
      pf4y4epHqHgAxWOmlifIsiyklHi9XnZ3dxFCcPnqNT4pCXR/C7Vt7oMsO7UBXDkoc5CWhZAS
      4fOiafq+gb7fLaLRFXsvBmFPANQmWPFYEUKg63rdbdo0TSzLolQqcWNlDdMI4PN4XeGNB8cD
      CE1DOg5mahtvPkdCh0Q4yMz9++wOjOKLJxre2dRD06lB4z5iL72iEgDF10itqEYtgVa+UGQk
      4DC3uojR0YtdKiDzOTxWmbAuKJllosEAHaGWStENTWPg2ABD/f34/X6uXb/OzZ1d/NG2Rpu/
      66DNfb1ZwA5aZ5QKpPjasW27fh7gOA5Ly8tMTE0z0N1Fd1cX4XD40CizGo7j8I+/eYtJE4xY
      At0fcN2tRZdVBKAxxgAeeHimBEDxx0AtFcunn33Ge2s7BLp6q3caD89qmVgcWc1XekBmOTdK
      BVL8/4rmDa1lWRSLRRaXlljZ2GB1YxNf4rDUK1UEaGjseVXIfSqTRKIJTQmA4vHjOE69mqTP
      56sUozO+eKg5jsP5CxcQwJlTp4hGo9y5c4cLkxNsrKxSinailQpoRqiS/cHlHQq4ftIw6dfO
      GtyRYUJW7EJKBVI8dmQ1Z49pmvXySaFQCG+1LNFhrKyu8rub1wm2J0gvLnE0GmchuU3r2DFM
      s8zsdhHN561Fzh/gH7TvS1z/b25XyU+kVgDFY0cIgdfrxePxYNs25XKZcrmMYRiUy2V8bi9R
      F8tra/ijUfzhMP7jx9nIZgm1RdE9HoRpkl9fIdg3WE+6W5nFYV8AfPP3HHS9qmIpVwjF14YQ
      AsMw8Pv9+P1+SqVS3SzqttQ4jsONW7e4sbRISyxavx4IhzG8PkDib2lhMBHCvneLYiZTfUFN
      n6f+e+OfWkBkLUin+qcqD45lKRVI8c1Rqy2czWbx+/31lSCZTPLWpYtEhocrDV0Te31ur2Z4
      sy2b2es3yXnD+Dq6G8smsbeJrmSWFq5UK3slljRNw0ztoG0tKxVI8c2haVp9P1Arp+Q4Du9+
      8jH+vt6qm3Ozv8+eB6iUEl3XSfT2kFlLNZwAO1UVyVfMUrYlwipB9zD+eFv9fMCdsqW0vszz
      r72gBEDxzVJzlaixvr7OjoCuULCau796oymrSS2nrgR8wSCU1ir9IbCtMs7CFEePDBLtOoEE
      rGKR2avX2LXKBDq7qzlWKn05pRJhn4HQlBlU8S0zNTtT1/sbKjg2225c+1hN15BWmdzmBr7W
      Vpz5aUZOjBJqa6svF4bfz+irr3DlnfcoALJs4jg2eksYc22RU+dOI4TaBCu+RVKpFPc2N2jt
      6DjgbnUnW8+isrdp9rW0MNjfSZco0LK5wPAzI4Ta4vW8n/XsEUJw5vuv0+Gx6E8EGRvuJm5l
      6IwGySWTlbeoTbDi28A0Tf7rz3+G0d9XGeq6RqSrkvqwIX//Qe7OQrh8fFyRYm4Vqv409ZMx
      UbUaLU1MkhgaxhsIKBVI8e2g6zrnTj1LSzCIbRX4u7/7r+x4/Ay8+CecPtFPcvYmn310Ez3U
      yevfG+X933zKcz96hYn3PqT12AsMhkoEx14gWvOhOyCoTEqH+koibQq5XfLZLI5l460W91Mr
      gOJbJZlM8t6FT7C6O8mtzbHlRDk+NsDK5EWWtyV2Po9wcrT0HOFIt4+Ln8+jC4toPEq8b5i+
      /s7mSb+O4zho1arzW/OL7O7sEIzHifX27qVN/6b/wQpFDdu2+fX77+H095Kcv8u2E+XYsQFk
      9Z7X50faBUxbR5gZLo+nOH1mmHgiQWpzjdWJSyQLe74+QENiuoqptbICFNJpup95hnh/317B
      bVUhRvFtkk6nMXWdqLfMjQtXEeFWyjZEPCUCPh9L18fRAzFeef04n/z+An3PvU4wZBCId5Mo
      rLKwCac8D36HAFJraxh+Px6fr7JRrmaaE6j6AIpvkUuXL3NrJ0l8aKB+7YAsinsuD05lk6sJ
      bc8Rrjkc0hX4XjsAW717l/jAIN6Av1obrNZQmUEV3xL3Z2a4vrxIpK+nYQN7YPhKTSiEwNCN
      ffm0GnyLDpAHb0uQbNXsufcSAUIoAVB8O+ykU7R0d6EbRuOgbXZoc92opzJpygxdd3M4BG+w
      hXI+39whoFYAxTeI4ziUy2Usy+Le/ZmKS8MXUTsPExXTqaBSNMORtep4+7NC159DkEsmWbl9
      h8TgILg3ylXUJljxjeA4Dh998gmTW5v4DR2nJUBbU4BMzYOzjssvSGh7np37PD8didCaZ/dK
      +/U7d2hpbcXwevftGyTKCqT4hshkMtxeXqLr+bONPj+uAd2UKnqvTTV+9+CNr0DorhRbTZti
      3etFSKd+KNYQJK/yAim+CWzb5p3z50mcOnG41Yamwet2fnMVzK7n/XcqWR+EJuqWo2I2SyGX
      Q0hJpLuLxes36T16hPX5BbJb25jFIt6WALmNTTyBAPG+PiUAiq+XUqnEh599SkoTdHi91Zm8
      MoARHKC6VJFQqyovhGA3lSa3uUmpUEA4dsWCIzRs20bTNCzLQhMQ7+6mmNtl+cZN4p3ttLYn
      CLSG2ZhbwNA0nKxJ38ggpd089y9eVOcAiq8HKSWpVIp3Pv4Y2d1BoDXisuBo2LYFUK8h3LAK
      uEJ8zXyBtelpwq0h4j096B4Dw/BUZn72AmZkVShENeimHinm/qiKN1z9V7NQVCuA4uvh+s2b
      XF1aIDzQh7elpR7SCHsWncZc/+ypPaKysd1aWMTe3WX45HF8LYHqYVilwGlDxUghoKom2ZaN
      prlCJN0f5c4YV31OCYDisWKaJpO3b3N19j7x48erMbgCx7Yp5PNIy8YsFtF1Hdux0TWdUj5P
      uL0dXyBAMZdjdWoKr64T7eqgbegZhK7jOK6awLXwsCq1E2IpZcPK0EBjtlwQgrKpqkQqHhNS
      Sqamp7k4OUHR7yPcnqCczuCk0lihILupNP5gEMPnRTc81QFbGYuGz8v89RsEoxHCkVZ6nzmG
      0LT6jF3zXGioG1ZVlRosQ7Jp6DdnTXFdF0Iwc/WGWgEUjwfHcfjw0wsEwq2c6+zGdhyGTp2m
      tbWVn//zPzPw/NnKoHZRqw8M4AsEeOaVFyuB805j2hSAUi7L+d/8hryl873/4T8S9Utmr33K
      3YU8f/rffp/x3/+O+dUUw8+/yMaty3j6TjHWIdD7TpIIGS7fINf7NeUMp3hM1DI/H1TAenJy
      kkvbW7R2djS0hz23htW7U0SiYeI93VV3ZRoqWkjALpeY+ewjQs/9iJ5QNZ/QhU85/eo5Lr79
      AZ2DXaS2NsmWg1BKEUt00H1khPaOWDVFCnXVqVwssrmo0qIoHhPN2R7c7KR28IVC+9rXkdA9
      OsrirVv4WloI1ZJjVU08EpBWiTuXLxE9eo6eUOWmViuyISWGV2NnK4nd0sNYDC688/QAABAl
      SURBVFY3DJLri6RWFuAnf01nCBCChYnbGF4vybUNEOogTPE1IqUkmUyyuL6O7+SJ6sXqzX2e
      C5X0Jvq+JLoVRSm9leXap+PEFzYw3ngNCy+Ze59z+ZMbZB0vei7FVq5EYrSHjr42tvJZOsxN
      7i3u4qvGDCxM3KZYNEnem+XUj/+0svooFUjxdeA4DnPz87x36ybh/popdL/lRlQPtLKbW+ST
      mwydOtGY7pA9d2dNVPcQDe7QdV/pfd9QU7M0UbFC3bt2i97Tp3Esq+IbpCLCFI+LWhkkgGwu
      xyeff07a66Ht2OjBg7MpC5wvFCS5MLdv89tAbeDvs+oc7gpdQ9N1bLPE3OXLhDs7SQwMIJQK
      pHhcXL5ymc/n59E8BlJC+8gRIp6K7lE73a17e4pG/x4Ax7FBShzbQdObrEXuTXVDtBeIqmtF
      /X8NKVX25EUAYy+/AMDazBzr09ME29pUPIDi8dDZ0UlnMIiOwN8aRvccEKz7gMndNsvoXs++
      wX8g9ZNjgVUuYxaKlXMFqk5yrob1WsKA0HU0XadndISOng7SiwtqBVA8HgYGBujv78c0Td5+
      /31s9nt37i9nuoc3EMAsluolUquP1Gk+yAVYvDvN9OwqQtOI+HTKlk1Pbwf9Y6PNUZMN/Qgh
      CMZidB1RewDFY0QIgc/nqxTGYM/Xv5af50FkNjfxtQRc9YOpmEClrOT2oXFAr0zfZ3YrT8vY
      adA0TCr5/pfn7xBJtNHaFq8n061/X/Uba9fC8ZhSgRRfnuZCFzVyZql+Hx4889faxfv6CERi
      3P70IumtbQDWZuf5+PfnufrhJ6zcm8GxLPLpDCv3ZphZ2cHTO1T38JRSVnyGBo5x9dod0ptb
      lXfjVoRg5tYki3emq+7YygyqeARqpUo9Vf3ecRySySSJxF7VdtM0+flvf0v45PH6MzUeJAj1
      3P1SMnf5Co6ukyzrePqGQQjMjVW8G/MUgnH0SAxPtG2fe3P1JeA4OCuz9LWFGHxmFKtcJpdK
      s7O+yULOQUMy2hHC8HqUACi+GCklKysrXJ+YYHF7ix+9+BJHjx6lXC7zf/yX/8L/8rd/S20M
      ZTIZbo6PM7m5QUtnJ4FIBKAevfUgKv77gvkbN1jcKRA6drL+foByKonRGkFoeu3DDusIIQTW
      6gKBUpaS7sP2tSC8PvRIDGwHa2cLoetqD6B4MI7jcOnqVa4vLpB4ZoxgOMjc/DyRSISPLn2O
      t6ebxaUljo2OomkawWCQo0eOEI/F+PTiRbRTJ/AFQwfG+u7zW5aws7HOekESGj1RV21qeKLx
      ajt5WPhww32jq59yNfePcAuLrmMkKjlF1QqgOJSb4+NMzc2RbQnQ2tNdCT00TbYmb+NrbaWl
      swNPIEBqfp42KQj6fOTzeVaLRXzRVoTXSzjeyvjH55HRYZ597hgakrU715hZKXHujZfJLowz
      ObXJc99/g8XPPyJtBdHbY8hIL37jAPXGdUr8xcdfHKwmuW8rAVA0UywWAfjlW7/B98wYhte7
      L5MDuNKL1CK1pKzMqrpev5fdXCJn+ti+/Smdr/wVcba4cGGSE8famNssEwsEiQV2uT87T8k3
      ws69W5RCUUa+80bDrO0e9A8jAAeEAByIsgIpGshms/zs17/mrd/9jmQ2h+eAmr71k1lXykKh
      aeiGgWYYDcISTvQis4sQP0YsCJo/TNBOcunj62xv79LXF+b+Up6jL7yGvTpBa2cHxblJbn7w
      CZbc68eVzOTg9InN39jUzh1C6famUAKgaMA0TfI+L/bQAO3PntxLpnaAGlFLMV5tQLlUIrO2
      Rm5zi3KxWPEGnb3Fyo5B/5FuKJcoS42RF1/n2FgXHd0dXP7oOkPHj+H3R/nOf/MTOvv6MXwB
      Qt4SZvnhvtk9qA8zzR6Iyg2qaGZpeZlwewJfMIjh9WFb1oGDyrEddpNJ0nPzbE3eZuXi58R3
      0rzQ1s5rXd0UxiexTRNPS4hyaoXb126RT22TzpVJL98nTRenT/USbvUydfUyaxtpbCnpPzrC
      6NE+PO1HaXEtPgf5wNVwrwbOQQJQjSF2X3UcB6RUewDFHlJKpu/d49ONNYKxGDu3xjE0DTsS
      wUyl0E0TJxjEcBwCQuPZY8cY6O2lVCrxq1/9ir/5m7/h/v373J6fwwyFiPT3P5xvjwtNaGzM
      zTGbk/hibQ2qS20gHxbqC66EWU1nDnve07K+MVbxAIo6UkrK5TKapvGzN98kEY3yyrlztLa2
      srW1RSKRQErJ7u4ukapt3/2saZr8/ZtvovV0NVR9bI78qlw8+Btqld2LuRw3r47jGakF0chD
      BaC+KXZtzB9kIm2+pwRA8ZUpl8t8fvky9+zywSVPXdkbaiOwnrhKuDe6lcE/cXWccjCCr6u3
      nu3hMKvOw6hFTZ/ScE8dhCm+FI7jkMlkyBcKXJuYYNvnJdzR/sUPNk/fTdjlMmUp8SY6Khki
      XCrLw3R9oFrkWjn2RWKqFUDxsEgpyWQyfH71CtmSyZZZQg+20NrZidGU6vxh+gL2rQBCCNLr
      60zduo3sHsIba6u0d5yv9N1u1cmNEgDFF1Ib+PdnZ7k4PUVs5AgefwChawdne4aHPKbdjyYq
      s365VGJ+fIL1TIng2Knah3z5f8Mhn6VUIMUXkkwm+cd3f4+/v4+uM6froY2HV2Z5dGrzs2Pb
      pFZXWVtepWiDt72roXL8Xi0w8VVeV0edAygORUpJqVTi52++SejIEYJtbQ1K9oPqcjV2xN5z
      D5jELdPk3rUb3NvIUuwcRhscwxNPsDn5GZfe/CWzU0uVLswcd9//F+5PzODYJRaufka+CLnl
      O0xevI5t2+ysrR14dtD8uxIAxaGsra1xc2KC48PDpFZXG4rUPdLU2+zHcEib7eUVUv4Y3s5e
      NI+3bt5se+YlTn7vJ3g8HoQQFDJpes/9ELE5xfb6Orooki3A0swKIf8uaxPXsYyqqVbKgw/H
      qAiDEgDFPsrlMr977w+8fe0qV1ZXeO+jj7CLxf36/lfVP9xIiHa0o+V2Kr+6Bq0AdGuFzoFO
      AIKJHnYXb+HtO0WiZ4DWsB+A9o5WttezFPIZ7r3/Fqsryfrgr6VubEbtART7yGQy3JubI1Mq
      YZctBl9+icTw0F6Dw3aUh1yveYtqmo4j98cH11QpIQRUXS9qkV1SCAQ2C3fWGX19jNJujtzS
      bdJmkM4OL2YuQ3prm4LcZGT0OUz7Fno5Tb63n91MDrqizR9T7bPymUoAFPuIxWL81Y/+lLcn
      xuk4OrK/wcOq/lKS3dqinNzBVy4jurtpicVc3ewNfIlkduIOonuwwVWh0pFF14mzABR3cwTi
      HejpFZJrkraOCEU9jthdw7GjtPYM09Lqx5y8S9twz77PllLiWGWcbAap6gMoDmNlZYUPL16k
      EAwQHRggt7BIwLLJB1sId3Ue6OJQL2Bn2+Q2N5HbScrpDJ5gEMvQiRwbrZ8X1Aa/VS6ztbBA
      JpUh423Fk+isrAAPCHw5KDbgoHbutrX+nN0sw9lNXjpzmrv3Z5QAKA6nWCzyy397HyIRjhke
      XnrxRf7l3Xcp9XY3Jr6S4NgWpXyBrfv3afF4eOXYGKubmyw4NvH+vvohl5tSPs/Ni1eQ8S48
      iY5KljfZ6GJ92AHWQcakB0VdyupmWCDp2lriVE8nby9tKRVIcTimabI8Nc3LL7zAs6cqh1G7
      xSLeagbn2kDNbWxibG8z2N3DG699B4/Hw4XLl8lFwsQ7uxEIHOmQWlkjt72NtG0s2yFfLCN6
      hjFCrXv9ua01rjpfD6N1udvJput133+hsRpux5q+T8Sy1QqgOBzbtslkMsSqenuhUODv/ukf
      8XV2EmiLk9/ZwZfb5WhPDy8+fw7btikUCvz9P/0jRKJ0nzxR11OWp6ZZ3rXxtndDNdGVO4+n
      e+A3eHlWaR7YDbH0rsOxA53kmmqKsbbE337nHAMDA2oFUByOruv1wQ8QCAT4z//+p7z77rvY
      +TzfPXGS4eFhbNvm5q1bXJ+dZz2dw3Ekx6v1ANLrG6wvLJKWXnx9wzjlMuXpCTxHTyB0/UD3
      hodVedz3pJTVGX7/CbFs2K9INNuipaUFUFYgxSMSDAb58Y9/jM/nQ9d1LMviH/75Te4ZYYxY
      F0Q1SlO3KGSzpNbWWEiV8HWN4NH1ih5e2GU05GNleZaCaaL1j6A1OdIdOssfklirlvKw+X6z
      24Szm4WdLX480kdbW8XJTqlAiq+E4zhMTk7yy+u3Eb1DCE2jvLNNcHuRrPDhGzleH4jObpbR
      cpZ/9/3vYts2d6am+NeNXTytTQE21Z9flBz3sLb1b6vlFgX09SWOh/28fOZZBgYG6m3UCqD4
      UiwvL7Oyts7q1hZ317aQHX11a4vRGqXg9WEgMSavEG1LkCqanOvv4off+TMArt66xfm799G6
      h4Cv7ER6IE4mhS+9TXc4yBsvPMvRkZF9dcyUACi+FPlikfeuXCc/fBxtIIYA7PVlIthEPTpC
      0xjpaOPM//jf1/cR+Xyez65d59r8MptGAGNwjNpwbAhTfITvOHDmL5s4hTzh9Bb/29/8x0OL
      94ESAMUjUov/DQYCREIt5KuWHGnbPOsXvPHya/h8PgKBAH5/xUcnlUrx6aXLTGxnSIfjaIle
      jIcoa9SMO8dPc0ildBy8yzOMJWKEg0EsIVhOml+Yll0JgOKhsSyLXC7H//UPPydVtjHaOnEK
      eeLZbU53tvHcG68TjUYr+fyFoFAoMD45yXt3ZtiNdaBbNs7taxT8QYInzn5h2vSDqKlKxZm7
      +DwGtPeg+QMgBIOhAP/hLyoqVqlUYmNj4wv7UwKgeChq3pStra3857/+KQCWbXP3/gwv/eDP
      CTXVAd7Z2eHv336XFeFDSDhRzhIIe7nq9BDsHWpMteh67oH2/r2PQbfK/PSlMxTMMuNzC8w5
      BvHYnjHH5/PR39//hf8uZQVSPHaWl5f51XsfsIPBa0M9nBg5wq07d/kkY6JH2/YGuWXhpJOI
      1ijC8NQPxmqHZFDJ6uyYJXyFHO3mLkt4cfwBftgW5IevvwZU3LfHJyc5MjS0L2XLF6EEQPHY
      Of/RR5iOw7HhYXRd5+7MLOfXdiDRVW/jmCbl9WV+1NfO+/OrGEOjAA0CIC2L8MYip3s7OTFy
      hP7+fmZmZphdWubsyRN1W/5XQQmA4muhVCrxi9+9w31Lw5LglIoY7V04hTytmS2OdbZzYmSY
      hYVFPsha6K3RyqmwdACBsbXK2XiY7770wiPP6o+C2gMoHjsrKyv8v3/4gGRbD1KzeNnncGxo
      lInZebp7ojz3Z9/F7/fjOA4eXWfig4/YDrTgTW0TNXNs2oJ/d/YEZ8+c+dq/VQmA4rGj6zpb
      ZQdjfYlnEjG+89JrxGMxxsbG6m1qZsz29nZeO32K2wtLfPflM/T29JBOp7/WWd+NUoEUjx3T
      NLl+4yannz1VPwtw4zgOu7u79ZKqX8Yc+rhQAqD4xnEcp15t8tsc/KBUIMW3gKZpeB8xleLX
      hUqLoniqUQKgeKpRAqB4qjFM0/y2v0Gh+Nb4/wBZDJDeH6Z2ZQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
