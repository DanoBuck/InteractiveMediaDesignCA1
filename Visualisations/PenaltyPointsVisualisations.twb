<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PenaltyPointsData (ImportDataForTableau)' inline='true' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ImportDataForTableau' name='excel-direct.0cy02yi0mdmiva145u30812gfpeh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\DataSets\PenaltyPointsData\ImportDataForTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cy02yi0mdmiva145u30812gfpeh' name='PenaltyPointsData' table='[PenaltyPointsData$]' type='table'>
          <columns gridOrigin='A1:V937:no:A1:V937:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='Offences With Alcohol' ordinal='2' />
            <column datatype='integer' name='Failure To Wear Seatbelt' ordinal='3' />
            <column datatype='integer' name='Breaches Of Driver Duties' ordinal='4' />
            <column datatype='integer' name='Careless Driving' ordinal='5' />
            <column datatype='integer' name='Contraventions' ordinal='6' />
            <column datatype='integer' name='Dangerous Driving' ordinal='7' />
            <column datatype='integer' name='Driver Exceedings' ordinal='8' />
            <column datatype='integer' name='Driver Failing To Restrain Minors' ordinal='9' />
            <column datatype='integer' name='Driving a vehicle when unfit' ordinal='10' />
            <column datatype='integer' name='Driving a vehicle while holding a mobile phone' ordinal='11' />
            <column datatype='integer' name='Driving dangerously defective vehicle' ordinal='12' />
            <column datatype='integer' name='Driving Dangerously Which Could Harm Pedestrians' ordinal='13' />
            <column datatype='integer' name='Driving vehicle before remedying a defect' ordinal='14' />
            <column datatype='integer' name='Fail To Comply With Signals' ordinal='15' />
            <column datatype='integer' name='No Child Restraints' ordinal='16' />
            <column datatype='integer' name='No Insurance' ordinal='17' />
            <column datatype='integer' name='Overtaking   Offence' ordinal='18' />
            <column datatype='integer' name='Parking a vehicle in a dangerous position' ordinal='19' />
            <column datatype='integer' name='Speeding' ordinal='20' />
            <column datatype='integer' name='Use vehicle without NCT certificate' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offences With Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offences With Alcohol]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Offences With Alcohol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Failure To Wear Seatbelt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Failure To Wear Seatbelt]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Failure To Wear Seatbelt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breaches Of Driver Duties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Breaches Of Driver Duties]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Breaches Of Driver Duties</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Careless Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Careless Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Careless Driving</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraventions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contraventions]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Contraventions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dangerous Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dangerous Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Dangerous Driving</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Exceedings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Exceedings]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Exceedings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Failing To Restrain Minors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Failing To Restrain Minors]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Failing To Restrain Minors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle when unfit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle when unfit]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle when unfit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle while holding a mobile phone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle while holding a mobile phone]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle while holding a mobile phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving dangerously defective vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving dangerously defective vehicle]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving dangerously defective vehicle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving Dangerously Which Could Harm Pedestrians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving Dangerously Which Could Harm Pedestrians]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving Dangerously Which Could Harm Pedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving vehicle before remedying a defect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving vehicle before remedying a defect]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving vehicle before remedying a defect</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fail To Comply With Signals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fail To Comply With Signals]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Fail To Comply With Signals</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Child Restraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Child Restraints]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Child Restraints</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Insurance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Insurance]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overtaking   Offence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overtaking   Offence]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Overtaking   Offence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parking a vehicle in a dangerous position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parking a vehicle in a dangerous position]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Parking a vehicle in a dangerous position</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speeding</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speeding]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Speeding</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Use vehicle without NCT certificate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Use vehicle without NCT certificate]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Use vehicle without NCT certificate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>4</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V937:no:A1:V937:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
      <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
      </column>
      <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
      </column>
      <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
          <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
          <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
          <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='None' name='[none:Careless Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Dangerous Driving]' derivation='None' name='[none:Dangerous Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_564920284103004161]' derivation='User' name='[usr:Calculation_564920284103004161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Careless Driving)' hidden='true' name='[Action (Careless Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Careless Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
        </groupfilter>
      </group>
      <group caption='Action (County,YEAR(Date))' hidden='true' name='[Action (County,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Dangerous Driving)' hidden='true' name='[Action (Dangerous Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Dangerous Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.130705' measure-ordering='alphabetic' measure-percentage='0.869295' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_564920284103004161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter by Selected Option' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Totals' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Totals' />
      </command>
    </action>
    <action caption='Filter by County' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Map and Bar Chart' type='sheet' worksheet='Percentage Of Penalty Points Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage Of Penalty Points Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Map and Bar Chart' />
      </command>
    </action>
    <action caption='HighlightFields' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Totals' type='sheet' worksheet='Bar Chart of Driving Offences and Penalty Points' />
      <command command='tsc:brush'>
        <param name='exclude' value='Bar Chart of Driving Offences and Penalty Points' />
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard of Totals' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart of Driving Offences and Penalty Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar Chart of Driving Offences and Penalty Points</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' field-type='quantitative' max='5937880.2000000002' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Numberof Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000d6' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#0000003e' />
            <format attr='line-pattern' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#6666664e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <reference-line axis-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Bubble Chart of Total Penalty Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <size column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Penalty Points for Counties and Offences'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[County]' member='&quot;Westmeath&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
                <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
                <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' direction='DESC' using='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]' />
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Number of Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-color' value='#6666665d' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='286' />
                <format attr='maxwidth' value='286' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk] / [federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names])</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage Of Penalty Points Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Penalty Points in the Republic of Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' included-values='in-range-or-null'>
            <min>0.0050000000000000001</min>
            <max>0.48184101428610038</max>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-322530.15371996537' min='-1499602.0940846899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7488206.7395304907' min='6680774.2487437539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot of Speeding and Careless Driving'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]' value='N' />
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' />
              <shape column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table of Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols total='true'>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard of Map and Bar Chart'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
        </column>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
        </column-instance>
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80700' x='0' y='0'>
              <zone h='50000' id='1' name='Percentage Of Penalty Points Map' w='80700' x='0' y='0' />
              <zone h='50000' id='8' name='Penalty Points for Counties and Offences' w='80700' x='0' y='50000' />
            </zone>
            <zone fixed-size='193' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19300' x='80700' y='0'>
              <zone h='14000' id='6' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='19300' x='80700' y='0' />
              <zone h='8625' id='7' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='19300' x='80700' y='14000' />
              <zone h='8125' id='9' name='Penalty Points for Counties and Offences' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' w='19300' x='80700' y='22625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard of Totals'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='45625' id='1' name='Bar Chart of Driving Offences and Penalty Points' w='84000' x='0' y='0' />
                <zone h='54375' id='8' name='Table of Totals' w='42000' x='0' y='45625' />
                <zone h='54375' id='9' name='Scatter Plot of Speeding and Careless Driving' w='42000' x='42000' y='45625' />
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
                <zone fixed-size='278' h='36250' id='6' is-fixed='true' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' w='16000' x='84000' y='0' />
                <zone h='9375' id='7' mode='slider' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='16000' x='84000' y='36250' />
                <zone h='10750' id='10' name='Scatter Plot of Speeding and Careless Driving' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='color' w='16000' x='84000' y='45625' />
                <zone h='43625' id='11' name='Scatter Plot of Speeding and Careless Driving' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='shape' w='16000' x='84000' y='56375' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Percentage Of Penalty Points Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Month:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Year:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Bar Chart of Driving Offences and Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Table of Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bubble Chart of Total Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' size='40' type='color' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' size='322' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' size='50' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Penalty Points for Counties and Offences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatter Plot of Speeding and Careless Driving'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[tyr:Date:ok]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard of Totals'>
      <viewpoints>
        <viewpoint name='Bar Chart of Driving Offences and Penalty Points' />
        <viewpoint name='Scatter Plot of Speeding and Careless Driving'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Table of Totals' />
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' name='Dashboard of Map and Bar Chart'>
      <viewpoints>
        <viewpoint name='Penalty Points for Counties and Offences' />
        <viewpoint name='Percentage Of Penalty Points Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Westmeath&quot;</value>
                  <value>2014</value>
                  <value>&quot;POLYGON ((-7.3361 53.7882,-7.2911 53.7778,-7.2627 53.7462,-7.2424 53.7408,-7.2343 53.7286,-7.2397 53.7176,-7.2265 53.7036,-7.1946 53.6933,-7.1502 53.6848,-7.1357 53.6738,-7.1205 53.6823,-7.11 53.6697,-7.0652 53.6456,-7.0497 53.6593,-7.0103 53.6634,-7.004 53.6765,-6.9902 53.6762,-6.9728 53.6585,-6.9559 53.6543,-6.9663 53.6305,-6.9825 53.6241,-6.979 53.606,-6.9939 53.5757,-7.0232 53.5752,-7.0354 53.5576,-7.0181 53.545,-7.0228 53.522,-7.0423 53.4998,-7.0692 53.4951,-7.0632 53.4688,-7.0955 53.4511,-7.1216 53.4465,-7.1454 53.4497,-7.1591 53.4394,-7.1865 53.434,-7.1923 53.4269,-7.2091 53.4229,-7.2133 53.41,-7.2759 53.3963,-7.3281 53.367,-7.3653 53.35,-7.3689 53.3412,-7.4006 53.3315,-7.4246 53.3359,-7.4576 53.3194,-7.4888 53.341,-7.5304 53.3485,-7.5407 53.3372,-7.5659 53.3533,-7.5678 53.3808,-7.581 53.3921,-7.6057 53.4014,-7.6071 53.4124,-7.6239 53.4181,-7.6499 53.4051,-7.6926 53.3944,-7.7099 53.3812,-7.7133 53.3614,-7.7737 53.3486,-7.8186 53.3573,-7.8549 53.3476,-7.8738 53.3474,-7.9065 53.3634,-7.9224 53.3637,-7.9107 53.3721,-7.9236 53.3946,-7.94 53.4031,-7.9385 53.4206,-7.9665 53.4488,-7.9549 53.4823,-7.9698 53.5228,-7.9443 53.5264,-7.9189 53.5442,-7.8951 53.5436,-7.8582 53.5495,-7.8385 53.5401,-7.8213 53.5454,-7.7962 53.5365,-7.76 53.5354,-7.7466 53.5272,-7.7224 53.5276,-7.7061 53.5387,-7.6726 53.5305,-7.6624 53.5343,-7.6621 53.5593,-7.6327 53.5787,-7.6288 53.5907,-7.6097 53.592,-7.6084 53.6067,-7.5719 53.6224,-7.5655 53.6301,-7.5805 53.6407,-7.6074 53.6486,-7.6111 53.6599,-7.5734 53.6546,-7.5693 53.6711,-7.547 53.6695,-7.5351 53.6849,-7.5114 53.6984,-7.4932 53.6995,-7.4601 53.72,-7.4595 53.73,-7.4298 53.7351,-7.4165 53.724,-7.404 53.7338,-7.3863 53.7349,-7.3749 53.7556,-7.3844 53.7711,-7.4108 53.7792,-7.4023 53.7789,-7.3976 53.7787,-7.385 53.7822,-7.3745 53.7852,-7.3406 53.7948,-7.3361 53.7882))&quot;</value>
                  <value>53.5291</value>
                  <value>-7.4417</value>
                  <value>0.19395924392389496</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Westmeath&quot;</value>
                  <value>2015</value>
                  <value>&quot;POLYGON ((-7.3361 53.7882,-7.2911 53.7778,-7.2627 53.7462,-7.2424 53.7408,-7.2343 53.7286,-7.2397 53.7176,-7.2265 53.7036,-7.1946 53.6933,-7.1502 53.6848,-7.1357 53.6738,-7.1205 53.6823,-7.11 53.6697,-7.0652 53.6456,-7.0497 53.6593,-7.0103 53.6634,-7.004 53.6765,-6.9902 53.6762,-6.9728 53.6585,-6.9559 53.6543,-6.9663 53.6305,-6.9825 53.6241,-6.979 53.606,-6.9939 53.5757,-7.0232 53.5752,-7.0354 53.5576,-7.0181 53.545,-7.0228 53.522,-7.0423 53.4998,-7.0692 53.4951,-7.0632 53.4688,-7.0955 53.4511,-7.1216 53.4465,-7.1454 53.4497,-7.1591 53.4394,-7.1865 53.434,-7.1923 53.4269,-7.2091 53.4229,-7.2133 53.41,-7.2759 53.3963,-7.3281 53.367,-7.3653 53.35,-7.3689 53.3412,-7.4006 53.3315,-7.4246 53.3359,-7.4576 53.3194,-7.4888 53.341,-7.5304 53.3485,-7.5407 53.3372,-7.5659 53.3533,-7.5678 53.3808,-7.581 53.3921,-7.6057 53.4014,-7.6071 53.4124,-7.6239 53.4181,-7.6499 53.4051,-7.6926 53.3944,-7.7099 53.3812,-7.7133 53.3614,-7.7737 53.3486,-7.8186 53.3573,-7.8549 53.3476,-7.8738 53.3474,-7.9065 53.3634,-7.9224 53.3637,-7.9107 53.3721,-7.9236 53.3946,-7.94 53.4031,-7.9385 53.4206,-7.9665 53.4488,-7.9549 53.4823,-7.9698 53.5228,-7.9443 53.5264,-7.9189 53.5442,-7.8951 53.5436,-7.8582 53.5495,-7.8385 53.5401,-7.8213 53.5454,-7.7962 53.5365,-7.76 53.5354,-7.7466 53.5272,-7.7224 53.5276,-7.7061 53.5387,-7.6726 53.5305,-7.6624 53.5343,-7.6621 53.5593,-7.6327 53.5787,-7.6288 53.5907,-7.6097 53.592,-7.6084 53.6067,-7.5719 53.6224,-7.5655 53.6301,-7.5805 53.6407,-7.6074 53.6486,-7.6111 53.6599,-7.5734 53.6546,-7.5693 53.6711,-7.547 53.6695,-7.5351 53.6849,-7.5114 53.6984,-7.4932 53.6995,-7.4601 53.72,-7.4595 53.73,-7.4298 53.7351,-7.4165 53.724,-7.404 53.7338,-7.3863 53.7349,-7.3749 53.7556,-7.3844 53.7711,-7.4108 53.7792,-7.4023 53.7789,-7.3976 53.7787,-7.385 53.7822,-7.3745 53.7852,-7.3406 53.7948,-7.3361 53.7882))&quot;</value>
                  <value>53.5291</value>
                  <value>-7.4417</value>
                  <value>0.091054188554457016</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Westmeath&quot;</value>
                  <value>2016</value>
                  <value>&quot;POLYGON ((-7.3361 53.7882,-7.2911 53.7778,-7.2627 53.7462,-7.2424 53.7408,-7.2343 53.7286,-7.2397 53.7176,-7.2265 53.7036,-7.1946 53.6933,-7.1502 53.6848,-7.1357 53.6738,-7.1205 53.6823,-7.11 53.6697,-7.0652 53.6456,-7.0497 53.6593,-7.0103 53.6634,-7.004 53.6765,-6.9902 53.6762,-6.9728 53.6585,-6.9559 53.6543,-6.9663 53.6305,-6.9825 53.6241,-6.979 53.606,-6.9939 53.5757,-7.0232 53.5752,-7.0354 53.5576,-7.0181 53.545,-7.0228 53.522,-7.0423 53.4998,-7.0692 53.4951,-7.0632 53.4688,-7.0955 53.4511,-7.1216 53.4465,-7.1454 53.4497,-7.1591 53.4394,-7.1865 53.434,-7.1923 53.4269,-7.2091 53.4229,-7.2133 53.41,-7.2759 53.3963,-7.3281 53.367,-7.3653 53.35,-7.3689 53.3412,-7.4006 53.3315,-7.4246 53.3359,-7.4576 53.3194,-7.4888 53.341,-7.5304 53.3485,-7.5407 53.3372,-7.5659 53.3533,-7.5678 53.3808,-7.581 53.3921,-7.6057 53.4014,-7.6071 53.4124,-7.6239 53.4181,-7.6499 53.4051,-7.6926 53.3944,-7.7099 53.3812,-7.7133 53.3614,-7.7737 53.3486,-7.8186 53.3573,-7.8549 53.3476,-7.8738 53.3474,-7.9065 53.3634,-7.9224 53.3637,-7.9107 53.3721,-7.9236 53.3946,-7.94 53.4031,-7.9385 53.4206,-7.9665 53.4488,-7.9549 53.4823,-7.9698 53.5228,-7.9443 53.5264,-7.9189 53.5442,-7.8951 53.5436,-7.8582 53.5495,-7.8385 53.5401,-7.8213 53.5454,-7.7962 53.5365,-7.76 53.5354,-7.7466 53.5272,-7.7224 53.5276,-7.7061 53.5387,-7.6726 53.5305,-7.6624 53.5343,-7.6621 53.5593,-7.6327 53.5787,-7.6288 53.5907,-7.6097 53.592,-7.6084 53.6067,-7.5719 53.6224,-7.5655 53.6301,-7.5805 53.6407,-7.6074 53.6486,-7.6111 53.6599,-7.5734 53.6546,-7.5693 53.6711,-7.547 53.6695,-7.5351 53.6849,-7.5114 53.6984,-7.4932 53.6995,-7.4601 53.72,-7.4595 53.73,-7.4298 53.7351,-7.4165 53.724,-7.404 53.7338,-7.3863 53.7349,-7.3749 53.7556,-7.3844 53.7711,-7.4108 53.7792,-7.4023 53.7789,-7.3976 53.7787,-7.385 53.7822,-7.3745 53.7852,-7.3406 53.7948,-7.3361 53.7882))&quot;</value>
                  <value>53.5291</value>
                  <value>-7.4417</value>
                  <value>0.020325671966937641</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart of Driving Offences and Penalty Points' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart of Total Penalty Points' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29Z5Bk13mm+VyX3mdWlrftLbrRaDQcYQgQJEEjijLUjkzsSCPt7DjtKDbm
      x27szp+JnYkxGzs7Umg0Gkkzu0uNGKQAUSQIQ4Jw3WgA3Wjvu7zPyqr0Pu+9Z3+U6a4uX5Vl
      ANwnAojqNDdPZZ33nu985zOSEEJgYfE5Rd7uAVhYbCeWACw+16jbPYDPC6YpmEjnGE/mGJrM
      EM/kSWaLZEsVcsUKAC67htuhEfG5aQi4aYn4aY34CHld2zz6zy6WADYJIQS6YXJzeJJ3r/Zx
      vmeUkckM2VIF3TBXdQ1VkQm4HbSEfRztqOepQ+0caa9HU2QkSdrk3+DzgWRtgmuLYZjcHI7z
      8yt9vPbJXSbS+Zpev87n4vmHuvj6yX3sa4kgW0LYEJYAaoQpBFf7Y/w/b1/iw1vDlKr6pn6e
      y67x5IE2fumJg5zY3WQJYZ1YAtgghmlye3iS//TGJ5y9PbRq86ZWKLLEqb0t/P43HqOrMWQJ
      YY1YAtgAmUKZP//ZBb73/jUqurGtY/E4bPzKU4f4zWcfwu92bOtYPk1YAlgHQgjujEzxr/76
      fa70x7Z7OPPY3xLhn//as+xpClsb5VVgCWCNmKbgJ5/c4d+8fIZcqbLdw1kUt13jD771BN96
      7MB2D2XHYwlgDVR1g//3ncv86RufbLvJsxKaIvM7X3qYv/vCw6jKZ/+80xSCgl6lbBggBJqi
      4FY1FHn5390SwCqp6gb/+uXTvHz25nYPZU38+jNH+SffeOwzJwIhBFXTZKyQZTCbZqpYpGrO
      vynJkkTI4aTZ46PF48OpqAvMQksAq6CiG/zhqx/x3XeubPdQ1sV///wx/v5XT6IpynYPpSaY
      QjCQTXErMUm2ujoz1KGo7A6E2OMPzfseLAGsgGGafPedK/yHH3+E+Sn9qlRZ5h+8dJLf+uKx
      T/3GWAjBJ/Ex+tJJ1vPXCNmdnGpoxqPZkCTJCoZbiQ9uDvHHr5371E5+AN00+ePXz3Hm5uB2
      D2VDCCG4nZyiP51a1+QHSJSLvDcyQKpcQiAsASzHQDzF//H993b8hnc1VHWTf/G9dxmeTG/3
      UNbNUC7D1akY5rqn/zR5vcrZ8WHKumEJYCkK5Qr/8vvv1zyWZzuJZwr8qx+cplipbvdQ1ky6
      XOJCfGyDU/8euWqF8xOjlgCW4kcf3+Z898h2D6PmfHhniB9/fGfLP1cIgW4aZCtlYoUcI/k0
      o/kMyXKRkl5lua2oKQQ3E5NUjNquxGP5nBUOvRjjyRx/9tMLfIrN/iURAv749XN86fguAlsQ
      MiGEoGwYjBUyjOYz5PQKhilg5l4uSRJ2RSVsd9HmDeC3ORbEM2UqZYZzmdqPzdoDLMQUgu++
      e5mpbHG7h7JppPMl/uynn2z655hCMFHMcW5iiJvJCVKVErppIhDMSsAUgqJeZTif5tzEMLeS
      E5QNfZ6pM5hNb9juXwpLAA8wMJHix+e23kTYal49d4ehTdwQm0IwlEtxZWqcTLW8qulbNQ36
      s0muTo3PmUVCCGKF3KaN0xLAfQgh+OFHt8gUyts9lE0nXSjz8tmby9re60UIwVghw61knIq5
      NrtdALFijuuJGLowqZgGuSUOuzKxcYoVHYTOxNDoulzVlgDuo1jRefX8Z//uP8sbF+6S34SA
      voJe5XZyEl2sPzciVswxmE1R0vUlJ3b3W3/DlVvjVKZG+MFffA9DX/vnWZvg+3j9wl0Sn2Hb
      /0FiqTw/v9LHN0/tr9k1TSHozyYpGht3tQ7kUtjkpaeoq3UfE7FeJkyFhvZ2qrlJ3vzLvyJj
      a+HkkSjBg48w8MlHiGycWKJI40NPcfx417xrWCvADIZp8tNLPds9jC3n9QvdNb1eUa8SK2Rr
      dq3J0nLnMDbq7GXujBvU17sopsZw1u/GnBwnvLuV2z/7IVq0kwJhnv/FL5OLjy24grUCzJDI
      FukeTWz3MLacO6OTpPOlmmSRCSFIVUqUauivz+sVlopeCrU04wspGP0mPkcJdyiIJrrpeuQ4
      Tn892RycPNDKFBO8/8ZZDn/xSwuuYQXDzfD+9QH+4M9e/1TH/KwHRZb4P3/nKzx1sH3D1xJC
      cDs1SU9mau4xo1RmdHyc1o6lr1/IZnF6vIzeuUN03160+55zKhpl3Vx11Ocs6YFbJInQ3h5Z
      UkBgmUBzXO4f/9xNfgDDFHzSPVqz61XM+dUwTF0nOTW9suZi/bzzyqtMZQrEBkcxjBKD16/x
      yh/+Ee+9c4GJnpuc/tsfMxy7Z0IZwiTkcK55HP72/XSsMPnBEgAwnexyqXd8u4exbdwcjmOY
      talmseQtRAgunP6E4889yoW33qLn0g10I8fgYJYDpx7j0SeOYhgSBx97lNHb85OOWr1+lE0K
      47YEwLT7czRRw6N2RaXOY0NRNdojHiRJIrQGGztaF2F/1L3k83a7HZdWuwkxlsyRL9UmQM6+
      wGtjMnTlPB+euYRLM7l85mNUTxgzP8GHb7xDtiqjZye4fqUbpz+Ez+/FZruXsKJIEgG7g1aP
      vybjux9ZkqxNMECuVKlt6IMpc7ijjqtjBs8e9vI35+LsjsKVUQMVQdlw8dheOx/fnsSUFWwy
      5CsGNkVGlWVOdkU5f70bh01DxqRYNVEVGVkIhKLQEq3DzI3Tl6xN8a3JdIFCuYLPZV/0eSGm
      QxeqpkHFMDCEiYSEpijYZAVFkuYSbTyaDYl7K4HqcvPU138BXbIR8O0nk8rjDoUQ5cMUSgZO
      txvFPES+LHC7OlFtNg49fGTus52qhl1WOBiKECvmKOq1KzjW6PZYAoDp+j41LWglKhjYaKwz
      6R8t0tIWJDEwxHOnjnIsYuftq+M81OkllhQ89fBuGmzwlxdHeanDySfDWdoiHpItDTSG3Ahk
      ro0neLIpwPmhKfY0hlFUGxeu185kK1V1kvkSDUHv/F9DCIq6zkQxz3g+S7pSpmoac3slVZZx
      qhp1TjeNLg8Bu4OA3YFdUSkZ0xNVkmX8ddG5awajM/a86sM+t8jZCNxX/1ez2eZ+jjjcyJKE
      x2bn4bpGzo4P12Sv5lJVFNm0BACQytX+8GusanLCJfH6mM6v7XXzn/tdHMhMcqkSJJ/Jcn0w
      R19e8IVsglf6kmQNB1du9fLReBVJkelL65jFDAkthM+hcOlmL/2yB8/wOGOSp+a2aypXmvdv
      3TQZzKbpSSfIVhaP5amaJkVdJ1Eq0pdO0uD2sCcQJur0MJhLbXhMDkWl3uWZW12a3F6ORRq4
      NLkxh4VLVfE5VHJ62doDAKSLtY/96Rmc4ub4JKmJBB8NxNGLWUarNorJOMOZFBnTzx57idMj
      ZfbUeahmk9xNT981+2JJYrEJKu4QjVKWK31TDOaqZONJyv4Qu32CyUJtY+OzM9+BAHKVCudi
      I1yKj5FZYvI/SMU0GMym+WBsEEWSF9kLrJ02TwCvds8skySJXf4gewMh5BX9O4sTdbrp8Pvm
      vFXWOQDw6vk7/O/f/fl2D2Nb+Ze/9QIvHt9NvlrhfGyUyVJh3dfSZJmI00WmWsRY5/Sqc7g5
      FmnCtkglC1MIRvNZbiTipMqlRd69EJeqsS8Yptnt5eP4wFyckmUCwTrvJZ89yobO5fj4hiY/
      TJtGk8UCdS4XmUppzUFxEYeL/YE6KobJWLbAcLbAWDZPtlKlYpgokoTLpuK1aTglF4piUjKr
      SJKYM40kSUKVZMIzdYGa3F40WWaskJk3HksAgMdpW/lFa0VWONQepZBO0ZcoAhJtjRHCNsGN
      sQwHWyOossTIeBy7P0hQ0bk8OIUhwOlyc7DJz1hsklhRcKA1zOjoBCldpqvOTfd47eP4bZpK
      bzrJeI1i76umSbZSZZc/zEg+vWRI8/2okoxbdZDOS/xFfzcD6RzZVeQvS0CDx8mesI99YT9d
      QS9OVcWhqijSfCs/UZ4fW2QJAPA6F3f/bYS6sB9RKbOno5mJdDd5oWCXDAy7h2ONgpF0npam
      KBGnnZJkUHZHOBnN8mGsgsehkcqVeHR/K905cBVzPH2olbPDOR5uC26KAGQV+jLrq7WzFNlK
      mbJu8EhdC6P5DKOFDAW9umADa5MVDEPmbrxAXzJBpry2MwkBjOWKjOWKfDA0Qb3byQudzTza
      XIcsi3m1kGa9U7NYm2CgPuCh1geN8XiCtKGSSqYoGoCpU5IdPNToZzSRYXgqh2JUuB3Poisu
      HmnQ6J3x60+lShzc20Ihm8Uv6Zzrj5GqSMQmphhM137DrioyJVmvqY99lqFsGkmS2O0P80R9
      O080tPNwpIkjoQaOhhvZ728gnoYf3hjj8nhqzZP/QXRTMJIt8F+v3OVfvH+Ru4nMsh4jSwCA
      06bicdTWDKpriBIRBT7um8QEZFUlOxXntVsT7K734QuGKKemKMsaqYlRfnQrw+GmaWe4zyXx
      2pkbuPwBKqpGo8uO1755f6qAx0FBbE6plFk3qSRNH5z5bQ4a3T7avAGyRZM/u3CXt/vH0c3a
      +2LGckX+/UfX+Mtr3RRmOvY4lPlGj2UCAU6bRkvYz83heM2u6VBV9ra309mc53ZBQoyPEWxt
      JWo3eO9qPy6/j6sjOZBVDu/bRUip8O4twRcPNnMzofPFo2H6+oe5kdB57mgHV2/10dHeQkfU
      T9gJP700RK1yueqCLsQm6ctEMFUq0Oz2zpkiumny7sAYr9zqp7zJHXUqpsm7A+P0JLP83sP7
      CTvcjBfvBdtZbtAZ/vlfvs2Pz93elGv7XXbSq8gzVhUNu2qQL29tm6UXT+3i1MmWOZdl7PoN
      PIcOsmQ0UiXNez98k64vfJWWBs+iLxm+foPooYPYgEa3l1P1zSiyjCkEf3t7gJ90D21SnYel
      CTvt/M7xvYyU4+im5Qadx7HOhk0TwGomP4BuVNmOKoxt9f55NZCKiSR2QBhVrr/zJhm1iYdP
      tHPzzFkyIki7e5xbfQlajyf44OU3CB56jMYAjHd34991mOHz79M/VOAbhw4CUDWM6bImpsmr
      d4d4rWd4yyc/wFSxzH/85Ba/fLgZnWlXr7UHmOFQWx1O2+fvfuC0qexriiz6XHHkEhnPYVrN
      Pq72TCIFu2hWS3gPHObRr/8i1aGrtHzhq6SvfEx/zxUqni7M8WuEjn6RQwdb5q4z6194s3eE
      H98d3Na8i0y5yt/eHEMR02k3lgBm6KwP0hqpfcjtTqc14mdfU2SeF6ySi3H6By8zOCUxdfVd
      Lt3JEPap+II+bPZ7LmNvyMfVN35MwrDhdIXo6GzAZndw853XuHP3XrCepih0T2X48d3Bbbnz
      P8hkoczHgxmCNpe1B7ifP3n9PP/pjfPbPYwt5R+89Ci/+swh3h3pn24vBJiGjq4bKKoGpo6J
      jKrKCCEhIUBi+mdJoFeryIqGJDGzyZ1+TJIUFE1FAppcPl6/E2M0t7ET5lrzzb1t1gpwPy88
      1IUif34CI2RJ4tnDHThUFc99QWeyomKz21EUGUWzoWkqkiQjyxKSLN/7WZLRbNOvk2UZSbr3
      mDoz+SXg4lhyx01+gLf6rOrQ8+isD/L4/tbtHsaW8eSBNjqiAVRJptG9uDdnoximxI2J2he2
      rQX5qm4J4H5kWeKXnjj4uVgFNEXmW4/tR1Gm79wtHh9uVVv5jWukP1HadF//RrAE8ACn9rZw
      tKN+u4ex6Rxuj/LYvnurnUvV6PKHahoZa5NVhtI7u9KeJYAHsGsqv/flRz5zbUXvR5El/qdv
      Po7jfrevJNHpC9Qs+dypqBRLEsXqzm4v9dn9K2+AR/e28Ozhju0exqbxwkO7ONw+f5WTmHZX
      Ho5EqXdtbD9gkxUOR+oZy+78KtuWAJbgH33tFCHv2gsy7XTqAx7+x5dOLvm8Q9U4EW2kwxdY
      Vy0en83OI/VN+DUHQ5mN91cTRpVSOoVeWRipauo65gbrGVkCWILWOj+//xnrsK4qMv/466eW
      PfCTmC5FcizSwIloEyGHc0HLosVwKCq7/CGeaGylweUhVaqQLm8wXE8YjH74c4YvXyAxujBQ
      MTt4h9wGRfb5O/tfA189sYdLfeO8cvbmyi/+FPCNk/t48fiuFV83WwfIpdpocftxKBrJUpGq
      aTLrIJMlCVWWcWsa9U4PUZcbr80+J5Za3P2pZKho9ex64hiSKNH75isUSibBaJRMagp3uAlH
      pYfsuJ+m/Z3r2sBbAlgGRZb5p998nL7xJJf6Pt2lE5/Y38r//O0nUeTFV7TZGkBD2QwD2Qzj
      +fySMTs+m41Gt5v9oTB+u33RFSKWr4H3R7UjyjkMQ4fMCEZgH3s7bExd+oimp34JRq/Sff4y
      u776K+v2XlmhEKtgPJnjn/7n17gzOrXyi3cgXfVB/q/f/SrNYd+iz5cNnTvJJLcSU+Srq0+M
      cSgKuwNBDoUjOLX5Zwj/5fIdzgzFNjRugNzgdYaudxM68AjmxC1SKZ26tna8u3ZjJGPgcJIe
      GKX+8GHWc3xjCWCVDE2m+Uf/8VWGp3bmqeZStNf5+Q//w9eWnPyJUpEzI8NMlVZXXmQxXKrK
      k80tNLnvFbH6k09ucn5sct3X3Co+Ozu8TaY14uf//r2XONQWXfnFO4SDrXX8u9/5yqKTXwjB
      aC7Lm/39G5r8AAVd5+3BAW4k7q2Qn5a7qiWANdAeDfDvfvvLPLq3ebuHsiwS8Ni+Fv79775E
      Z31wwfNCCCYKBd4fGV5QJWG96ELwSWycu8kEQgjc2uq3l0IIjGplXlKOMA2MmewgYejo5TJC
      CEy9iqEbc6819Sp6pTL9XLUy97NRraCXSpgr5BpbJtA6KJSr/Mnr5/j+meuUd9hJp0NT+fVn
      j/K7L55AUxdWVQMoVKv8bW83pU2oAqHJMs+3tXNmMM7rPcOrek9popfBjz8k9MTfIRICKDN6
      7hzZgsS+Zx6j982/oSr7aX7sJPEP3yVbsXPwxRdR5Ty3X30DIZn4Dj5E8uIlZNUkcupFpj76
      CbInTMMjz+PzL13wwFoB1oHLrvFPvvEY/+bvfpn6wNJ1/LeappCXf/vbX+bvf+XkkpPfFILz
      sfFNmfwwXRDro7ExwmuoteSIdtF6aPd9j9hpOvkUbq8G5XGySRPF5kBVXXQ89xUiHc1M17tS
      sLnsoDqwOVzYXBqS5kJToFIsojjCuHzLB/hZbtB1osgyT+xv5Xv/7Ff5i59d5K/P3iBXrH3P
      3dXgsmt856nD/NYXj+F12uYVgnqQ8XyO/szmdYgHSJZLKLWaWrKGs6GDlj1Ohq/34hZxgvsf
      mY7YLWXQ7Q207bETG7yL8O+mOZwlkSqz72u/hpG6zsDFEXY93LLk5S0TqEbcGZnkv7x1iXeu
      9W2ZWWRTFZ453MFvPPsQh9tX3pybQvDO0CCD2c33ZElC4sJIhsIqvov88A36PvwYw9NOe7sX
      s24XmesfkhiN0fDol9CyPcRHUzSePMHIz95Cru+gtcNPxd1K4e7HZDMVGo6fJH3jHMWyRPOp
      p0hfO0sup9P69Ffwepc2gSwB1BDdMOmfSPLK2Zu8ebGHZL5Irb9dWZIIe508ebCN7zx1mK6G
      0KrDNQrVKq9036Fao35gyyEE3I0XiOfXtipmx4ZxN7Ss6NPPjg3jqm/ecO6GJYBNIpEt8uHt
      Id6+2sfd0SlGprLrroYgSRDxu9nVGuL47kb2d9Rht6kokoRDVQnYHfhsNtyatqz5051Kcnpk
      dRvTWpArmVwe29nnJpYANhnTFGRLZQYn0twameRqf4yhyTTxTIGJVA7jATedXVMIepxE/W72
      NIXx+xw4gzZMTUKzKdP1dR5AAuyKQsjh5FA4QpPHs2h4wkdjo9xMbN1ptkvR+GAgSb66ORvu
      WmAJYIuZ/brFzP8KlercY5Ik4bJNey2y1QqX4hP0ptfeashvt/NofeMCIfx0oI+R3PLlz8d6
      e6lrCDE0lKJjX8eGMsS8mo1cUeJ0DUIiNgvLC7TFzJoo0sz/FivKO5zNcmZ0mMI6XZXpcpm3
      hgbYHwxxor4BdSYArrSKsnOJsTHSw90EDz1Fsu86w7EqBx45SHp4mGxZ4HNrpCdT+Fs7Cbhk
      8lWBz7d4Ak3VNHmhq43zY5Or+uztwDoH2EGYQnAnmeCd4cF1T/77r3UjMcV7I0NzdTBXk9+S
      7L1Kz2iZiLfI23/1I26+/VO6BwY4/+YZAvVeLrz+Lr6WFvoufEKs9xr54tIXFQjCTjsvdO7M
      k3OPTbUEsJMYyKT5aHyspl6agUyG06PD6KaJJi9+OHY/wa4jPHayjeuXegi0dHHk2aeJhr00
      HzpOMOCi4cBRIpEQXU0qF2/kqVumobcqy8iSxPOdTTR5XEu+brvYH/VYe4CdQqpc4tW+XipG
      7U0FCTjZ0EimXOZ2MrHsa8uFAjannWKuCHqBTKZCqKkeUTWxuzTKhQp2l8q1115G7niagwca
      lrxW1Oniyx2dKLJMdyLNvz17dd1N82pNvcfOI21eSwA7Ad00+fnQwIob1I2gyjL7gyGuT21d
      iPL+UIjHGqfNHyEE7w6M81fXe7ZdBEGnxiNtPuyqZJlAO4GxfI7RTZz8MC2yyVJxVfm9tSLq
      umceSZLEU231PN/ZtGWfvxhuTeVUaxC7Ov09WALYZoQQXJ+a3JL4+XihgFPdGsefV7PR9EC5
      RVWW+fb+Tr68q2VLhThLxOXg7xztxGa7921bAthmirpOrLA1hWMNIXCo6pb0Rd4VCOBYRGyK
      LPGL+zr4zsEu7Is0wd4s2v0e/vHJg3js8rwTeUsA28xQbv0hEutBkSQa3Jsbwu1WNQ6EwkuP
      QZZ4rqOR3z91iHr35tZeUiSJZ9ob+f1HDxN1O0lX5me/WQLYZuJbdPefJVepcqyuHm2J6hAb
      RZEkTjQ0YF/B1JIkiT0hP//rU8f45t42HEvkL2yEFp+bP3jsCL9xZDdeu4YhzAWtYK2T4G3m
      /g7qRinPhdd/QG93jv3PfZFo0EVDZ3tNexgXDR2nqvJ4YzNnRodr7pE5HKmjw7f6+qJOTeUb
      e9s51hDmvYFxPh6dWFUI9VLIErT5PDzd3siJxgiu+1IzTSEwxPwzFksA20zlvtLhisPNyW+9
      hPmTfh46sZv+a72keq9w5dJdwruP0eTJcvVCD3UHTtAeEVw8c4n2U89AupepCZ1QRNB7O87h
      51+gMHyN5GQZX0sbrc0BJpMVGprrMIVAFyadfj9V0+Dc+Bh6DUQgAUcjUY7VRZeNSL0fUwjK
      hk6mWqJMmYdbvBxqdNM9lWUgVWAkXaSoG8v2EJYAuyrjtau0B1zsCnto8DixKQqpSh6BE6eq
      IiEhSdKCzbclgB2LwcTgKLaozN4Xvkn/6Z+Rb3Bx8EvfZODMz7hweYCC4ab3xl20TC9Hv/ZL
      jHz0MyqpGLev3YXxHo5941cY+OBthgs+1PrDc1eenQz7QmFcmsbZ0ZENhV5ossyxuigHwpFV
      TX4hBCVDZzifYryQpWRU53nBfG542OvmVGsAh+ygWBFMFcqkyhX0mRuGx6YRdNpxaBKGVEFS
      DKqmgUmF0cK9VdUuq4QdLto8QZyqhl1R5626lgC2mYWeEAllZtlWNBW9lOLS334ff6QTIx/j
      ox/+AH9jJ43NBj0jWYLhAKq/C49TJpdIIdvdaAp42rpwO1T2Hu/kRy9f5Zu/fQqYTqi5P4mk
      xePlq527uByP0ZdOr8kkmt1QH482EHY4Vj35k5Uit1MTZKtLV4+umiZVylRElc5AiCda6udV
      tTOFYKKY5W56krJRhSWiR8qmzmghQ6JcYLcvgkezMVW6t++yToK3mQ/HRriZWDo8IXHnKlLb
      EYIOiN+9ir35CL41hNV0v/8TpJZT7Oqc9sq4NY1vdO1ecB4ghCBVLnEnmWQklyVbqSx6NiEB
      bs1GxOnkYDhCndO5apNHCEGqUuRqYmxN5VgkJDq9QTp9YRRJRgjBeDHDzeQEulh93JQqyYTs
      bgaz6bnfzRLANtOTSvHeyNCWfV6Dy82XOzqXPYgazxXoS2foS2VIlErkKlXsikLU7aTJ42Zf
      KEijx7XqiT9LSde5nBhZ4IpcDYokcyjYQIPLS7ZS5uLU+moaqZKMYTJn8lkm0DbT5HEjIy2a
      6bU5nzc/SUYIQaGqM5jJc2l8kpuTKTLlxe/+/ckCMIXEIC5NZX8kwOG6ELuCPvyL5DXcjxCC
      kUJqXZMfwBAmfdkpwnYXQ/nkugt66cLEpqgohoQhhCWA7cahqDR63JsaCDeLJsu0++6VScxV
      qnwwFOOjkQmmiqVVS1Aw3WHxk7FJPhmbxGfXeLy5nidaGwgsIQRdmIwXshsaf7ZaJlEukKls
      rPOMKUwiDhexYt4SwHYjSRKHwhHGcvlNXwXafT78Nju6afLuwBjvDY6RKm28llGmXOWN3mE+
      GI7xhbYGnmlvXBAGka9WKOgb/6yxQoaKOX33F6ZOLp1FdbhxOpdfge5HFyYRpwtZki0B7AQa
      XG5afV4GMptXQcEmKxyJ1DGaLfDDO/3cnqp9caxspcpPuoe4Hk/y7f2ddAS8c8/l9HJN5J2t
      lmcShgR3Tr/FwKROtHMfx47vXvG991MxdY5GGiwB7AQUWeaRaAPj+TzlTUqIORaNMp4t8f9d
      vUu2svoeAOthIJ3jTy7c5Jf2d3KicfpsQK9RlpshzOkiAmaReN7B87/4DIqkc+XNH9EzluXR
      L5wkltBo8maoCJWLZy/gadpDpzPNhYE4Dm8rX//W0+imiV1WrFignYLPbue51rZ1NaZbif3B
      MKWK4E8v3tz0yT9Loarz3Wt3+VnfCIYpUKTaTDVZkqZDQyQN1ShRKFcp55LEYhmKU6MMTdkp
      x24wNJKCfBJdkei5coWq7uLZ3/x1GoLT45gdjyWAHUSDy82TTc01FUGHz48qafzV9Z5lQwo2
      A1PA6z1DnB2O4VZtNQnDdqs2VEkGSePAQx2c/v4PuHYrTiDoJtSxh2jYxd6uBqS6NkLRMDbV
      zp7D+/DW12EHQtE6AFza9J7BOgfYYczW7j89Okymsv5NoypJHIvW45A1/vTCLX8/i+UAABv/
      SURBVMrG5pdDXAqbIvMbR3aTMTMUjY2tQIeCDQzmksueIq+EKsk8HGnBb3daK8BOQ5Ik6t1u
      Xurs4mAojG2NYcsS0Ozx8EJ7B+1ePy/f7N/WyQ/TAX8/uNGHQ169p2YxXKpGxOHGo62+9Ppi
      BOxOPNr0imRtgncgQggcisoj9Q3sCQbpTacZyKTJVarLlkZs8njYHQhS73IjSxIv3+pjNLe1
      +QZLkalU+WQkxaFG17pWAQmJNk8Qm6zQ7PYzWcxRXUMYxCyKJNPuCc7tASwB7CAM0yRZLhIr
      5kiWihR1HUOYqLJMo8eBKruxyRqKNJ3Wp0gSLk3Da7MRtDvmKsAB9KWynB3eWSUJ70xm2Rfx
      oakmVXP13i4JaHb7aHL5kSSJoM1Jlz9Cdzq+puA9WZLo8oUI2e+FcVgC2AEIIZgo5rmdjJMs
      Fxfe4417iTOyJFHncLMvGCFoXzwQzTAFP+8b2fJN70oYQnBpLMUvH2qjNztFeRXhDBISzW4f
      u3wRDGFSKFeRJYlGpw8hBL2ZqVUFxCmSTKc3RKs7OO87swSwzRimyY3kBL3pxKoOikwhiBVz
      xEt5DgajdPlDCwLbRnN5bk2tvajuVtCfypEtCo6HmxnIJoiX8otOYBkJRZKRURnOFLg6cZeK
      aUzHYUjTq4LfZsdlU1AlCQMTscg3qEgyfpuDDu/0nd9KiNlB6KbJxfgoI/m1nwCbQnA9EaNo
      VDkUqp/7wwoh+GAoNi/TbKfx8egEB+v2cTDUQK5aJlkukq2W0U0TWYKqIZgqloiXylSMRTrO
      z8zzRLlEojwtBo9NJeJ04HfYMYWJIsm4VBshhwuvZkeV5EVXS0sA20TZ0PlwfIhkeZE/8CoR
      QG86QbZS5lRDK4okky5XuDC+sxtU35pMMZEvEnU78duc+DQHgmkz74PRYRKl0prqowogW9HJ
      VXI48yWOR+vp9AeQkUCSljx/EEJYbtDt4nZyckOTfxYBTBTz9GWSAAxl8msvRS5MssM9xLp7
      0fV7E08YFUrZ/IbH+CBF3eDW5D0TTZIkUuUSPxvoJ1YorLs4sGA6zv+D0RHuzCQZLXf4Fk/l
      LAFsB4VqhaFcbW30vkySsqHTn1p7yHGm7wpjg5NgVKjeFyphlJKM3Oyp5TDnGMrcC/8u6FXe
      Gx4iW61Nl00BfDIxzp1kkuXOef/k5dOWCbQdjOQzNW9Ul69WmCwWiOXXvqrkEimajhxj8O13
      sUfr6f7hnxPPOzj5rReBCr1nP8KnpojbdmEvjuN3G1w/fZGGk8+i6BUauyKkMnaadq++D0C8
      UJoLkPtgdIT0BmP8H8QQgo9jo0ScTsLOhcW3Pr7ezyvvXLZWgK1m1uW5GUwUcySKa59Imk0h
      m6jScmwfeqIf4d+DzyEolSuADU2USUke3MVuhBYmnyrR/NARcvEkAVeV3su9BNrXVvS2UNWp
      GiZ96RSjuY0lyiyFKQQfj48uiEQtliv80Q/ep2qY1gqw1VRNk0J18ZPQ3FgPH757geZjTxDW
      Cnjbu5B1A/sK6YazZCplcuuI9owcfITBD99nqqjS9cSjuPuHcXQexOUNoDS78Dn8xDJ23PoY
      RDuR4iWGB7M072/F4y0jJgu4tLXmBxsUdZ1rU/FNTQOaKBYYyKTZFQgC0zegn5+/y6U7090y
      LQFsMYZY+hT02gfnOfLiS6jVCmOXL6M1R4jdSNOxy03v7UEiXXtxGkmGR3N0Hd6PXZu/gJcN
      fV1x95LqpP2pF+f+vev5b8z97J7JoGwOA8w0w/Afx78bwCB+8wZ7v/DQmj9TN02Gc9kNBfyt
      ltvJBB0+P4osoxsm//XVD+fqsVom0Baz3N3u8Bce48abP+J29/jMI3niI5Ncef8cmqZw6/xp
      zr13Ba0yxaWLdxdee8sDexXqDhzBrq29rqciS/Rnap+VthiTxcLcBvt67xg3+++FiFgC2GKU
      BwpT3U9qKk3bkaOUkxP3PSoQQmDoVQzTBCEwDGPRjneaouCZabO6EqZeJjs5OdfJXghBIT5C
      ZjI1/ZhZIROf6SksqmQm7p0tVDKTTPZ2k0vl0PMpEsPDGKZAz6eY6u+nUlldxYZkaeNu4NUg
      gNFcDtMU/MWPP5z3nCWALUaVZRzK4pM0UBehWjY4/vTjdJ58DK+tjqNP7MetFnj/Jz/HGdnN
      o88dR/I2cuzYwhxYj2ZbsirDfASZwbsMXLzA7JGBWRij59xVBs+8Q1E3SN65xKU33wIgefNj
      Lr313ty741c/IpPOo1cL9H1whtTATYbvDDJ59waFxCADVxauTg9iCHPLSsEAJEpFYokMF28P
      z3vc2gNsMbIkE3I4Fz0E80Sa2B+Z9aY4APCHbbie+xqdT5k43G4UWWJv3eLXjjjctPvNVSS8
      SwS6DlO475BLTA3if+gF6vIfEx+dxMhpRJuCGPkJkkUf9Y2zYdUmpUyWbGqQQNSHEt5F54F6
      em8M0nbsBBPXLuJoqF/xe/DYVm7Ukey+yEdnruNrP0CIJC1PvIBnnSkFRV3n9K1ektn54eGW
      ALYYCWhy++hLJ1d5B5TQHC40x/Kv0mSFqMtNyrPO8wWXl/LwKJlCAd1+k6neGOmRfmSzRCZZ
      IDU4QN2RU4RCbhpOvUiHE268exqbI0w55wBZY/zaJ7haj+IPLd44+37a/B4MafkN8EBvnC/+
      5m9gk+H6T1/DLCc5/cqbND/xPOXeT8gaPupD0HN3jH1Pv0BTvW/JaxWrVd5dZN9kCWAbCNmd
      hJ0u4jU8D2hye3GrNtr9HuyKvEIWmGDiyhnGuwdJ5RW8SoHIQ6ew598mrTWy++GjdJ2QmOi+
      Q3T3XgAmuu/gqQzTfzeAT4zS2z1K06PPomR66L54h86nvsD4mdeID47j33WctoOdS97hVVmi
      M+ClOzO17O+kSNPeolmDsZqOkS2Z3O3N4M9WOPblY7z1R3+EFq4nEU8tK4BsocwntxaWoLQE
      sA1IksShUD1nxvprciLsUFT2B+uQJImAw0ZHwLuCGSQRPfoU0aOAWSWfLuB02Gl78ivzXjU7
      +Wd/LqYTtNYFUNQmQvtmnqg7TmDX9I+7vvTtVY035HTQ4ffSk5ladg3sPNTBmf/23/C0HaDe
      50eRZCRZweXQCPvbsGtO2g92MZbQcTqXT5McGkmQKyw8JLSS4rcJIQSDuTSX42Mb2gwqksyj
      9S3Uu+6ZHaeHxvn+jd5aDHNTeKGzmWfaG3i1r5tKjUNCluL82R7eeevGgsctL9A2IUkSbR4/
      B8PRdbcM1WSZ43WNRJ3zm96daIgQXOXp8VZjU2Seam3Aa7Ph1rZujPHxxVdESwDbiCRJ7PKF
      OBFtxqmszRq1KwodviAlo8rtVJy76UlG8xmKehWHqvBka8MmjXpjnGqO4nfYkLagW+UsLlWl
      nF18w23tAbYZSZJocnkJNTvpSScYyqWoGMaSzSkUWUaVp3tdDecXhlRr8nQTiGMNQc4Ox5ha
      R3DcZhFw2HimvXFuxTsQCnMrsfw+oBY0uTxMJhavvm0JYAcgSRJOVeNwuJ59wQiJUpFkuUhx
      5vRXkWXcqo2KqTNezE7Xx1xi2lRNk1gxy2Qpx4nmAG/1TNS8E+R6kIAvdbZQ57oXmuzRbHT5
      A/SkNy9/2a4o1GsuqkvUXLUEsMPQZIV6l2fephZgNJ/hejKx6qbahhCoNp3OkJPuqe2vDXSo
      LsjjLdF5j0mSxJFIlJFcltImFAWG6VVGrgiMJdzC1h7gU0C6XORGMraujvK7ow6i6z0+rRHt
      fg//3eHd85rczeKz2ThR37huR8ByNLo8HA7XUa7qLPXVWQLY4ZjCpCcztaDB82qRJYlHWwO0
      +bdmw/kgjR4nv3l0z5JBepIksTsQ5KFItCbFc2cJORw81tQ0FwK9lLffEsAOJ1spM1na2Imx
      KRn84oE29oRW38G9FrT5Pfy94/vn2f1LcSgS4Xi0viaVsSNOJ8+1tOOzTR+OqcriJVHAEsCO
      Z6KUr4mXpGCU+XvH93Gqef3nDqtFAh5uiPC7x/cTWcXkh+kDvSORKM+0tOHRVhfSvfAaEgdD
      EV5s78Rju2f22TV1SQFYm+AdTroGpVMAspUSmiLzqwe7OBAJ8IObfetKn1wJl6byYlcLT7bW
      Y1vQBHxlWjxeIp276E4luZmYoriKDvYS0Oj2cDQSpc61sPqb22lbMgfDEsAOp7KGIrLLUTVN
      hJjORzjeEGFPyM9Pe4e5MDZJpgZCcKgKh6MBnmitx62ppMol7IqCQ1XRZGXVq86sS/hIJMq+
      YJjRfI6xfI6pYnEu5bMykxjksdlocnvp8geILNOwO+x3Y9NU8os0BLQEsMOplbHy4Nxwaypf
      29PKqeY6LoxPcmk8Qbywth6+EuC1azR47TT4bNhUuJoYRwiBxHTmm1NRCTtdNLu9hB2uRT1B
      S2FTFDp8ftq9PnLVCn2ZNP2ZFPpMF/uiXqU/k2I0n8Gl2Whye2j1+PDb7fML4CoKQZ9rQS4A
      WALY8ThVjcwGuqHMYldUZEmiYuhMlQvEi1ny1QpV08DvlnhmVwDdkJjMV8mWTCby0x3iDVMg
      EEjS9OmzW1OpdzuJuO0oiklFVGbK0pqU5y1WAt2AsmGQqpTpz6RodHvZFwgTsDtW1WVeCEFe
      r3JtMk5/JrUgctYQAkMYVEyDXLXKRCHP1ckJGlwejkTqiDjvlUHf1xald2RhyUhLADucsMNN
      rLjxJtpBu5NUuUBvZop0ZZES7AAShL0S++t8dPo6sckqxaqOKaaT2G2KjF1RmCwVuDIZI1le
      vTANIRjOZZgqFTgSjtLi8S9rFplC0JdOcTE+vqp9wP2fM5LPMl7IsS8Y5lhdPYosc3hXI6+d
      XRgNaglghxN2uNBkeUN5A7IkIYTgemKcsrn8ZJouv54lr1c4GGzAd585IYRgslTg/MQo+SVq
      G61EUde5FI9hCmjzLi4CUwguxWPcTEyu6/APpoVwIzFJplLm8cYW9rUvnqZpuUF3OE5Fo8Ud
      2NA1XKrGeCG74uS/n1y1zM3kOKWZJhaz1ZsvTIyte/LPUjENrkzGiBVyC1YiQ5hcnBjn+lR8
      3ZP/foZzWU6PDrG7tY6wb+FhoCWAHY4kSXR4g3jX2RjOJisokkRlDZN/lmy1zHAuiSkEhmly
      KzlZswK2FdPgRiK+oEvMYCbDzURty7uP5XPczSV5aO/C2qWWAD4F2BSVh8JNuNW1xfQ4FJVW
      T4D8BjbR48UsRb3CZDHPSI1reCbLJQYzqbkwhVylwicTY5sSHt2TSRFpWpgzbAngU4Jbs3Gi
      roV658oVFwBCdhcn6lrQzcVzC1ZLxdBJlYv0Z9Or6sW1VoZyGSqmgRCCG4n4mja8a8EUgqZd
      Ybzu+SuptQn+FOFUNY6Gm0iUC4zk0kyVCxjmbG6AhCJJhOwumtw+Ig43AkFugy5UAUyW8kwV
      NyekOlupkCqXcKs2+tKbWyrR7rHR1Bbi9s2xuccsAXzKkCWJiMNNxOFGN02KxkzSzMwJqirf
      Cz+oGPqa2pEuRaZSpriKjo7rQRcmqXKJZKlUs1PvpRDAyZNd8wRgmUCfYlRZxqvZCdideG2O
      eZN/ltUcOK1ErZt5PEiuWmUsv/GzjtXQ0h6a5xK1BPAZRpFkHGtMtl8MaZOnScXQmdgkE+tB
      BPCdlx5BngmOswTwGUaWJAJ214auoUgS7nWGJ68WQ4gl+xoMXrtOuZDg+vnrxIaGyI0NkhmY
      Lh8fu3ud/Bq3OAJ4+FArJ/a1ApYAPtNIM13lbYuYRqvFqzkIOTY3m0yR5CUbJ2TjMa69f5bG
      fXvJp9IYpTyVTIKLP/khH713nkp6gve+/32uX+0j1d/L1ffPEI+PcfaVl+nuGV80FVJSJP7h
      rzyNpiqWAD7ruFQbTW7/uqJKFUmi1RMkZHduWhKNBHhttiXDXouJMSYSZRx2hYmh6dqesauX
      CBx7miMP7aKSS1GuGlx5730mbt9Ea9/D5Ic/ZyJb5ObHFxa9pozEif1tfOvpo5YX6LOONDOJ
      c9W1pVZKQLM7QJ3TjW4KXKpGrkanwPczXQXDvaRAPQ2d7NvXwtXT55g1ktwBN9feeBVJgkMH
      BAVDRtNkVGeQcFuUwlQTUnyESPvixcG0mUSdf/grT1u1QT8vlA2dO6kJJoq5JWsKzaJKMq2e
      IO3eEOpM/P6VyRh3UstXc14PDS4PjzW08FpfN6kat0pdDAn41q59cymTlgn0OcGuqOwP1rMv
      EMWr2ZEXuecqkkzQ7uJQqJEO373JD9ORm061tgaDLEl0+gLTB3iL9PLdDNyaNi9f2DKBPkdo
      skKz20/U6SFXLZOpligbOhISDkXDb3fgVm3TZcgfsPl9Nju7fCGuJyZqFqvT5PbS4PIgSRIt
      Hh+9m1ghbpZmz/x4IEsAnzMkScKmqIQUdU3eHVmS6PIHSZaLjOQ3HhQXsDs4FKqbS5FsdHsI
      2B2kymtLy1wLykwNovuxTCCLVWNTFI5G6ql3bcwt6rPZebiuAc995dFtisLeQGijQ1yWZo+X
      gH1+rylLABZrwq3ZOBltZpc/iCqtbfrIkjS36Q05XAvMrN2BIHXOjR3cLYVdUTgebZjLjisb
      BplK2fICWawPwzQZK+ToSSeYKhWXzd6a9vXb2eUP0uLxY5OXrtSWLJX46WAv5RoWy5WAUw3N
      RF1uhrIZRnI5ctUKJd2wBGCxfoQQGMIkUSoxUcyTLBcp6waGMGcOziQQMpgyZV2Qq+hzSfay
      JOG1aQSdNupcTlp8brw2DVWWGMll+WBsuCYikJFo8/qomILhXHaBUC0BWNQEgcAUgqph0pvK
      cGFsit5klnihRGXZjpXTaLJEi89DV9DLky31KIrg9OjQhhJkJMCuaJR0HX2JaW4JwKImVAyD
      y7EE7w2O05fMbiiE2q7INHndPNUWpWgWiRXWXh/VpWoUdZ2qufw7LQFYbAhTCPpSWV651c/d
      RKam15aAXUEfj7eFKZsVJouFZbtKypKE32anxetjNJcjVlg5xNoSgMW6qRgGr3UP8VbfWE03
      rQ/iVBWe62jiC+31pMpFxvM5stXpTDibouBUVUIOJxGnC7/Nzodjo6tuu2QJwGJdpEsV/vzS
      bW4t25C7thyqC/I7x/bi0hae30oz7s07qSRnR0dWbTJZ5wAWayZRLPFH529s6eQHuB5P8ofn
      bpApV5Ekad5/MF117ko8vqb9giUAizWRLJX5w3M3GEhvTQ7vg/SmsrwzMLroucOdVGLNIduW
      ACxWTaGq82cXbzOySJnxreT1nmE+HonPe8wUgt51lFWxBGCxKkwh+PGdwZp7etY3FvjejV4G
      UveC8pLlEpk1VKuexRKAxaq4MDbJOwNjK79wiyhUdb53o5fSzEHZRL6wrjBtSwAWK1IxDF65
      PbAjOs7fT08yywdDEwCLhlFPjY4hhGDk7h103SQbn0B/4BjBEoDFirzdP8rkGtsnbRWv9QyR
      r1Qp6AtLtk/evE62nObWW+8RS6fpu34XYZZJT05RrepUShXrHMBieXKVKv/6gyvE8rXpVrkZ
      fHt/B4qmM5Sdn6hT7v+Qi8NeQvYJcoUQmhOUqRt8cv4uTSdeIGrLWiuAxdIIIbg6kdjRkx/g
      g+EYJX3hSbS97SCpS2/haX+M4shp7L4WkokSj//yd9i7vw23w7QEYLE0hhCcGYpt9zBWZDxX
      JJZdxESTfRz4wjNE6pzsOv4UTV1hTr70IhO3b2OIKp7ORy0TyGJpsuUK/+ytczVpVbTZ1Htt
      dIRW133yfqwVwGJJbk+l1zT5hTCplksgdMq5AmCglx88mTXQy9OuS7NaZBHLZV1kSjrr6aps
      CcBiSQbXGu5gVBi6eAFj4gYXXj+DmRtk5M4YycEB7nkfJxm7PgxAqecMsfhSF1sbxaq5rhqo
      VlkUiyUZzKy+lCKApNiwiSpjQwXaOp2M96bwNreT7u1BqcTovzFMw/H96LkCg+cnCTgFGHm6
      33iDYskk2tWJ6W8hd+s0DSeeJD2cpeWhPav+/IjDzVhxbSfV1gpgsSTJ0hpDCyQZV9BGcqpE
      oClCvGcQt8uBXi4xNZrmwEu/QKQpSLL7MqY9hKpImLkpCO9jz+MnKQmJQs9F7O4IE+fOYm/v
      XNPHu1QbYcfaKsxZArBYlKphUKiuPR/XHW3G31CPw9+Ir7kRza7hq2+g+dBeut/8EVOxMh3P
      fxOvvYDhiOKtb8TNBH2XbxPpOow34CB45CSyN0rYvzaTpqybnKivR1nDRtjyAlksSsUw+F9+
      fp5sZWNNsbeSr+9p5et72rgcn+BSfHUlHK0VwOIzgzKTHHO0Lsq+YGhVPiFLABaLosnymkwJ
      YehU79szCCHQSwWMmZIoQhhUiiUQgko+S3V2ZREm5VyGUiZNtVyhWshRyuUwTYFZKVHOF1it
      kTKbKilLEicbGjkcqVtRBJYXyGJRJEnC57CRWuDHXwyTqduXGBtKcuTLXwJAL8QZ/NnbOE99
      laYGH+nrZ7h1K82xx3fTfbkbSbaz94UvoYky8ZuXyMfHEMEuXEaWYiaJ9+CTFG+9R6UqCJ34
      CvVN/hVH4XfcV/ZclnmkvoGQw8GFWIzsEpli1gpgsSRRl2PlFwEgEzn4CIG6e5NUc0dpffgI
      iixh5CdIlgNEoi5Skxl2P/tlIs0eKvkKaE5aTj5NoLGJ1ocext8QoGqouHwCJbCP/V/9AvnB
      8VWOd6EHqMsf4KXOLo7X1eNQFm6qrRXAYkm6gl7Oj01u+Drxax+THi6SHh2m/dhRiqUyRqmC
      NGOyiNIkBT1Avd2k2naETgXi4xmMcgY9Y0deRTVqTZaJuhd3gbo0jWPRKEfr6ogV8gxnsyRL
      JXJ61RKAxdLsCa1sdkyjM3buPeK9w1RlN2olQ/3uZnrOXaSi3WX3sy9x7FGV8VvXiHY00/3u
      z9Dq9yEnrjOW6MBrTFJ3+ADoRYY+eI9SSdB48hn0yjh3Puqj85kXVhzB7pAPRV7e4pcliUa3
      h0a3B5hO87TcoBZLUtIN/rd3zpMpr8EVahTJJEp4I0FW2kPnYqO46hrnmlZvhF/Y285Le1rX
      /D5rD2CxJHZF5lh9eG1vUpz46lae/ACe+qaaTH67InM4Glz5hYtgCcBiSSRJ4vGWKGoNJulm
      sifkp8W3vq41lgAslqXN72FX0LfyC7cJCXi6vWHdjbwtAVgsiyrLvLR77bb1VrEn7OdQ3frM
      H7AEYLEK9oX9nGyKbPcwFmCTZb65p21eP+O1YgnAYkUkSeIX9nUQvO+kdSfwbEcju0IbM88s
      AVisijqXg18+0Lmm+KDNpCvg5au7W9dt+89iCcBi1TzSVMfX9mx80m2UqMvB7z68f9E+AWvF
      EoDFmvjKrha+1NXEdnlGJeBXD3URctprcj1LABZrQpFlvrm3nW/sbd9yc0iTZb61v53DG/D6
      PIgVCmGxLoQQfDAc469v9pNfR+rkWvHbNb69v5PHWqI1va4lAIt1I4Qgli/y3avd3E1k1lWe
      fCVkCQ5GgnznUBd1rrUXvloJSwAWG0Y3TT4eifPz/lGG1lhKZSkkoCPg4fnOZh5uiKwY6bnu
      z7EEYFErilWdS7Ep3u4fW3cPMVWS6Ap6eaa9kUN1QZw18PQsx/8PYI98kyMrKqsAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Map and Bar Chart' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Totals' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Penalty Points for Counties and Offences' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage Of Penalty Points Map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot of Speeding and Careless Driving' width='192'>
      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
      9QEa9zX/P1oBUaqNYzMlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table of Totals' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
