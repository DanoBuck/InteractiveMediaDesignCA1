<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PenaltyPointsData (ImportDataForTableau)' inline='true' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ImportDataForTableau' name='excel-direct.0cy02yi0mdmiva145u30812gfpeh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\DataSets\PenaltyPointsData\ImportDataForTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cy02yi0mdmiva145u30812gfpeh' name='PenaltyPointsData' table='[PenaltyPointsData$]' type='table'>
          <columns gridOrigin='A1:V1045:no:A1:V1045:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='Offences With Alcohol' ordinal='2' />
            <column datatype='integer' name='Failure To Wear Seatbelt' ordinal='3' />
            <column datatype='integer' name='Breaches Of Driver Duties' ordinal='4' />
            <column datatype='integer' name='Careless Driving' ordinal='5' />
            <column datatype='integer' name='Contraventions' ordinal='6' />
            <column datatype='integer' name='Dangerous Driving' ordinal='7' />
            <column datatype='integer' name='Driver Exceedings' ordinal='8' />
            <column datatype='integer' name='Driver Failing To Restrain Minors' ordinal='9' />
            <column datatype='integer' name='Driving a vehicle when unfit' ordinal='10' />
            <column datatype='integer' name='Driving a vehicle while holding a mobile phone' ordinal='11' />
            <column datatype='integer' name='Driving dangerously defective vehicle' ordinal='12' />
            <column datatype='integer' name='Driving Dangerously Which Could Harm Pedestrians' ordinal='13' />
            <column datatype='integer' name='Driving vehicle before remedying a defect' ordinal='14' />
            <column datatype='integer' name='Fail To Comply With Signals' ordinal='15' />
            <column datatype='integer' name='No Child Restraints' ordinal='16' />
            <column datatype='integer' name='No Insurance' ordinal='17' />
            <column datatype='integer' name='Overtaking   Offence' ordinal='18' />
            <column datatype='integer' name='Parking a vehicle in a dangerous position' ordinal='19' />
            <column datatype='integer' name='Speeding' ordinal='20' />
            <column datatype='integer' name='Use vehicle without NCT certificate' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offences With Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offences With Alcohol]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Offences With Alcohol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Failure To Wear Seatbelt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Failure To Wear Seatbelt]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Failure To Wear Seatbelt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breaches Of Driver Duties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Breaches Of Driver Duties]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Breaches Of Driver Duties</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Careless Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Careless Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Careless Driving</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraventions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contraventions]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Contraventions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dangerous Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dangerous Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Dangerous Driving</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Exceedings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Exceedings]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Exceedings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Failing To Restrain Minors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Failing To Restrain Minors]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Failing To Restrain Minors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle when unfit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle when unfit]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle when unfit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle while holding a mobile phone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle while holding a mobile phone]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle while holding a mobile phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving dangerously defective vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving dangerously defective vehicle]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving dangerously defective vehicle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving Dangerously Which Could Harm Pedestrians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving Dangerously Which Could Harm Pedestrians]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving Dangerously Which Could Harm Pedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving vehicle before remedying a defect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving vehicle before remedying a defect]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving vehicle before remedying a defect</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fail To Comply With Signals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fail To Comply With Signals]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Fail To Comply With Signals</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Child Restraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Child Restraints]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Child Restraints</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Insurance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Insurance]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overtaking   Offence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overtaking   Offence]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Overtaking   Offence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parking a vehicle in a dangerous position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parking a vehicle in a dangerous position]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Parking a vehicle in a dangerous position</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speeding</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speeding]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Speeding</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Use vehicle without NCT certificate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Use vehicle without NCT certificate]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Use vehicle without NCT certificate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V1045:no:A1:V1045:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
      <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
      </column>
      <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
      </column>
      <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
          <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
          <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
          <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='None' name='[none:Careless Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Dangerous Driving]' derivation='None' name='[none:Dangerous Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_564920284103004161]' derivation='User' name='[usr:Calculation_564920284103004161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Careless Driving)' hidden='true' name='[Action (Careless Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Careless Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
        </groupfilter>
      </group>
      <group caption='Action (County,YEAR(Date))' hidden='true' name='[Action (County,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Dangerous Driving)' hidden='true' name='[Action (Dangerous Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Dangerous Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.130705' measure-ordering='alphabetic' measure-percentage='0.869295' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_564920284103004161:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter by Selected Option' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Totals' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Totals' />
      </command>
    </action>
    <action caption='Filter by County' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Map and Bar Chart' type='sheet' worksheet='Percentage Of Penalty Points Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage Of Penalty Points Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Map and Bar Chart' />
      </command>
    </action>
    <action caption='HighlightFields' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Totals' type='sheet' worksheet='Bar Chart of Driving Offences and Penalty Points' />
      <command command='tsc:brush'>
        <param name='exclude' value='Bar Chart of Driving Offences and Penalty Points' />
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard of Totals' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart of Driving Offences and Penalty Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar Chart of Driving Offences and Penalty Points</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2014' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' field-type='quantitative' max='5937880.2000000002' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Numberof Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000d6' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#0000003e' />
            <format attr='line-pattern' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#6666664e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <reference-line axis-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Bubble Chart of Total Penalty Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <size column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Penalty Points for Counties and Offences'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' direction='DESC' using='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]' />
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Number of Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-color' value='#6666665d' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='286' />
                <format attr='maxwidth' value='286' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk] / [federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names])</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage Of Penalty Points Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Penalty Points in the Republic of Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' included-values='in-range-or-null'>
            <min>0.0050000000000000001</min>
            <max>0.48184101428610038</max>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-322530.15371996537' min='-1499602.0940846899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7488206.7395304907' min='6680774.2487437539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot of Speeding and Careless Driving'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2014' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]' value='N' />
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' />
              <shape column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table of Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols total='true'>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard of Map and Bar Chart'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
        </column>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
        </column-instance>
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80700' x='0' y='0'>
              <zone h='50000' id='1' name='Percentage Of Penalty Points Map' w='80700' x='0' y='0' />
              <zone h='50000' id='8' name='Penalty Points for Counties and Offences' w='80700' x='0' y='50000' />
            </zone>
            <zone fixed-size='193' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19300' x='80700' y='0'>
              <zone h='14000' id='6' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='19300' x='80700' y='0' />
              <zone h='8625' id='7' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='19300' x='80700' y='14000' />
              <zone h='8125' id='9' name='Penalty Points for Counties and Offences' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' w='19300' x='80700' y='22625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard of Totals'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='45625' id='1' name='Bar Chart of Driving Offences and Penalty Points' w='84000' x='0' y='0' />
                <zone h='54375' id='8' name='Table of Totals' w='42000' x='0' y='45625' />
                <zone h='54375' id='9' name='Scatter Plot of Speeding and Careless Driving' w='42000' x='42000' y='45625' />
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
                <zone fixed-size='278' h='36250' id='6' is-fixed='true' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' w='16000' x='84000' y='0' />
                <zone h='9375' id='7' mode='slider' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='16000' x='84000' y='36250' />
                <zone h='5750' id='10' name='Scatter Plot of Speeding and Careless Driving' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='color' w='16000' x='84000' y='45625' />
                <zone h='48625' id='11' name='Scatter Plot of Speeding and Careless Driving' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='shape' w='16000' x='84000' y='51375' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Percentage Of Penalty Points Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Month:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Year:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Bar Chart of Driving Offences and Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Table of Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Bubble Chart of Total Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' size='40' type='color' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' size='322' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' size='50' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Penalty Points for Counties and Offences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatter Plot of Speeding and Careless Driving'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[tyr:Date:ok]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard of Totals'>
      <viewpoints>
        <viewpoint name='Bar Chart of Driving Offences and Penalty Points'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Scatter Plot of Speeding and Careless Driving'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Table of Totals'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2014</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Dashboard of Map and Bar Chart'>
      <viewpoints>
        <viewpoint name='Penalty Points for Counties and Offences' />
        <viewpoint name='Percentage Of Penalty Points Map'>
          <zoom type='entire-view' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart of Driving Offences and Penalty Points' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart of Total Penalty Points' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V5BcV5rn9zvXpXeVlWVRhYIHSAKgAcmmac/unh6zMzsrRUg7K4U2VrsR
      qwcpQhGKkSJkemNCUkj7oAiFVpoNKTSa3Znd7ZnuMT3dbEMOu0nQgSAIb8sA5bPS+8ybee89
      ekigiALKZBmU6b6/FwaBzHtOkud/z/m+8xkhpZS4uPyKouz0BFxcdhJXAC6/0mg7PQEXl+2i
      2bJIZkss5MqkCxXmM0VXAC6/nEgpsWyHu3NZLt2Z4eNr9xidTpEr1ajWm9iOA7g7gMsvGXWz
      ye3JFO9eHOOd87eZmMuu+nlXAC6/FJRrJj/7+CZ//s5Fbk8uYNlOR99zBeCyp5lNFfj+zy/x
      1+9dJV0os16nvisAlz1JtdHkR+9f4//6i7NkCtUNP8cVgMuewnEczl2f5J//yduMz2RwNnmP
      6wrAZc+QLVb5w794n++9c7HjM/5auAJw2RNcHp3hv/uXP+LuGl6d9eIKwGVXYzsOf/3uVf75
      n7xNpW5u+fNdAbjsWsymxf/3o4/5P79/Fsd5MjGbrgBcdiV1s8X/+Ec/4Qdnr/EkA5ZdAbjs
      Oupmiz/4f3/M35y99sTHcqNBXXYVzZbF//Kv3+KH7z/5xQ/uDuCyi3Ach3/xvbN8/51L2zam
      uwO47Bp++P51/vhHH2/rmO4O4LLjSCm5OjbH//onb2M/IW/PSrg7gMuOU6jU+e//7x9RrNS3
      fWxXAC47zv/+3V8wPpPZkbFdAbjsKJW6yTuf3tmx8V0BuOwYjiP5/juXyJe3/+jzAFcALjvG
      fLbIv3rz3BO96V0LVwAuO8a/fvMTUvnKjs7BFYDLjjCfKfIXv7i809NwBeCy/ThS8u/eukDd
      bO30VFwBuGw/+VKNtz+5vdPTAFwBuGwzUkrOXhpnaiG/01MBXAG4bDOOI/nLXXD2f4ArAJdt
      ZSFf5tKdmZ2exiKuAFy2lZ9+dGPTpUy2ElcALtvK5bHZnZ7CElwBuGwb+XKNK6NzOz2NJbgC
      cNk2xqbT5Mu1nZ7GElwBuGwbt9ZRtXm7cAXgsi1IKbk9ubDT03gMVwAu24JlO8ylizs9jcdw
      BeCyLdTNFrMbFIDh8eBRIRDw49cFutfAEB1+WSgM9XfjU5f/a1cALtuCZduUa40NfTfRk+Bg
      T4BXzzzFyaEYJ0/sx/fQ3x/a14vPs/xSjvT3cLI3jLKCYNyqEC7bQq3RpFzbWHHbdLHKof4w
      zXoVw+/HJyQymuAfv/EUZiaNHUpAPcH50SJvvHSQ0vwstypeDsdUah4PwwrUdIOhriDFbIo5
      EeVoyOH6XM3dAVy2h3J145Wdm+UKxuAITnaGhreHgFMm2hUmNbtAoivI1dtT/PjDW0T6esgn
      F5gq1NHtBj949zIf3pjkp2evg67yg3cuInwhMGv84N1rqD7N3QFctgfL2YT7U7aYz6TJTFfR
      rCzFaoGCbaEMD3Lh1ix30w2+/vwRPro2Rv+zBxFWnplsjqYDlKpgNsncSfH1L57k9s0x8o6B
      6cDEVB4hdzIh0+VXhgs3p/hP/uBPdnoaj+EegVy2BU1bwQ2zw7gCcNkWNHVnlpqq6wwkIvj1
      B+MLuqJhesLe9rx2ZFYuv3LEwv4dGffMs8cIWCbhg3H+6twEka4EXzrVjSl8jF+/5e4ALtuD
      oal4je1/3xYqJn09Yar36442zQaaJ0BUs0jlqq4AXLYHQ9foCge2eVSFgajOm+9eI9DdhQoE
      o1Hmx0f5ZMHhcF/YFYDL9mBoKtGQb+0PbikOd2ZKvPHaU8xOzXPmhaNY+QyBvv08EzSZMXXX
      DeqyPUgp+a//xQ9488PrOzQDQU/MTypfXfKn7g7gsi0IITi0r3sHZyAfW/zgCsBlGzl5aABF
      dBrGuT24AnDZNg7v694BO2B1XAG4bBuJWIih3thOT2MJrgBctpXXTx/a6SkswRWAy7byxovH
      dnoKS3AF4LKtjAx0cXQ4sdPTWMQVwB5HSknTtimYdearJWYqRZK1MuWmieU4O9p+aDk0VeXX
      X316p6exiBsMt0eRUlK3LWYqRRZqZSpWE0dKpAQhQBMKYcPDQCDCgD+EpiiIXeKC/PqLx/ij
      H57bkb7Aj+LeBO9BHClJ1srczKeoWat3WRFAl8fP8ViCmMe3a0Twz/6fN/neO5d2ehruEWiv
      4UjJZDnPlez8mosfQAJZs8ZnmTmyjdquORL9/W+e2bEcgYfZ+Rm4dIyUkoVamVuFNK115tjW
      rRZXc0nKLXNXiODIcA9ffeHoTk/DFcBewrRt7hQzG04wr7SajBdzOOy8AAD+yd99DZ9H39E5
      uALYI0gpma+VKDc3Xl4EIFkrUzQ3VqBqqzk61MO/97XndnQOrgD2CLaULNQqm353W9JhoV7Z
      FccgRRH8w9/8ApGgd+fmsGMju6wL07Yotzb39n9A3qzvmjZFiViQ00f27dj47j3AHsG0rc0V
      l3r0WdJB3eD7T0pJuWWSqpcpNk0saWMoGnGvn4Q3iFfV1uVu/f3/+Btcn5gnW3w8Xv9J4+4A
      ewSJ3DLTVUo2fASyHIfbxTTn01NMlHNkzSrFZoN0o8KtQopPUpPMVIvrev5wb4zf/4/ewNiB
      2kHuDrBH0ISKIgT2FqhAUwSKUJCyLaumbWM6No6UaIqCV9XQRPvd+PCb3JGSq7l50o3Kis82
      HZtbhQUsx2Yk1PXYTrBkTNvGQeJRNd54+TgTs1n+8C/f3/wPXAeuAPYIXk3Dq2q0HHvTzwpo
      HhQhyDZqzFQLFJoNWraNRKIKBa+mk/AG2BeM4FP1xUU8WcmtuvgfIIHxcpaox0fM83k9IMtx
      yJk1ZqtFis0GTdtGArqiEDa8/Oa3TnJreoFffDq66d/YKa4A9gi6otLl8W2JIRzz+hgtZpip
      Fh6zK2xp02zalJoNFuoVjkUTJLwBWo7NdKXQ8RiOlNwr54h5/EgpMR2bO4U0yVoZSz4ypu3Q
      qFfI1Kv87u8+R75a4/LN7Wmn6toAewRFCAaDEXRlc//LAppOrlHlXjm3plFdaZlcyc6zUK9Q
      bDZo2Na6xso0qliOg2lbXM7MMVMtPrb4H8ZBUlcsfu/vv8zTR/vXNdZGcQWwh4h5fPT7wxv+
      viIEXk0j0+i8VWnr/ps7a67fQyOBqmUyVsqSNTsfU+rwD3/vFZ45/ORF4ApgD6EIwbFoN3Hv
      +utsCqDXF7x/7l6fJV21mqRqVTbiOMo16sxVS+v+nvQI/tv/7NtPPIPMFcAew6NqnIr30esL
      dvwdVQj2h2IkfAEa9toRpMtR38D3BJBv1lc99qyEg6SqtPiDf/qb/IfffAF1pSZfm8QVwB5D
      CEFAMzjd3c+xaDc+beVgMgGEDQ+n4v2ciPVQtZqbuktY7xoM6d7F2KXMnSuMTWaQ0uHmh2fJ
      F9c25sstE6EK/qt/8Ab/w3/66wR9no1Me1VcL9AeRAiBrqj0+8MoCBbqFaqt9uLWFAW/phPU
      PSS8Abq8Pgy1/b/ZtNZnxD5KxPBRaHaWxSWAAX+Y28UMAOXJOW6JMiP9z3Dxgw95deAZGqm7
      NLUwsWiAcDRApWTi1HNkijbDR/ajCoeGbRHwGvzdr5zm6HAP//Mf/4wrY7MbOo4thyuAPYaU
      kmyjxngpS8FsYD9yvBBOWwT7QzHCxtI35maqsglgfzCGrEiKzbWjSYeCsUUXKIAwAkTUFrOX
      LhE98Txgc/XtH3P5XoOXX3iaE689w2ymwsKlO/QPGlxu+njpVN+SG+WnD/bzh7//H/CnPz3P
      v3rzE0rVzUe1ukegPYQtHW4X0pxPTZNt1B5b/NCO9kzXq3ycnGS6UliygAK6seGxNaEQ0A2e
      iw/S6wuxkpRUoXAwHOdoJIGuqmjK551Z9g10c/ZKiuNDPqhMYcWf5dmnhzh2aoR3/vos+0YG
      EIpBIOjFtm0UIdDVpeERQb+Hf/I7r/Hn/9M/4ltfOIGhby58Qv3Od77znU09wWVbcKTkTiHD
      3VKus88jSder+DSdsNEON5a0Q6o3khAT8/gZCkbRVZUeX5CI4UURAke2b48DmkGfP8SxaA99
      vhCKEChCkK5XqdstPOEQkd5e+nr7SfT1EewexGvnCA8fQbUq1JQwT508TiwC2UaQk6cPEDI8
      jIRiCCGoWU3qdgtbSnRFJRzw8s2XT3Dy0ADFSp2ZVGFDxyI3KX6PMF8tcSkzt+6lqykKr/bu
      J2h4sBybS5nVY3mWQxGCZ7r66PeHyTcazFUrpGs1iqZJw7ZwpERXFHyaTtznoz8QYCAYxFBU
      JisFbuYXVp13o1xEeIJ4jKVv85FQjKjHy2Q5R8O2kFIihMCv6RwIxUl4gwghaFk2N+4m+ev3
      rvDTj2+u62jkCmAP4EjJ2bm7VK3mhr4/EAhzOt4PQlAwa1zKzK3rVrfHFyRmBBjLF5irdiYe
      XVE4GIlyOBpltJSm0IHd8DBeVSPq8ZJb4QJOACOhOAdD8SUBd+lChXc/G+WnH9/k5t0kxTXE
      4ApgD5Br1Ph4YWrD3zcUldf6R/Bp+mJq5c18imYHgXVeRafSdMjVGxtyoXpUlf6gn6Zsdnwf
      oApBtzdAvrn67bMATscH6fY+fifiOJK5TIELN6e5cGuaj67dJZl9/ELOFcAe4HY+zXgpu6ln
      vJAYpNcfQkqJLSXZRpWJUo5Sq7FsdpihqAipMluuYW/BEvFpKlGfhs3qIvAoGocicWar+Y4u
      3yK6lzOJ4VUTcOT9gmGlaoNrE3NMzueYTOZYyJVdN+heYCO3sI89w2phOTapeoVUvdx+poCo
      4UFXNCRtL5OhaIQND7m6ya1cfksWf3t8G9EQDIUDVCzzsbBuTSh0ef0cCHVhqAoT5XRHz63Z
      LRp2C5+2sodLCIEQEA35eO3UQU6fGGK6XGKhVnUFsBfYik3akg6jxTTJWukxL5BPdTge7SXi
      8SEQzFbK3M4ltywF8wG1lkW6avLqwAB1u0Wl1cSWDkHdQ8zwEtA9qEJQaNY7/s22dDqap5SS
      vGlyOb3ATLmyePxzBbAH8K4S7tAp5VaDvFld9hxft1tMlDOc0gcxbYeP5mbXXXirU3KNBqP5
      Ai/3r9wuSVdUhBAdiUAVykN3DctjOQ7Xsxkup1OP/S73ImwP0OXZXFsh9b4ffbXlVG6aFJt1
      rmZS1DYZMrEWY4U8yerKBq5fM/Aqnb2b/aqOV13+BSGlpG61eGd6kk8XksuK2hXAHqDbG8Cr
      bnyzDuqeNd+mDpLpSomJYnHD43SKLSWXUgsrlmZRhOBAOL7mcwRwIBxf0QAuN5v8+O5dpsvl
      FZ/hCmAPoCrt8IKNoCA4FO7qKA5oulTe8nP/SqTqNfKNz3307T4HFtlGlflqEQWFbu/KneUf
      3APEPct/pmXbvD83Q36NKniuDbBLaVdP+NwAHgyGyZk1krWV32bLcTgSJ+EPkjEr1Osre5Ok
      hGpz7XuBViXDhz/4MdIb5rlf+20ij+TmJG9cxRg6RFdo7aSd8WKeuM+H5djMVUvMVgv3K163
      f7OmqPhUHVs62FKueBP8KI6UXEglmV/lmPUAVwC7kKZtkzWr5Bo1alazXTpE0QjqOhHD21E0
      pkBwMNzFwUgXilDYF4iSM2srVpXwKgZNZ+2b5vzMOPtf+y1G9kepLdzl3R+ew9tzhOE+L9OT
      kxhGmG7vNLlZD4eOj6wYNAcwX6ngSMlEKct0Jf+YjdJybFqOTcTwMhKKY6gqmlDxa/qqfv/5
      aoVbuc5iptwj0C5CSkmuUeNiZoaruXmmqwWyZo28WSdZLzNRzmE6LcKGB0NZPgpSACHdw/OJ
      QY5Eu9v+fcchqHs5HE7ge8RgVISgzxcmoHVmaAtFxbEspHSYGR3jxNf/DhFnnvnJFP3Pv05P
      xOGjv3mH2L59qy5+gJplkWvUSdZKqxroxWaDVL1MSPcQ0I01L70uphY6vr9wb4J3CVJKFupl
      buQX1gxREECfP0zCG6R0v1qDAPyaTrc3gEfTSdbKpGrtag4tx148OgR1A0NV8agqhqIS8/gJ
      G17Ozc9xJ59fc55Oo8S5H72Jqfg58vRRbn16ASO2n5F9UbqeOkHt7jhKNMD0zXlOvn4GdRUV
      qEJwKhEnY64uAGhflL2QGCJkrF5IN1mt8qO742v+jge4AtglVFomn6ZnOs7ZFcCxaA/7g7HF
      N6KUkrvlPBOlHPVVuscIIOEL8lSsh9D9pJn3ZqaZKHZe92erGIn4sejM7fpUrI+BQGTVz7w/
      O8Pt/NLjj7Rtivk80e7uxz7vHoF2AQ+KSK0nYV0Ck+X8YoSo5dhczs5zPbew6uJ/8N1UvcKH
      yUnS9SpSyh2pFi1gXeOuVRWvadvMVh53EjiWxfzdewBkRq9QLDcpplLkU1nXCN4NNKwWmcb6
      6+7U7RbZRg2/ZnAzn2a6sj4fftOxuZie5aXeITzq9hemFfczvswOyz2uZPc8oNJqYtqrP6s8
      O0tAV/j0k1k8lRlXALuBUqtdJ3Mj5Mwq1VaTyfLa5/flMB2bTxam6fE9fLSwmL41QblU4qmX
      zgBQzcyQuXEH5bmv4b/3IUnvQY4OxaikZ1Fi/Uyc/5hTX/oKqpPm3C+meOqwzlS5SSXt5UhP
      nkzwBI3kNKdeeX5xFI+qcigS51YhueZOENAMwoaPXKNKodnAkjZeVSNm+AnoHgRQMpvLh3AI
      ydSn75FMlhmJqCiKwoEzrxIs3HAFsBuwHGfDxc/rVot5c3OdY0zHptyqI1j0wDN0/CjXPvhw
      8TOB7n04sSmyDiRTGTKZaYqTQ7z4lZfJjF7BGx9EUQQoUci/xQfvSp7+1jfIXvoR5yYNXvg7
      T3Pt7EV+PjPNs9/+dWJBnYjhoc8fYqaSp9Ra2bWrCoUeX4jRYoqcWVsSzKcrCv3+CCOhOOYK
      ST6q4eVb//S/XPJnbWvgZdcG2A3oiopY02m4PHXL2pKQ5YbdIurprO5OJBxh/+vfICBzzF26
      QNk7yPGTRxECqMzRCB/n9S+dYO7KORh8hVfO9HFvusKpb/w2zz0XY/xGCoD9kQiKEByNJgjq
      y4+tKyr7glGyZpWMWX0skrXlOExX8kyUNtY80N0BdgEB3UBXlI7Pwg/z6OJPj00QPjjEvcu3
      OfrcMx3LquXYxP0B8qYJmFz9yc9I5atIf5jSbJJnTg/y2bUpGC9w5o2vMvnh26iJE/i8ecbO
      vcPMtV4OJWzEyCscTEzx2Y0mL3z928xfeIdrc35e/Fo/U+ffY6Hs5eVvDqArCgfCkfuLVixe
      1NWsJoL2LXBY99LrD5GslVbdISQwVysSUlcOnVgJ1w26C7Adh6v5+XWHOXhUDcdhScPs0ffe
      p+W3UbueYTBQ4cb1GZ5+7SWahQwLMxl69nWTmlqga3gfiUQX+UyOrp72geBUvJ9zc/NLo0Gt
      OlVTJRBYu6RKtVTCHw53JLrjXV3sD4eYrRYotho4jkSI9nEnoBvsC0Tp9YVwkJxPT1HrIB/a
      oxiM5SodepYksxc/cI9AuwFFURgJdqGv4eV4lMFA5LEo0Vp2inPnpxke8PKLP/s+tz79iI8/
      uMi5H/yU0GAvF3/yNp6efhZuXmFh/CIzmc+/69c0nu5OLB1E83W0+AECHS5+Q1VQFJtr+Xmy
      Zg3LcXBop2o2HZu8WedGPsmdYppqy6TZYQK/Iui4fLxj1knmbVcAuwEBRAwvRyPdi62J1qLX
      F+RAqOux2qD++DC/9e+/zvl3LxDsGeSZV1/n6NEBeo6dZKAvQvzAMYb393Lw8ADv/OwOx060
      3/7K/XKLx7vi9Ac6L7y7XgQQ8+nkm7VV39S2lExV8twtdxbTAw8qSXRmx0jpIFTNtQF2C0II
      BgMRNEVltJhecqx5GE0oDAQiHArH0RWVmMfH7EPlx/efeR7N7+eFL8RQlZNk0kViXQkSXXHA
      4PiZkyg4zE/eY/jUaTz3X9mGohLQDVQheKV/gLen7lFqbqwMy2r0BHyoitWx1ypdr6Krnb0U
      ArrB4aifhdravQgUjw9fK+3aALuRhtUiWS+TbVSpWS1ajo0qBGHDy3Cwiy6PbzH8odpq8u7c
      xKY9QUPBCM92Dyz+e6XZ5K2pexTNrelNrCA4GI0gVIvKOts8aUJBitV/n64onOoaJKB5+PM7
      t2h0eK/iHoF2IV5NZygYpdsbuO+bl7Qcm4JZZ6KUYaFeXjw++DWdPn9oU+MJBAdCXUv+LGgY
      fHP/AYZDm3s2tBfni339HO/qorFGmMZySCCorXy0URAMBWJEDB+6ovB0/PGYn5W/67LraDk2
      V7Pz3CmmqdstnPvJMZZ0KDTrXM3NczPfTikU9/3onk2kTI6Eoo9VkgYI6DpfGdrPK/0DhDZQ
      WFcRgn3BEN/YP8Lxri6ajrVsQd+1kFIyGIgyFIi26xXRtiUUBH7N4Egkwf5QO+tNCMGJeJxu
      X2fh3a4NsMuQUnKnkFqzfudcrYhX1TgYjhPQDU7H+/gsPbfubiw9vgDHYokVY+yFEOyPRIh5
      PUwUC8xWKlRb1ooGrKDt5fHrGoejMUbCUXz3E1g2svihvQNqQnAk0sO+QJRyy8SSDh5FI2R4
      8ChLO9N7VI1X+gf5yb2JNatbuDbALqPQrHMhNd1RBWddUXmpZxi/ZiClJNOocjE91/GF2kAg
      zKl437LuVwnUrSYTpSzZRvX+QmrvOAKFqO5HoGLaFlKCrqoIJGWrTstp8WA9PvDrHwx3Y93f
      2dZbnVoVgmfjg3Svoy0UwN1igfdmprFWWeKuAHYZdwopJiudB7Ydj/YwFIwt/nvdajFezDJX
      Ky8bG6MgCBseDkfi9PpDKybL580al7NzK4YgC+BQuHuxG3zBrHM5O7tiMo8A+v1hUvVKRzVJ
      H8an6rzYM7Rq9bflkFJyr1Tkg7nZFaNE3SPQLmO9FaArraWf92k6T3f10ucPc7eUZ75awbQt
      FCEI6gb7gmH2h6IEjZUXU8NqcSOfXDX+XgITpSwB3UPY8HA9P7/qwpbAfK2EoWjA+gQQ9/qX
      2Dgt22G6VGWhWqfQMCmZLeqWhSPbx6+QoRP1GkS9BiOREG8Mj/D+7AzF5uPeJ1cAu4z1b8ft
      b0gpqVktpsolJooFCqb5yDldUms1SNUaXE6n6fb5ORqNMRAMYTyUCyClZGaxOsPqOEjGi2m6
      fcGOPv95/VG1413Aq2oMBmLk6k2upfJcXshxJ1ekaTtrhjwIQFUECb+XQ11hFEWjJVtLOk66
      R6Bdxu1Ciql1HIGORnoYDEQYLeS4ns1QX2dVt6jHw8nuHvaHwgghcKTDudTUunz1HkXDdDof
      dygQZa5WWjPDSxUKquPlSrLMaLZI3dpYzsTD+HSFnqDB/qgfRziuAHYbObPGZ+npjnYCTSg8
      HevnSiZNsrp83c9OEMCxWJxnEz0IIXhvfmzLqkIvxzNd/SgIxooZqpa57LwbLcnNhRoTuTq2
      s/Vz8esqLw0mXAHsNqSUXM3NsVBfuxNL1AiQqjTIrVH9rFP2BUN8oX+Ajxbubdhl2Qmn4gP0
      +kI0bIt0vUyq/rmdYlqSa8kSN1IVGtaTr1LnCmAXYtoWV7Jzq/bkjRg+kmVzWcNuMwyHQnj0
      djXpThCAV9U77mEggC/0jiwmwDxo2OEguZku8KdXx8nWt/Y3rYZrBO8SHCmpWU0KZp2a3SRs
      eJBIqlYT537VBlUIvKrOYCDCRKG85YsfYKpcJuH30GmOfNjw3k9X7KyhRdjwEnjInSmEACn5
      6dgsb45N07S3pzbpA1wB7AIsx2a6WmCmUlhiTD54u/b4QsQ9AXSlXRZwulJetvzHVpGvN0kE
      DeQa7YxUITgcThDUDZK1EuU1DGdVCA6Fux+7df7BnSneHO3M7tlq3FigHcaWDnfLWSZK2cc8
      KZJ26ZOZagHTaRHUDRwkVzOpJ7pYLCmxbQX/Ko05BBD3BMmbdSbLBUK6F2WVdBhNKByL9tLl
      +bxorpSSsVyJtydmd2Txg7sD7Dh5s85MtbBqVQhbOkyUskQMH6lancIWhSivRrbe4MXeg2TN
      Cul6hYbdQsq2KC2n7YNfrg6RqggU0X7bg8BQVaKGj5FQ12LD7gdMFiv84YWbmNt87HkYVwA7
      iJSSZK3UkcuxYbfINqpMlp7c0edhbClJ1Woc60owEuqiZdvcK+e5V8qtejCyHdm+51UEJ2I9
      9PrbDbMfPfaYls0fXx4l39j6pJv14B6BdhBLOlStzt7mknagXKq2/gpyG2WhVm3fpgqFyXKB
      iTUW/8O0HIdr2SQFsw6PLH7bkXz3xgRTpe37LSvhCmAHWW9NzkpzhcpnT4hco47lOMxVS0xs
      oE+xg+RKNkn5kX4GV1M5Pphe2KppbgpXADuIqij3g8M6w5HLF5N1WjXO/cW/5e1/811u3ZpZ
      8nfn33prw/OzHIdy0+RWfuNGt2lb3ClkFuddb1n81e1JrCdwu7sRXBtgB1GFQtwbIN9cO4m7
      HVfvQfL4DXEtP01w5BX2eXIQ8jFz8Sy3bqd56qtfw261SN66SnCwm4vvTXLiSAwiXm784mO8
      +44zEJbEjp0ieesGh049s+S5EpiqFGh0WJZkJRZqZcrNBhGPj49nU0zvgqPPA9wdYIfp84UI
      rVAW8GES3iBdHv+yjkYBWK0WwVg38+O3yCUztEoZxm/fAwSKsLn9i8/w+E1Gp5PIcp6q6XDr
      /AWCIZ17596hyuNN+KRsV2XYLBJI1io0LIv3JpObft5W4gpgh/GoGscjvSuKQNBuk3ok0o1f
      05dNYPHHD+CkL/PJz99HC7TbhurBKKGgl0AkTPe+PjINlRPHEzgtP15dQSgaXb3dRIcOMHVz
      mkMneh57rkRiPRSxKaXk3qfv8eN/8z2mJ1OM35no+HdmG1UuL+SYKe+etz+4sUC7AikldbvF
      bLVI1qwuVkIzFI1ef4hBfwRdUTFtm78eH113RtVq5MYuMVsJ8czpQ486a/BqKn798xwFx85y
      9oc3eO03XqaWyXJjdJrD/T6uXk/y7Ne+RCs3QyZdpa/Hy7Xr87zw1dcIeNunbLocSxEAABW7
      SURBVI+qcWOuyZVU54WutgN3B9gFCCHwqToHQ3EOhuIEdS8ChaZjM18rc7uYJmvW0BWF8CqZ
      XBuh6/CznHz28cUPkPA90urUzKNH+tE0A4/RXtjlTJrc3cucOzfGxbffIX5gmF989/vM3/yU
      zy5PLX61Yra4ld3+Fkxr4RrBuwRbOoyXssxWi0srO9jtQlKpeoV+f4i+QIBMY+Uo0a3kQDjK
      rYK5mLgivPtpzf8ZH/3sHn3DhwGYnZ5n38H95JwWPYdP0BsPEe0bwN8/zMDg57nKTVtue6Bb
      J7hHoF2ALR3GihmmlumV+yhRw89YrrPb480Q83j5tZEDnFuYJm8+EJykVa9SLNQIx7uQ0oZW
      g2q9hS8URkVieD00a2VKxRqheHxxpxjP1Lkyv7vO/+DuADuOlJJso8pMtdiRr73YrBPzGmSe
      YMy8AJ6Od6MpKj2+4EMCEOi+4EPlSTTwePA8Uq3E8IfofqRaXaa61JXaSo1y65Or+GKDHHj5
      DKrWjr82c1NYah+BiEF9bpJWoAvNaeGPLa1cZ9fzTH30AY63j4FnDqH7gjitFob/0Q71NqlL
      H5BbqLHv1S8TDC0tmOUKYId5UC2h0wwsiSTk1am17KV1/LeQwWCIoVAYgH3BCHdLuU0Z3iHd
      S7a61Ph1KhX6Xv9N/PnLOPm71L37cSoplGaKqavX6HrqNP5mHlP10yhmwa6RvX0Tve8peg8N
      Uhy/QfjpLxONGpTmJ6nX7jD6ySVGvvR1/KFeAr4GdRHD25ymIns5+vWDSBxmP3wL0X2U7oSG
      7Rt0jeCdpuXYlNaZ2GI7Ds/19N6PuNxaArrOy30DaPfr7Hs1naPRxAYbOLWLd/X7oivsbgJf
      dxxZukc+a5IZuwUoJE59gebdq5gA0qGSSlKaGidy9Dma6Zl2RKpp4Q0HUD0eapkk3p7DDL7w
      Con9I+RGL7JwZwxVB6tawxOLoWg61evnYOQF7Mwd8mOXKZVdL9CO03Lsdeff2tIh7vXyUt/A
      lorAr2l8aXAIv/55HoAAhkNRhkPRdT9PAM909aKiLpPYbpH89D1Gz17BEkFyV8+SujsL0iFz
      8zOqTWXp8cQI4o8E0Qy9XSy3L8H0ez9l6vxFLECoCtWpW+RTRSJdgnxRxaNrGH1DVG99xN2z
      ZzE1g+KNTykXmxjBAKkL77hG8E5Tt1p8kp5ascPhcuiKypnEEEHNYKpc4qP52U0HyQV1nS8O
      DhH3+patE2o7DmOlLOOFbEelDT2KytPxPvr9IW5mCvxv567xsAak1aRRrqB6/egeHbNcQmge
      dI+GWami+YLttEyh4Ng2QggUTcOxLBRdR0hJs1rCQUf3aCiqhlUrIzUvc+//kPCpN+jqabd+
      tc0azUYLTzBIq1pC6L72OKWyK4CdxnIcPsvMrJoA/ygh3cML3UPoioItJblGnQsLyQ25R1Uh
      GA6FeaG3H5+2ukkopSRn1hkvZsk1assW4vWoKn3+0GLRXoBLySz/x/kbO5b1tRquEbzDqELQ
      4wtSbNY7XiBxb4ByyyRVL1NpNbGkQ9SnoaleSqbVkXEsgJBh0OP3EfV4mK0UCBoewoYX3/0y
      hI/uBEII4l4/MY+PmtVO0EnXq5RbJlJK/JpOty9Ary+IT9OR98u366rC/dz3XYcrgB1GCEG/
      P0y6UXnI3bgyPlWn3DSZKucfvwsQEPEp9KohfIpBpdWi3Gwu2hi6oqKrCrZjgZDY0iZrVsia
      n0eYelSVhC/ISChGxPAuexwStBP5c40aefPzncBsWuSbde6WcsS9fkZCXcQ8PvyahiLEunIf
      ALDrTH98lmoNhl75MoFgO16qeu8K2VqARNRm6uptup5+maBWYuridUJHnmfg8BB2KcnYhx/T
      qtfp+8I3MO9+Rrki2PfsMWY/vYDVNOl//bfdI9BuQEpJpWVyPZ+ktEplBa+qoaB0VEC31xfi
      qVgvuqIsNtgomHVu5lMUm2vX/PGqGkejCQaDYdSHGve10zjL3Cqk1gyT9igqx2I9qFLnn713
      cf03wU6LpulQnfiMRmCE/pF+ZLPE+PsXUPwGolFi8JWvMHf+HFh1Ei9+ieSFTzn0pS8/mC0L
      Fz8mePQZhClx5j+j2vs6vd0ac5+8S/y5L7leoN2AEIKg7uF0fJCRUAyf2o76VBAoQuBVNfYF
      okQMX8fVo1P18uLNsiIExWaDS5m5jhY/QMO2uJFbYLJcWHxzSylJN6rcyC90lCNgOjY38ykc
      YS26VdeFolObvkJyOo8/FAAkqSsXCA4N0arV6Dt2lImfv0U+mcbf3cXkL36Co39+AWdXc5gi
      iN8fxCrco6jsIxFXsUvTWL5BPLpwj0C7BSEEPk3nSDjBcCBGzW7Rsm10RcWn6ViOw4XMzNoP
      uo8E5qpFBvxhJHA9l1x3YoslHUYLGUK6QcIXpOXYjBbS67oUazk246UsXT6DWmt949u1AtWK
      hd8vKOdKqHYFPRillJyknErTOnqQQCyEFhmiWUwS7BuknMnRLGbAG6U8cZvowTM4jXnufXqb
      +JERGtUm5bFpuk+8CLixQHuGmUqB6/n159Ge7Oqn1GwwVlx/Tu8Dur1+zvTsI1mrcDU3v6Fn
      3E03uTD3eBmV1ZCOTT2XxnZU/P4mMxMN9p86hJQOlmmiYFEtVPF3J1Bkk2o2hxGOk795gdip
      V1CsBprPD7ZJZSGNBLzdfQi7heb1IYQrgD3DrUKKyXLnZdMfMBiIsFCrUN9Ad8YHKELwfGKQ
      +WqJZH1jZVmKNYe3RjcuwieFawPsEdbtQblPpWVuqDXpo2OnahVq6+xe8zAxv07I2H0n7t03
      o18BpJQ0HZtay6JgNqi2WlhSImjfyMa8Xvyajkf9vKCUd4NtUC1nvS3plqfUMrE2cdvsUQUn
      ElE+mc1swWy2DlcA20i7k2Od0UKeuUqFaqu54uIM6DqDgSAj4Qi9/gARw4sqxLryAFShoImt
      2eQdx9lU3JGqKHxhsIeL87ltrW20Fq4AtgEpJeVWk4upBabKnSWzVFst7hTyjBbyJHx+nuvp
      IWr4yJprl1B5QJfHh65oZBqdf2clVEXBq2lUNngM8msGT8djDIUDTBS2p7xjJ7g2wBNGSslo
      Ic8PJsa4WyquO5NLAql6jbemJqk0nWV7+i6HT9U5GI4TeaQg7UYJ6AZ9vtCGwqIF0OMLoikK
      v3N8/5bMZ6twBfAEkVJyJZPmo/nZTZ2foW2I3iuVqJg2xhoi8Koax2M9RAwvUY8XfSOXUA8h
      gC6Pnx5/cEOCChleeu5nkZ3ojnKyJ7bGN7YPVwBPCEdKLmdSXEwvbGkUZK7RpN5qF9Tyqhrq
      /RvjB91jhgIRXkjsI+ENIIQgoBlLavJvBJ+m0+3136/x37MYLNcJHlXjWCSxKFpFCP7eiRHC
      xsq9B7YT9x7gCXGvVOS92ekNuy/X4rlED0diMepWi5bjoCsKfs3Ao2pLime1De8qn6U3ljPQ
      7iCZ4FC4XXDrQTjEzfzCmr2BvarGU7FeenzBx4LqfjY+y3dvdF5Y60nhCuAJUG01+dHdiY6a
      R28URQh+48Ah4l7fmp91pGS8mOVOIb3u3ajPH+RUfOCxZtoVq8lUOb/Y4fHBcwXtqNOg7sGn
      6lhSLib7eFSNsO6hxx/Ap+r80eVRzs121lvsSeEKYIuRUnJ+IcmN3JP3dw8Hw3xlaHjZcomP
      YjsOtwtpJpcLo16BPn+Ip2I9+HRjWePXkZKG3aLcNGnYFhJJw7JI1ioUzMaKYhNA3OtnMBDl
      3129x3h+57xCrht0i6lbFmOF9YcsbITZaplMvUaPP7DmZ1VF4Vg0QcjwMFHMrdrQzqNqDAUj
      HAx3oavaip4fRQj8moFfM5BScquQYayQWzZT7GEkkGnUyJl1XhuJMV+pUWttXbnH9eDuAFvM
      7XyWj+bntm28o9EYr/QPLpu4shxSSmpWi7lqu0F13WohpcRQVfy6Trc3QI8viF/TO36m5Thc
      yswxXSlt6DfYLZ2/HU/tSOU4dwfYYiZLG1sEGyVZq2JLibbKYnWkJNdoMFkqkarVKJlNGrZ9
      30Bvpy16VZWYVyGgSmyPXJegbhfSG178ALph8feeGuLHo/MUtrlnmCuALaTl2NtWt/MBpWaT
      pm0vm3Bi2jZj+QI3sllyjcaqZ/9ayyLXMBkvFNEVhcFgkNOJBH0BP+oq9wjpRpXRwuaiPB0p
      sVWT/+Klp/jzG/e4mSlsWwK9ew+whdRaFvYyrsZiJgNIkvcmASjnco8kiNuUC/ffoFaVYn59
      oQsFc2mWlyMl0+UyfzM+zrszM6Tr9XXdQLcch3ulEj8YH+dnk5Pk6stnkdmOw83c+j1Ly1Gz
      WlTsOv/5S0/zD04eJrQN9wQCVwBbSt1qLev3n/zsIo1GknPfe4uCWWLsygSZiTvULYnVamLb
      De5dH0c6DrI2y81r80jbxmq2z+eOI3Ec+/4/HxfYw1UgbMfhwsICP564S6q2ud1IAneLJf5q
      bIzbuTyPmovZRq2jRP5OuVvKowj4ykg//81rp/n6gQE86tYvUQEMBP384+ePuUbwVjJfrfCz
      ybuPvRFTV95jLufFH21Qy/sx+nth4hr+I72MfjLK4KmTlEbvoIWjHD/Zw7VboOWuUjYdovsP
      IS0DvTSGcuA0zWSK57722pLnvzawjyPRGE3b5u3JKe49ATtEAGf6enm+t12SUUrJ1ewC46Wt
      bXjxat8wvf7Pq+3m6iafzWf4YGaB2VJtU1WxQ4bOie4oLw50c7o3jqq4OcFbiiqUxdvShwn0
      DTHzyVle/93f4tyn3+XU8d8jD+QzRZ5549t0xyTnb1/DbIDHq4FVo2nEeeXrp/js4zv4tSJO
      II49egH96FcfG1ehfWz5+fT0E1n80N4NPk0uoArB8729SOg4wX495M36EgF0+Ty8cXCQ14Z6
      mSlXuZMtcSdbZKZUpWCubjDrikJ/yMdwOMhTiSiHYmHiPs8SA98VwBbi01QUxGOlA/3RXo48
      e4pgNMzh514g1h1EP3aM4HAP13/yFsVDpznyhS/j1RqU6yrDRxN4TMEnb3/CqW9+CyU/Rlnb
      h5MaIzrS9di4fl3n02SS8cL6cm7XiwTOJxcIGQYjkfCmu0cux0q35z5d40hXhCNdEb59eB+W
      41C3bFLVOpWmRcP6/B4hoGvEvAaJgA9NacdJreTVco9AW8yfj96i2npyIRCPogmFF3r6eHdm
      9onFHT2KV1X5nSOH+DQ1Q3WLwz2GghHO9Axu6TNXwzWCt5iBQHDtD20hfl3nfHJh2xY/QMO2
      +WhuflX36EbZbOj2enEFsMUM328ssV0UGiaVbdxxHjBTrlBpbv0RqJOeyVuJK4AtptcfIKRv
      bSfHlZBSYlo7k19rS0mlufXC6/atHde0lbgC2GJ0ReHpePeGO6qsh4Bu7GjJ8WrT2dKKzzGP
      d9teHg9wBbDFCCE4HI11FKG5GQK6TkD7fLHIWpLR69NUFu5w4ecXaJayzNydXva7pez6Qhca
      2SxNIHnjOg87Pi1HIrZoCQngWDTBsg2LnyDqd77zne9s64i/AihCkPD5NpQE3wmqELw2sI/R
      fIGGfb+Hr6YzdfUahqyTTFeJ+OuY2gD5mx8yPpEmFoZPfvQzhKrx/p/9W8p1gWxkuPn+xxSy
      C9y9OU3PcIKb7/yUdAmCSolzP/lbCAS59t0/ZSJbw9OocO/WFcp1g+7eWDtX2OvDo4lN5zwP
      BEIcicY7ym3YStwd4AkR9Xj58uDwuvJnO0EVgpf6+un1ByiaD8X0Cw+abJAtSAYSBtP3CkT0
      aT47P0569DozN+7QVL1IT4Tjr7zOS19/lUIyy+kvPkeDLvbHJbfPn+PevTQzl8+TTuVx7BrX
      37/O4Zde5cxvvIHXgINf/CZOfpYHy73esnkhMbgp703Y8PBsd/+SMuzbhSuAJ0h/IMCX9g1h
      bJFrTwBnevs5Gu2i1mo9dv4fiMBsTWP/kJ+xmSbhSDchv0Iw3ou/O4adn2Hm7jxqZZ6P/vYj
      HMOP19AIRCNomkagO4GuCiL9A1RT8zhCQ1UEql7l/F+9TcP2Egz50fTP0yPLrdb94rkbE4Eq
      BGcSg3i2+EXRKe5F2DZQMk0+Ts4xV62s/eEViHt9vNzXv2hbLFSrfH90bKumuGE0RfCPnnkG
      VVEoN02uZpOk6jVkB+Z5l9fHya5eurybq1qxGdxQiG0g7PHwtaH9TJaKXMumyZud9wUO6Don
      YnGOxrqWJKbvJh4s9ZDh4Qt9wyzUKkyWC2Qbtcd6CWhCocvrYygYYSAQ3ljjjC3EFcA2oSkK
      ByNRhsNhktUq90pF0vUadctabGEkYLEjTNznY18wxP5wGO1+kN3DPIlb2I2gCmXJIlaEoD8Q
      os8fxHIcalZrMWbIo7abfeiKuu3G7kq4AthGhBDoQmUoFGYoFMa5n5/btG1ajoMmFDyqSkBf
      Ox83ZCzvL7cbFcY+/lv0/V/l4IH2rXTy0rtcv5lk3+mXCTbnmLgzTd+pVwk1p7l5c47jX/km
      /b1hGpkpLr57Dm/vYY4d7+Kzn58jOHScwyNBLp29QHD4BM++/MyS8VZqrdruDqkSUVUiG/hv
      tV3sjtfIryiKEAR1gy6vj15/gLjPR9AwOsrHNRRl2cUnNIPh48M0Kg9uaSWVosULv/27HDkx
      TNfBk7z8a1+llpllbr7O67/xKsnRe0hgYWKcfS99jaBMce2Dyxz66rdRa0kmL15j5KvfhtQk
      jwZAd/vWrku0m3EFsIcZCj0eeKdoBj7/0kXpj/q4/uZf8skvPkM2sty+fI9jXziF6gmg+XyI
      Vjuufuj082Svf8TdsWmGz7zM/LmfMzk6Tf+Zl0l9/LdMj83waPBDf2B7Qxe2GvcItEcRQjAY
      DHEnX1jy581Simtvv8dkOk5v3xdp1Szq1TqqriNEi4tv/hS6Brh7owutMcvZ703Q/cwXyU/e
      RQt4sGwbb3SQkKfdpC/Uvx+vbNC0bYKHjvKw5DQh2B8OsZdx3aB7mFqrxffujC6JBpWOTbPR
      QCIw05OU1D4G+wK0mha614vdNLFtB0U30FVBs2mhez3cOXeOoy+9SKthohoeVAWaDRPV8KIq
      kmbDRPN4UR/K0R0Ohfj1gwd2jUG7EVwB7HE+nJ3jUnr762sK4I39wxyJ7Z5S5xvBtQH2OCcT
      3Xh34H6gN+BnJLKb/Tud4QpgjxMyDF7s69vWMQ1F4dWBgW3P3noS7P1f4MKJeBcj4e3LRDuV
      SNDr37nwha3EFcAvAZqi8OWhffT4n7xP/nhXjOd7ezquHbrbcQXwS0JA1/m1kQNP7GJKAAcj
      EV4fHNzx+J2txPUC/ZJRbbV4d3qGyVJpy9IlVSE4lejmTG8v+i4NyNsorgB+CXGk5Go6w8VU
      aknd0I0Q9Xh4daD/l8LjsxyuAH5JkVJSabW4mslwM5vDtNfXgcWvaZzp6+VwNIp3hYC3Xwb+
      f3mRzMKpEd8gAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Map and Bar Chart' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Totals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Penalty Points for Counties and Offences' width='192'>
      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
      xRiYefH+BgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Percentage Of Penalty Points Map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot of Speeding and Careless Driving' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table of Totals' width='192'>
      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
      7bfxOeexqHK4M0ZOnzyCUZFjajWEQQ0HWloQBLBW1ZGJh6itrSW2NY8rV45eUSSeSPPqG9+j
      5F9FUdmIWvJoBTDqtQR8HuRlNbTWVaDSlXOopZLJ5Rg/ePMZDh8+9OjohEKhiJQivniRC2eP
      4NnexmxSMj01xHogw2T7bcKZIn6/F6/by8kLF9DIpYCAyVJBdVUFlXUNjF35Haa6Rsamtnjz
      b3+CJblIx7yXVCjE3OBN5rwZQqEg43e7OPnaTzhSb6aUDrMdjBEM53nhjafYGhllfCvLD354
      Ed+yh3QmSTqVIpf/ZuVfqrQmaqttxKKxTxzfHX53pyl/PooX8wUEpYbqykqiYT9yjZ6qSjPd
      nd2PLYcgkWF31EIhjabiKJfPt+AcH8SXKWKy2BDd00x7dnMdpQoNNTU15BMxon4X48senjh3
      mnw6S4XdgbKUJJV7TDnE0oNEKHPtKZ4608Rifzed964ytbjC6PAgzsCfb7GU5YMrN9hcmWBw
      dJpYunB/esSep9MKjYGGxhqiPt+D+68MdtFw4VnkxQwf/e4XD18DSCUS2j/8FQqFkb99q5y7
      kWqUMglanQ5z/WES7//vNP3wf6LMKyUw56fMZEKaqcCoVSEAMoWcndUZ+nM+DjbVcPjlN1mb
      nKKlVssffvU7Llw6S6NuFq3RSP2RY4yv9mI01tJSY+KjK+9QyheQKlToVApUBgNSqQKdxYoi
      v877V+6QFqqQKtRIsh68sSy1pq9ni56dpTHudHejmt/guadOUirA3NgIsXQGx7GnmOi+Sffw
      Als5GQfNcn72L7+m/vglAgtjCLYmprquMr+eRWV6kWzYzZDbhePY0zQll+nrH6Ky+cye5Cgk
      gty8fYOl9ShaqwbSBWSZTabXfBSVFsI7a/QOz5GV6Lh08DQrV28ym1fwwpkE03Mu4q5lnOE4
      WlszMyN9rIVE/IEILXYFE6ODSJQmzuxhIMrHvFxru8XaZhJ9hYZ8vEBLnYnf/uxn2FrOENhc
      ond0iYzEyE9fe5vLokh3VyeVyhhzy36ynmkGhxeIZuX8zb/795TiEcaWnBw0C/zmV7/CXHuY
      kwooPdIZlqW77SaeWBJdzQlm+u9SdfwiY84Er/y4lrh/helV77etLEqB8a525jf9HLn4Oica
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
