<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PenaltyPointsData (ImportDataForTableau)' inline='true' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ImportDataForTableau' name='excel-direct.0cy02yi0mdmiva145u30812gfpeh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\DataSets\PenaltyPointsData\ImportDataForTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cy02yi0mdmiva145u30812gfpeh' name='PenaltyPointsData' table='[PenaltyPointsData$]' type='table'>
          <columns gridOrigin='A1:V1045:no:A1:V1045:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='Offences With Alcohol' ordinal='2' />
            <column datatype='integer' name='Failure To Wear Seatbelt' ordinal='3' />
            <column datatype='integer' name='Breaches Of Driver Duties' ordinal='4' />
            <column datatype='integer' name='Careless Driving' ordinal='5' />
            <column datatype='integer' name='Contraventions' ordinal='6' />
            <column datatype='integer' name='Dangerous Driving' ordinal='7' />
            <column datatype='integer' name='Driver Exceedings' ordinal='8' />
            <column datatype='integer' name='Driver Failing To Restrain Minors' ordinal='9' />
            <column datatype='integer' name='Driving a vehicle when unfit' ordinal='10' />
            <column datatype='integer' name='Driving a vehicle while holding a mobile phone' ordinal='11' />
            <column datatype='integer' name='Driving dangerously defective vehicle' ordinal='12' />
            <column datatype='integer' name='Driving Dangerously Which Could Harm Pedestrians' ordinal='13' />
            <column datatype='integer' name='Driving vehicle before remedying a defect' ordinal='14' />
            <column datatype='integer' name='Fail To Comply With Signals' ordinal='15' />
            <column datatype='integer' name='No Child Restraints' ordinal='16' />
            <column datatype='integer' name='No Insurance' ordinal='17' />
            <column datatype='integer' name='Overtaking   Offence' ordinal='18' />
            <column datatype='integer' name='Parking a vehicle in a dangerous position' ordinal='19' />
            <column datatype='integer' name='Speeding' ordinal='20' />
            <column datatype='integer' name='Use vehicle without NCT certificate' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offences With Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offences With Alcohol]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Offences With Alcohol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Failure To Wear Seatbelt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Failure To Wear Seatbelt]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Failure To Wear Seatbelt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breaches Of Driver Duties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Breaches Of Driver Duties]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Breaches Of Driver Duties</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Careless Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Careless Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Careless Driving</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraventions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contraventions]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Contraventions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dangerous Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dangerous Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Dangerous Driving</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Exceedings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Exceedings]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Exceedings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Failing To Restrain Minors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Failing To Restrain Minors]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Failing To Restrain Minors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle when unfit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle when unfit]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle when unfit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle while holding a mobile phone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle while holding a mobile phone]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle while holding a mobile phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving dangerously defective vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving dangerously defective vehicle]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving dangerously defective vehicle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving Dangerously Which Could Harm Pedestrians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving Dangerously Which Could Harm Pedestrians]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving Dangerously Which Could Harm Pedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving vehicle before remedying a defect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving vehicle before remedying a defect]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving vehicle before remedying a defect</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fail To Comply With Signals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fail To Comply With Signals]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Fail To Comply With Signals</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Child Restraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Child Restraints]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Child Restraints</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Insurance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Insurance]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overtaking   Offence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overtaking   Offence]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Overtaking   Offence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parking a vehicle in a dangerous position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parking a vehicle in a dangerous position]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Parking a vehicle in a dangerous position</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speeding</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speeding]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Speeding</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Use vehicle without NCT certificate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Use vehicle without NCT certificate]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Use vehicle without NCT certificate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V1045:no:A1:V1045:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
      <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
      </column>
      <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
      </column>
      <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
          <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
          <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
          <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='None' name='[none:Careless Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Dangerous Driving]' derivation='None' name='[none:Dangerous Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_564920284103004161]' derivation='User' name='[usr:Calculation_564920284103004161:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Careless Driving)' hidden='true' name='[Action (Careless Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Careless Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
        </groupfilter>
      </group>
      <group caption='Action (Dangerous Driving)' hidden='true' name='[Action (Dangerous Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Dangerous Driving:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.26971' measure-ordering='alphabetic' measure-percentage='0.73029' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_564920284103004161:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter Bar Chart By County' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Map and Bar Chart' type='sheet' worksheet='Percentage Of Penalty Points Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage Of Penalty Points Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Map and Bar Chart' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart of Driving Offences and Penalty Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar Chart of Driving Offences and Penalty Points</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' field-type='quantitative' max='5937880.2000000002' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Numberof Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000d6' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#0000003e' />
            <format attr='line-pattern' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#6666664e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <reference-line axis-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Bubble Chart of Total Penalty Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <size column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Percentage Of Penalty Points Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Penalty Points in the Republic of Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' included-values='in-range-or-null'>
            <min>0.0046992552886938</min>
            <max>0.48184101428610038</max>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-322530.15371996537' min='-1499602.0940846899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7488206.7395304907' min='6680774.2487437539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='member' level='[County]' member='&quot;Dublin City Council&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' direction='DESC' using='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]' />
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk] / [federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names])</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Bar Chart of Driving Offences and Penalty Points' w='84000' x='0' y='0' />
              <zone h='50000' id='8' name='Sheet 4' w='84000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='75750' id='6' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='9375' id='7' mode='slider' name='Bar Chart of Driving Offences and Penalty Points' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='16000' x='84000' y='75750' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard of Map and Bar Chart'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='13' param='vert' type='layout-flow' w='84000' x='0' y='0'>
              <zone h='99500' id='11' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='49750' id='1' name='Percentage Of Penalty Points Map' w='84000' x='0' y='0' />
                <zone h='49750' id='14' name='Sheet 4' w='84000' x='0' y='49750' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='15' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8625' id='17' name='Sheet 4' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7602' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='18413' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='7602' />
            <zone h='73309' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='26015'>
              <flipboard active-id='3' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Bar Chart of Driving Offences and Penalty Points' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='Percentage Of Penalty Points Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Month:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Year:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Bar Chart of Driving Offences and Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bubble Chart of Total Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' size='40' type='color' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' size='322' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' size='50' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard of Map and Bar Chart'>
      <viewpoints>
        <viewpoint name='Percentage Of Penalty Points Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Dublin City Council&quot;</value>
                  <value>&quot;POLYGON ((-6.2128 53.6338,-6.1911 53.6306,-6.1827 53.613,-6.1671 53.6084,-6.1478 53.5867,-6.1045 53.5806,-6.098 53.565,-6.08 53.5532,-6.0869 53.5308,-6.0765 53.5197,-6.1158 53.509,-6.1107 53.4829,-6.136 53.4524,-6.1453 53.4565,-6.135 53.4694,-6.1478 53.4751,-6.191 53.4644,-6.1246 53.4436,-6.1223 53.4233,-6.1128 53.4056,-6.1226 53.3945,-6.0472 53.3859,-6.0453 53.375,-6.0766 53.3601,-6.0963 53.3693,-6.1017 53.3853,-6.1161 53.3886,-6.1603 53.3769,-6.1411 53.3703,-6.165 53.3533,-6.1515 53.3419,-6.2098 53.3371,-6.2044 53.3163,-6.1793 53.3032,-6.1412 53.2979,-6.1008 53.2819,-6.0923 53.2703,-6.1118 53.2586,-6.1045 53.2155,-6.1236 53.2123,-6.1327 53.1982,-6.1628 53.2028,-6.1781 53.2201,-6.204 53.2146,-6.2295 53.2029,-6.2521 53.2044,-6.3007 53.2236,-6.3085 53.1942,-6.3306 53.1787,-6.3701 53.1917,-6.367 53.2119,-6.3984 53.2145,-6.4187 53.2295,-6.4554 53.2314,-6.4683 53.237,-6.5285 53.2469,-6.5257 53.2615,-6.5411 53.2768,-6.5238 53.2987,-6.5431 53.3074,-6.505 53.3356,-6.4895 53.3629,-6.4729 53.3632,-6.4609 53.3846,-6.467 53.3885,-6.4528 53.3918,-6.4375 53.4124,-6.4212 53.4172,-6.4099 53.441,-6.3971 53.4378,-6.3554 53.4473,-6.3526 53.4635,-6.3304 53.489,-6.3452 53.5016,-6.3666 53.5065,-6.3655 53.5152,-6.4065 53.5262,-6.4352 53.5482,-6.4157 53.5735,-6.3863 53.5837,-6.3331 53.572,-6.2712 53.5986,-6.2726 53.6152,-6.2553 53.633,-6.225 53.629,-6.2128 53.6338))&quot;</value>
                  <value>53.391300000000001</value>
                  <value>-6.2846000000000002</value>
                  <value>0.13971406417836429</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Sheet 4' />
      </viewpoints>
      <active id='1' />
      <device-preview selected='Desktop' visible='true' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Bar Chart of Driving Offences and Penalty Points' />
        <viewpoint name='Sheet 4' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart of Driving Offences and Penalty Points' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart of Total Penalty Points' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29eYxd153n97n727faVxZFUlwlUpspW5ZkW+5ud7enDcczmCCdBJMNne2P
      BAEGCTABOkA66x9B/kgyGMx0u9FJZ9Bxe8Zty92Sbe27RZESd7LI2rf3Xr19u+vJH69YrCJr
      ea8Wuap4P4AA6dW7594nnO895/xWSQgh8PF5RJF/0w/g4/ObxBeAzyONLwCfRxpfAD6PNL4A
      fB5pfAH4PNKov+kH8PH5shFCkCvV+Ndvf+4LwOfRolRt8KM3LvIvf3GBuWzJF4DPo4HneXxy
      bYL/7f99k+vj89xz//oC8DnwLBar/OlPP+T/+btf43qrAx98AfgcaK6Pz/Pf/tOfcXMyvebf
      fQH4HEgc1+Nn713hf/jha9RNe93v+QLwOXCYtsO/+JsP+ec/+QDbcTf8ri8AnwNFw7T5kx++
      xt+8exnP2zzQ2ReAz4Gh1rD4kx++xk/fuUyrMf6+J9jnQOA4Lv/LX/ySn77b+uQHfwXwOQA4
      rsf/8dfv8uM3L7U1+cFfAXz2OUIIfvL2F/z5qx+3PfnBF4DPPufq3Xn+57/4xabWnvXwBeCz
      b8mXavx3//znG9r5N8MXgM++RAjBD1/9iJsTC9saxxeAz76k2rB459KdLe37V+ILwGdf8uM3
      LzE6ldn2OL4AfPYdc9kif/7qxzsyli8An32F5wl++OrHpPOVHRnPF4DPvmJiPsdP3728Y+P5
      AvDZV/z4zUuUa+aOjecLwGffUDdtfvbelR0d0xeAz77hp+9eJlus7uiYvgB89gWe5/HGp7d2
      fFxfAD77gsmFPJfvzO74uL4AfPYFH14eo1Rt7Pi4vgB89jyu5/Hh5bFdGdsXgM+ep1q3+OzG
      1K6M7QvAZ88znS5Q3IXtD/gC8NkHfHJ1fNfG9gXgs+eZmM/t2ti+AHz2PLcm1i5ruBP4AvDZ
      05iWw0ymuLWLVY2oLqEZBsmQiqyqBNXVU94vi+KzpylUalhbTHhHjnD+pMZsI8GJDptPpi0C
      tTyj2RoA4WDCF4DP3qZSt3C9LQrAyoNxggg2ZVMhGQkwt+Dxhz94mU67zGcLir8F8tnblKsN
      HMfb+vVKgE6vzh1T5cm4RyGYRMmn0YJh7o5O+SuAz97G8zzENlLf70ylqdlFZuoNxnoknEqV
      nOghf3eGQt1vkeSzx6lbzkNdXdohOz1LFoAqH5San/3szUvLf/e3QD57GkNTkSVp18b3BeCz
      p9E1BVn2BeDziNJcAXZvmvoC8NnTRMMBNNUXgM8jSmc8jK7tnq3GF4DPnkbXVDri4V0b3xeA
      z55nuCe5a2P7AvDZ8zw+3L1rY/sC8NnznD02sGtj+wLw2fM8cbSfUEDflbF9AfjseYKGxpnH
      +nZlbF8APnseVVF4cpe2Qb4AfPYFL547gq4pOz6uLwCffcGJQz2M9HXs+Li+AB5RhBA4nkvJ
      ajBfKzNdKTJXLVMwG9ieixDbbT+3s4QCOn/w4hM7Pq4k9tov9dlVhBDYnsdMtTnhS7aJKzyE
      AEkCWZKIaga9oQgD4TgBRUXaxXDkdljIlfm9//L/xLK3mCK5Bv4K8AghhGCxUePj9CRXcgss
      mjVsz8UTAoHAEwLH88ibda7nM3y0MMVCvYK3R96RPako333hzI6O6QvgEUEIwUK9wsXsLAWz
      tTKDFdvk8+wc05XintkS/cPfehpjB4PjfAE8AgghKFgNruQWaLhOW9dansu1/ALZRnVPiOD4
      cA/fevbxHRvPF8AjgCs8RgtZ6o69pettz+NWIYu11fIkO4iiyPzR918gHNwZz7AvgEeAxUad
      TGN7vbUKZoOFWmVPrAJHBrv4wTfP7chYvgAOOEIIFmpl3G1OXI/mGcLbRomSneQfffd5+jvj
      2x7HF8ABxxWCvFnfkbFKVgPb/c1vgwC6EhGeOj647XH8ukAHHNtzd2zvbnselucSQNvS9UII
      6q5Nul4hb9awPBdNUogbAXqCUcKq3pbP4T//By/x6fVJFnLlLT0P+CvAgUcs/bMzY4kt+wSE
      EExU8nySnuRWMUOmUaVoNciaVe6UFvkkPcntUhZXtF4GcbA7yT/+d769pee5hy+AA44iSSg7
      5MlVkFBlGSEErudRcywKZp2CWadqWziet+YhWQjBaCnLrWJm3dXIER7j5RzX8gtrimyte9Yd
      m289+zh/9P0X2OpP9LdABxxNVgipOrUtmkBXElA1FElmtlpirlZqhlF4zWOxKkuEVYO+UJSe
      UBRdVpa3M9lGlYlyvqV7zNVKJPQgQ5HE8meW67JQLzNfK6+6py4rJI0g3/vts4zNLfL6Rzfa
      /k1+LNAjwJ3iItfy2++yMhCOIRBkG9V1t0ISEkkjyKlkNxHNQACfZafJmbWW7xNWdb7SPYwq
      yVRsi+uFNLlGbV0LlCrJxCSD//2fvcGV0bm2fpO/BXoE6AlFCatbO7jeQ5Vkilad9CaxQQJB
      zqxxKTtL2TaxXId8G5MfoOpYVGyTotXgs+xMU3AbnGQc4ZHz6vxH//6LnDnWXuaYL4BHgLCq
      MRxNsp2TgCJLbYVRVByLW4UMJdvc0iG8aDW4UUhTdayWrzFlh//s33uZ00daF4EvgEcASZI4
      FE0wEN6a4yii6VvyAC82amS36IFO1yvk2vRfCKCuuvxP/8X3+PZzx1s6GPsCeETQZIVTqW6G
      IvGWy41LQF8oSkIPbMkD7CEothh5+iAly9zSdbbnUpNt/uQ/+Xv82995btPv+wJ4hNBlhdOp
      Hp5I9RLR9HW3RBIQUjVOJLs5lerZliPN8hxCbZ4/ZEla9geMfvA+i1UT4db44PX3WlqJcmYd
      XVf4r/6tV/jv/+i7JCLB9e/V1pP57G8kCQmJmG4wGI7TEQgRUFQMRSWi6XQEQgxF4pzr7Odr
      vYc4EkuhShL2NgTgCkF/KN7W+SOuBZfXm8rCba5cnqY0cYcLF67g2Q0mrl1lbi5H3RYIz6JS
      rJIeH2VqYh4BWK6D7Xkoisz3Xn6Sf/FP/nDdsAnfD/CI4AnBTLXIeClPxbYe6rslAV0BgyPx
      jgfSIKVtpURKQG8wSt2xmalt3u83ZYToDcZYbDQtR2rqMShOsODJ9A/34dSLfPKzv2HG7OCr
      336Jw9E8E9UAlYVFghRxtN/jxGBk1a97fLib/+sf/0P+8rVP+bNXP6Zcvb8t81eAR4CG6/BZ
      ZobLi/OUbXPNpnO25zJZKfDR/AQFq7H8HUWWCChbf08aioquKJxM9jAcSa7rlZaR6AvFONvR
      T1DVVpxTZIZjNtcWdTqiKqWFCfqeeoWRToNUsMDbF9Mc7QugBkIEAiqe66HKykP3CQcN/sPv
      fY0f/Y//AX/v62cI6M1tme8IO+A4nsen6am2LCqGrPBs9yBxI9iM4SnnuV7YmiNtJJrkRKIb
      SZIQQlCyG8xWS+TNOo7w0GSZmBagNxQlZYSQJIm6Y/NxepKaY1PO5QmEZPJFUCWLeDzIzc+u
      Euzqx0zfpaAP8/wzw0xdu0xNSnDs1Ah9wQhPdw7gCUHNtfCEQJfV5ZXN8wRX787x569+5Avg
      ICOE4EY+zViLYQgriekG53uG0WSlOSEXJqm77YVT6LLCs12DRHSDsmkxWS6x2KhTaJg0XAdP
      CBRJIqLrJI0AveEwA5EomiJzLZ9mqlLYcPxKsUIgEkJV7m9kJOBUsgcPj9lqEdNzQDQP1jE9
      wGPRTuJ6AEmScF3PF8BBpmyZfDg/gdNGhOVKTqd6OBRNIoCpSoEb+YWWE2tkJIajSTRJ42Zu
      kWy93pIhNaAoDMdiDEQi3C6tHzy3HjE9gC5LlOy1za+yJHEq0UtPMIokSb4ADjKjxSy3Ctkt
      Xx/XA7zQNwKA63ncLS1yt5zbNCRaAuJ6iFzNIlPfWjKOJst0hgJ4ktNyo2xDUYlqOiV743tq
      ssIznUNENMM/BB9UPCHI1tuLwXmQsm0uJ9LLksRINMWJRFczcWUNw2bTf6ATUYOM5kpbnvzQ
      TL6Zq9Qo1l1aeUWHVZ3H451Unc0daLbnMlXJI4TwzaAHFYGg0eae/aExhKDhOsiSxGy1SM6s
      YnkOuiIRUANosrocmhxQVBJ6kFzD5ItMZts5yPdoOC6iLhiIhWi49kPbOV1W6AlGORRNUHet
      lhNqClYdD18AB5qdmIJ1x2KsnF0zojOhBzmZ7CGgakhIzFbKfJ7J7HglOdP1KNQdzvf1U3Ms
      6q6NEBDVDZJGcGlFgqLV+orTrH/qO8IOLBJN+/1WawHdG2WhXl43nLlg1Zms5Dme6KFq23ww
      O7trZRRzjQZ3C0We7+tf1zGnK62XT9dkpVkLdace0GdvIQFJY/0YmFbQFZnKOtaUe2QbFeqO
      xaX0wo5knW3ErXyOzAbnmpgWRGmxq3xCDyIj+QI4qEiSRG8ouq184IQe3DQOyPZc5qoVxkqb
      hzlsFwFcWJhfd5UJKGpLId+arDAUSSJJvgAONDE9QHcwsqVrg4rKUCS+prVnJRISo4XCl1ZB
      Oluvk6ndXwWa5d5dCmadhXqZsKITVtcvmyhLEsfj3cvf8c8ABwwhmlbze+6dE8luSpbZVmaV
      IsmcTvWSMAIEVW3Da1VZYbq2+eGzPnuDt17/lGj/CM+/8nXUB7brdz7+mIHz5wlsMo4rBGOl
      At2hEILmFmy8lKPimMu/WZIkFOSm/0BiXU8w+AI4MDSLTjlk6xXyVh3TtWHpINwTCjNXEy0d
      iFVZ5kyql65QGAQMhBOMlta27MiShCHreGJzf8PNq5O88u/+IboskbnxKV9cGqXn1Hmi9hzT
      8zViEZ3Fu1fB6GdgYOPO8Nl6HU8IFuplbhXSD5lGm0IQGIrKSDS15B1W12z24W+BDgCe8Jiu
      FrmQmeJ6YYG5WomcWSdn1pitlZio5JEkQUw31j0TSEB3MMz57iH6QlGEaBbB6glGORRJoT5w
      uFQlmZFoB5qkt2RuVSRwXA/hedwdneelv/8DSpM3KOdKnPrGi8jlGT794DYd3Zvv4RfrdUzX
      ZbZa3DDMw3Qd5mtlAopGUNXWtB75oRD7HFd4jJVy3C0tbpq2qEgyI9EkQUWjuFTnU5ZloppB
      ZyCMoaik6xXmamUKZh3TdZCQMBSFgNoMa45ozT12yggR0Qw+nJvhVn7zYDu7MMlbf/Muob4R
      hlMeN25Mkjr2DJ2GRf/ZJ5n//HNCnQHS+QAnzxzadLxvDA0yVt68kpyExMlkD32hmC+Ag4YQ
      gvl6mau5+ZYD3nRZ4cmOfjoD4dXj1CrcLGQo2xuHEiSMICcTXXQEw0jAW1OTjH8JFqAHOdOZ
      omBXWvruYDjB8aWQ7Afxt0D7GMtzGSvl2or2tDyXu6VFXK95jScEt4pZPsvMbDr5AQpmnU/S
      U4yX8svbpN8Ejmg9StT23HXXRl8A+5ii1aC8iaNqLQpWncrSZJ8o57ldyLZV9cEVgqu5eeZr
      FYw2vK87STuJ9rqirGvM9a1A+5hco7qleB9PNKu3lWyLa/n0lsYQwKXsLBH1vrfZc+vMXPyM
      auQwJ070A5Adu8XiQo7+p58n/eFrBE5/na6IQm5mmsRAP1c/uMAz33qRysINxqcNOp2bTNNN
      KjWAnL5IcOQ4CxmNJ8/dT2rXZZnhaIKSXdu0WJcmK3QFopRsk4JZw3QdNEUhoQeJaQFfAPsZ
      e4uJLgB11yZTLm5rC+MIj5Jdv2dqR1aCDB0b4srk/e1J5+HHqWXfxxMwPzeLm/4ZmcNnOXv2
      EHcvXaLzSLPhnR7uIHvtVabdAE/99gmuvPE6nhLj/GGTiYsfUJob5NlXvk5AV0gFgkQ1g1Qg
      zGx14/NHdzDCQr3EQr28aqsoSxKdRsTfAu1ndHnr2w/b81ra82+GwGt5G5Ts7OXMd75LcfIW
      k59fJHL4DIcO9QDQSI8TP/VNzh0PcvnT2wyd/x0e6/WYKUZ4+QffJxWokFts+hsGolEUWWYk
      mlp1mF+JIkkMhOOYnsNM7WFzqScE6UbZXwH2M3E9sPz2bQcJcLzVeVbF0bvIRw6x8MU1Rs6c
      XpVnuxECSAYN5io1PKfARz//gDpgeKcpVVx6QhVuj06j5T7gqy+c57NfvcbIsy9iT15i9Jev
      MjF4HLU8z4lvfAN97A3G5X6+8TsnufzmrxDxo5w9kuSLX/4COo7S2xshoCgcisWwXRfLdegJ
      xTAUtVnqRQhkSSKs6fQEYzRcm+uF+Y3/X/hm0P1Lw7H5NDNFpY0wB2gKJ6QYTK5IOp955z3K
      Q3Gq2QBPnEjxxceXGXn2K2hWifmpNJ2D3eTnMwSSKQaG+8ktZOjo6QaalR+uZ/PUnPv7cadR
      wZVCGMYmQhIO1bJJKBZuqXjWsUSSwViIuVqJqt2s+CBJzcYdcT3AYDhBR6AZJnE1N0e6sbGp
      1N8C7WMMRWU4mkRuo+5a0xmWesgjLNwiH/78Y3pGBrjw07/m2qWLvPnz97j21pu4kSRjH75D
      VYngzd/mzu07jE/cF09Q1TjZ0blqPDUQ2XzyA0gq4RYnvypLCNnmZiFN0WrgCA8PgSs8TNch
      Xa9wOTfHZCWP7bktVbHwBbCPkSSJ/lCcoUiipQkkSxKHoym6gxGMB4pdSUqc3/5H/wZjH32I
      Ek3x+HPPc+6Zx4n2HuLo8SFCqX6OnzlM/xNnufLaGwwcGVi+NqConEx1MBiJ7vAvXE08oFJ1
      Ni63bnsutwtZZiqtOef8M8A+R5VljsU7UWWFqUp+3TIihqJyOJpiKJxAkeSHkmW6n30aKRQi
      9fJzKJpMZi5DuKOLwFA3GnDk2afRgOz4KMGh43Sl7h8+E0YQVZb5Wv8Ar47doWrvfGJM3FDR
      WzzzewimKgWC2ua+Av8McEAQQlBxLOaqJQpWM47H8VwUWSZphDgUSRLVjOVwAMt1eW9uvK0w
      6bVI6EFe6BtGXgqWK5omb0xNUDS3b2GC5oF9OBZDyFbbRXrjemApUX79Ke5vgQ4IkiQR1QyO
      xjsZDMdRJQmBwFoKkb6Wn2eqWlgOgdBkmaHI9jutj8SSq5Jm4obBbw2PMBDZWiLOSjRZ5tne
      Po4mY1uqUG17Lj3B2IbbQ38FOEB4QnCrkGa6Wlh3n9xhhDmd6sVQVGzP5YP5iS03o+gOhnm2
      axBFfvg96noeo4U8lzJp6k7rrZWgWVWuKxTia/0DxHSdW8UM4+Vc28+nSjLPdg9TMGtMVwuY
      7r0iWxK6rNAXivlngINCs4htjqnqxvU0F80qNwoLPJnqR5MVnurs5+OFqbb6f0GzENXZjv41
      Jz80D9xDsSgxQ2O0kCdbb1C27A09zwFFIWpoDEdjDMfiRLRmDL/jbc3jLRDIEgxHknQHo1Ts
      BqbroskKEc0gqGq+AA4KDddhstJaEdz0UtZYyggR1Qy+0jPExcxsy57hlBHkXGc/AfXh6SOE
      oGg1uFPKUrIay/H6saBEVzhMSo9guR51p/k2NhQVVZYo23UanoWEYL5RIGMWCSgah6JJtC16
      vBVJRpFkJEkiqDaTYh7E3wIdEGaqRa7lN/Z6rmQgHOdUsnf5v23PZayUZ6pSWLO8iQSENZ2R
      aJLhSGLNN78QgulqkVvF9LpvelWSOZ3qW07WrzkWXyxuLL6wqlPZQrfJhB7k2e6hDUul+CvA
      AaHaZlxP1V5t/dFkhWPxDpJ6kPFygYVahYbbPHiG1KVtSTRBVNPXLUxVtBobTn5oBtBdz88T
      VocJqRrX8gubrjxNS1V7QR8Szf7IK52EpuOSqTWYKVdZrJvULMcXwKPOvfqfd4sF7hYLlEzr
      odyAum2Sq2e4nFmkJxzmSDxBfySKtmIVEEJwp5RtKbrU8lzGyzk6g+GWm2hLS/O/VQnE9SC9
      wSgL1TpX0nmuZgrcyZdoOO4qs6gvgANCaINaOOt933ZdbhfyXMtlN7XUCJpv75lKmZlKmY5A
      kCc6uxiMNOvs112bktV6ck5+KTa/HaJ6gLK1dounlQQUjbqp8KeXRrmSzmO665tQfQEcEFKB
      EJosY7doMQmrBm/PTDFXbS2v9kEWG3XemZni8WSKp7p6MF2n5crMAKbn4NjtWXdSRoi+UIyJ
      cm5Nq5UEVE3Br+cLTBbqLVWo9gVwQAgqGoPhJGPlxU2/G5A1Pkuntx2y4AnBjdwiVdvmVEeq
      7evbLdqoSBKHIkm6AhEW6mVyjSqW56JIMqYjuDJf4ouFErbbxlnBtwIdHFzhcS03z3y9vO53
      NEklU7WWD7g7RV84jKy0vgqEVI2IamwarrySM6k++kIxoHnmcJeS8r9YyPGj6+Nkau3nR/sr
      wD6neYi1yZt1qo6FrqikjBBl28QTHu5Skoghq3QHI4wVKzs++QHmqlVSQRVdbe293hmI0BWI
      tCwAQ1FJGqHl/5YkCYTgl2Oz/PX18a08MuALYF/jCY+5pcpvtQeC2poTPkZ3MIouKwRVjYlS
      kXRte22TNqJkunQoKpsVpA4oKsORJAGlKcp0fXMRHIqkMFY4xIQQvH5nhn91c2Jbz+wLYJ8i
      ljq/j5bWbkdkeg7ztRIBRWUk2oHreVxZ3HrDvFZwPIHtSIQNed3gNUWS6AxEmKmWEEIQVg0C
      irluOycJGI6kmjkPK5R1J1/iF3dntl2XyBfAPqXqWIyXcxtaOjwEE5U8qUCYxVqDsrW90OeW
      nst2eaanj2yjQt6sYy1ZazwEriewPI87xYcD2xRJQpFBkeVm8zpZIaYZDEWSdAbCqyb/fKXG
      P71wg5K1/bwDXwD7ECEEmXql2QR6E1zhMV8rsVDZmfj8zTBdl7JlczrZi+25mK7L9fwCmfrG
      NYxcIXBdCEkyZzv6iGg6uqIiP7CfKpkWf/b5bfKNnRGznw+wD/EQbVWEW2zUSNequ/hEq5mr
      NPf0siRzPb9AepPJv5KaY3MpO4vluQ+FXHhC8OMb44zmSjv2rL4A9iOCtkoZmq67oTd0pymY
      Jp4Q3CxkSNfbF17DdbiUncV54BxxM1vg/amFnXpMwBfAvkRaMmu2ilg3hkZw5bUf8/pf/ks+
      /ejqqr9cf+cXVNo3qwNQti3yZp2Jcmvh2WtRskzGlgrwAtRsh//v+jjeDnut/DPAPkSWJDoC
      YeZqpZZWgpBqAGvMZnuBmnKEZ76qU3Ai5O9+wWefXGfo6RdxHYfy3StU+gYZfe8znvraSYql
      OlOfX8Q2OnlsOI5x+Ekqd6/Rf/I0mnJ/u+IJ0exXsE0LzWQ5z6FoAl1W+Gg6zVRpa2EbG+Gv
      APuUlBEiFQht+r34Ro3yJAnXsQgmOknfvU1xIY3rutz49CIARlecsTc/IuAVuH71Nq4QFCsW
      szc/R+no4s5bvyJfEajyA22HJDZsZ9oqDddZsiR5vDUxt+Nvf/AFsG9RZYXH492kjNC6MTVx
      PcCJeA9x3VhnkB46Qxne+/kvcdUISBKyESLZESUYjWGEexCiyLFvvEBuskJPUkOWJOJdPWih
      LqjOkjo08pDjS5UlVkbYCMfk81/8nNf/1WvM3bjBbK71ju65Ro0v0jlmyrvjwPNjgfYxQggs
      z22aOetlTM9ZtqF3BsIMhZve1qpj89O7o1vOrV0LKzvOxauLPPPSMzwY/WAoEiH9/rs1e+cL
      pssRzpwaIHvpYxb7niA4f5WprMTz3zhHfn6aXE0n5maYymucf/mp5TdzfzjGe2MFPl9oPym+
      FfwzwD5GkiQMRWUokiSqB5ipFiiaDRzPI1OvUnNseoJRUkaIpBHYkW3JPfTOEc6/PLLm30Ka
      Bty34FRrdTpSw6i6garKIFwK6TQLn1/iQqKb7PgNXvzmU/zsT3+JIkPi6GlODjTzG3L1Brd3
      0Oz5IL4A9jmu8JiuFBgr5x6qCld1LLL1Kp3BMKmAsaMCWA9FkjiWSHG7mFn+rLd/gLd+8Stm
      7/TQpTp4MZNsvsrw4X5qdZvD554kEg7RMTBEx9Aw3eEVXt9yg7rdXuJMO/hboH2MEILJSp7R
      UnbT5A9D1pgu1Xe9p1dXMMTLg0O8NXNnxTMJ6qUCNVMQi4ZA1bDKBRxPwghHkRUJXVWoFfPU
      TI9EZwfqklVpLGtxac5fAXzWoGybjG0SD3QP07OJ6Aolc/fepjJwuqOToKrRGQizsBzlKRGM
      JVlZjVRLdjx0fSiRYqVdS5Fk0pXV8T6lW58weWuG6OAJhs6dXD4rFKbuEus/jKxIFG9cwTh2
      DK9qE4qttoDZ+SnufvwZocFTdA6kfCvQfma+Xl63GO5aRA11V5va9YUjDCxViD4cS7Wd8fUg
      KSNM3V79+zwHDn37e0SYYeb6OLblUpqbpZ4e5+6br5HPFDHT8zh2jUq+RGnqJmNv/R35TDNJ
      aO7qDUa++fv0HRumkp7zBbBfcT2Pgtm6ORGa+QOnOjpWVXPYKaKazld6+5eD11KBEEORxJbH
      C6s6A6EERfPhoDcJmVBnktz1zzEbNtnbNwGdgfNfJX/1YvP4bVWo5MrkJyboe/YpSmPjALiS
      im6oqIZBeWHeF8B+xRXioViZzRAIOoIBnuru2dFnCWsaLw4MEdHvV6aQJYkTyaafol0MReFc
      Zz+W6z3k/HLrRaY/fpOJy/N0DMeY/fRdCpkiuA3mLv4aV1vtF1FDCQKRCMqSrTYeV7n91hvM
      XLvdrBLqH4L3J47n8mlmilIbBbEkJM4tdYkfLeS5kJ5vuYrEesR0nRcHhkgFgmv+3XIdLi/O
      M18rtxS+F9F0nuocIKYb3Fws8r9+eHnV312zhllroIVjKLKHWa2hGEEU2cOqNdAiMSTPQVJV
      PFcgIVA0Fdd2UTQVITzMUhFZDyEr/iF436JIMmHNaEsAmiwv1w86HE8Q0XUuLMyR30Itfwk4
      kkjyVFfPmjVC76ErKk91DbBQK3OnuEjJMteMXwqpGoORBCPRJPrSOcV0Hl7hFCNEaMWqEozf
      X3WC+j0RNq9fudNTtOYzSpJMIJ5c/twXwD5FkiR6ghEWauWWQ6MTRhDbcxktFilaDWzhkQpp
      qAqUTBvT3Xw1kCWJmK7TFQwQNzQmKwXCqkbcCBBSdaSlZ3vwmr5wjK5gZNk30SZiDhAAABA9
      SURBVHTUWUhARDfoDkboCoTRZHmpgDno6u53ofcFsI/pMML0hKLM1Ta3k+uyghBwITP9UM9c
      SYZEUCGgBNFljYbjUbHMZfOqLiuENQ0XF9trdp7JmhWy5v3oTE1utl06HOsgFQiuWZBWksB0
      HbKNKkX7vk+i0Wh+pssKPaEoI9EkYVUnbmze4mgtPDPP2Dvv4mgpjrz0QjNYT3hkLr4L/WfR
      ireZn8jS/5WXfAHsZ2RJ4misE8dzyTTWTzzRZQVdVsnUK+uuFQKouxa6IvOV3j6CitacoBLU
      HZuriwtkG411r7c9j3S9St6scyia5Gi8A3VFFQdXCMZKOcbKuXVjkizPZapSoGDWOZnsRleU
      tqrd3UNSggy9+Duk3/8FNdsjZig45TkWJzNEkxWKM1mOvvRVJj694FuB9jOSJBFQVM4k+zga
      6ySi6SiShEzzH0NW6Q1G6QlGqdpWSxulotVgtNgscitLEjXb5mJmlkyjtbRG2/O4U1zkRj6z
      PNE9IZiq5LlTXGwpIK9sm1zJzWN5NtEtrAKSopG7/B5lR8eQJcBl+tNLJEf6sao1uoZ7GH37
      PapFv1P8vkeSJDRF4XA0xWA4TtWxsV0HWZYJqRqKJHMhM91WCmWmXqUYbhDVDK7nmz1520EA
      k5UCEU3nUDRJ2Wpwt5Rr6xlqjs1srUAqqJOrt3dIt/NzWFIE3RunXKjjqFUC8RSl6XFqIeg4
      HCcYkggnH/fNoAedvFnj1+npTSsqP8hjsQ4CisoX2bm2G1PcI6zqfKVniIlynokWu9esRJVk
      xrMOH01vXu90JcK1qGYzoIVRGnOU7E56DnXh2RYeMl6jhFn3CHd1+CvAQae59Wl/CpetBmnH
      2fLkh2Y06nSlSHaD88lGOMKjK6K12RoDJEUn0nOvkXdiOQZJ1vTmnl9LoS/19PbPAAecrUZ/
      1l2H8ha7R65koV7GaqF+0XokQyphfffe0/4KsI8QQmB7HmXLomA2aLgutuehSBIhTSWmG0Q1
      HUNRlm3xxgZOqo3wPK+tev/rUXfs9uugryCgKpzqTPDJ7O6UdfQFsA/whCBdqzFWKjBXrVBa
      p8ShRDMbqycU5vFEku5QmKhmoMtKW1GjEs1qzLD9FUAIlgLktrYSabLMtw738+lcdleS4n0B
      7GGEEOQaDS5mFpirVjaN+xdA1ba5WywwXirSH45wtrObrmCYmWrrSSURzSBphMhsoajVg8iy
      hCYruC14mdd7lpFYlKPJOLdyxW0/z4P4Z4A9iut53Mjn+Nvxu0xXyi0lvazEE4LpSpmfj9+h
      anmEW+whpkoyj8U6SBrBh+pyboWgotEdDG/pWk2S6VwKj/jdo4MoO/A8D+ILYA/ieh4XMwt8
      Mj/7UNhCuwjgRi5H2XQJrdEoeiXNVqmddAcjy53Ut0vSCDIUSRBQ2t9sdAYjxPUAAKe6Epzp
      Tm5yRfv4AthjeELweTbNlcXstkyQKxHAQq1O3YLhSIKQet9jrCyVWewJRni6c4ChSKLZUUZR
      1i+o1SKqLNMXjhHVDI7Fu9p6gzev6UReCulUZZm/f/IwurKzU9Y/A+whhBDcLRa4ks1s/uUt
      MFet0h+O8lzXEDXHwl5qMBdUNQKKuqr7uyRJDEcTzFXL1NdpXrEZvaEoCT2AJEn0h2M4wuVO
      cXHTA3lCD3Ay2UNI1VYZkPqjIb5//BB/dW1sx14Ovid4D1G2LH4+fmfTnr3bQZcVfufQYTqC
      ayewrKTZhabE1Vz7iTNxPcDTXQPNSbz05veEoGDVGS/lyJl1HM9dDn2WaNY4SgVCBBSNhuNQ
      c2w8IdAUmahm0BkIE9F0/vzzUT6Z3ZmXhC+APcT7s9PcLmy9onKrHIrG+ObQoZa+6wnBVLnA
      zUKmZVNqXA/wZEcvMSO4pgvAFR5126bsmJiOgyxJeEKwUK+SrlU3PPfEdYO+UJy/vjrFWGH7
      xXL9LdAeoWiajJV23sy3FpPlEkXTJG6sUzN0BbIkMRRNEFQ1RotZ8mZ93e2HKsn0R2IciXU8
      tH1ZiSLJRHSDiG4srzJXcvMt9TAoWiYlK83TgxEKDZN8Y3ttknwB7BHGSoUdrd25EQK4Vcjx
      XE9fS9+XJYmuYJiobjBfrbBQr1C1m00wVFkmpGmkjBDdwQgx3XgoI2zd5xCCm4UsN/KZtvb0
      AjCFzcneMBemSi1lsq2HL4A9gOt5zFTWb269G8xWKthd3oYlUlzPI1OvM1epMlOpULFtTNdd
      ii9q5gtoskxnUCGiSEhILU9+gJlqqe3Jv5KOsMK3j3bz3nhuzfIpreALYA/QcJ0vpYPjSiq2
      Rc2219wG2a7L3WKRy9ks2Xpj04C6gmkxWiiiyjK94RBPd3fTFw6vsio9fH+TLxbnt2XNEYCi
      OvzHzz7O396e4XI63/Z4vh9gD7BeD69StpmZlZ2axHY8avkczqrVXlAtFPEAPIviYutnCNvz
      qDmr989CCMaKRf716B1+NTlFutZeLVHH85guV/jpnbu8Nj5BrrF2Io0QgtFCbkf6lnkIslaZ
      //S5U/ybZx4jGWjN430PXwB7gIbjrvnmmrv8BZVGiUs/e410ocidS1coTtyiaApcx8ZxbCav
      3sD1PDyzyPVLtxCeh2NZeJ7A8zyE5+J5AuF5PGjwa6wwt9qex0dzc7w+PkGm3l7FuQcRwHip
      xE9G73CnUHj4vq7DVGXnDvyZepWKZfLKSD//5MVzfPfYEMEWK0r4ZtA9wHS5zC+nxh/6vDH2
      MZcX4kS8KRqiH1mqEytkkJ47yZ2/fY/40VOohRlszeCxJ05z++osCTHL7GIDPTVMVLWJRVzm
      KmHicoOjL7yIsaKbxYv9gxxJJGk4Dr+cmGSyvPPnEAk439fH2a7O5S3RRLnAZ5nZHb3PiUQX
      J5Kdy2eQqu3w7sQ8n8xmmClVcdaZ5v4KsAfQ1nHvBw4dp3DpDSIjz2POvI8WHQSgUSnQd/ZF
      zj5zAoRDpegQjjWX/lJV8NU/+H1ErUgyJpjMqETMOexQCv2BVi6KLGO5Lm9OTe3K5IfmavDJ
      3BxfZLLLK0G7NU1boWCtHjOsqXzn6CD/zQtn+a+/fpYfnBjhbE+KxANbJP8QvAfQZQUZ6eGk
      cTnB4bNP0dUbRXr8SaJHexDh42jDA0y+8wZfXBxk5Ox5TsVl0gsmw0cHiQc6+fTVX3D0xVdI
      6hXcqEdC66QRHlhll5eAoKrywewsY8Xdq78P4AEfzc0R1XWOJhMPnT12gsZS+uaDNihNkTmc
      iHI4EcUTAsfzaDguC9U6ddv1t0B7gbrj8OrYKBV75yfGegQUhePJTj6a3XrSe7uENY0/OPIY
      15a6x+8kMc3gm4OHkdcoyLUR/hZoDxBQlHWLy+4WhqJyfTH3pU1+aCbrXFhIo+5CefbmmO3n
      C/gC2ANIksTQUmOJL4uG41HYQlHc7XI7n3+o6cVOENH0LaUe+wLYIxyKxQnsYveWlUhAofHl
      T35oHoqztZ2/d2cw3JYX+h6+APYIuqJwKtX5pdwrohlf6tbnQXINE0PeOftLQFG3nHbpC2AP
      cTLVQccunwViur5U8aFJbeEm01NlZi++wa2bCxRuXSVXX+sw7lBqw9MMUFlcxMNj+tp1VmY4
      OJ5Ak3ZOACOxJIEtpm8qf/zHf/zHO/YkPttCkWWShsFkudR2Enwr6LLCV/sGuJXLL4cheK7D
      3MQstVIFz6xSrVXo7unk+puvs1hXUSvTXHjjAzTD442/+BEiGKcydY1rH1+mtDjJfNokERVc
      /LvXcYOdmHPX+eydTwgkwrz3Zz8k7xqIxQnuXrmCFB0gFmvm+HYGQ8QNbdsm0WZHmf4tH6z9
      FWCP0R0K89LAEGqb5rzNUCSJ53p6iekGjRUxOHo4ilOaQuidqG6Vuq1SvPU+o2MF7nz8CdnZ
      GeSggdExyJmXXuHMucOUqzLPPBnB6jyPbma5+au/I1epc/PTz6gWCnjWHLevlDj50ks88/Iz
      SGqIJ7/z++RGry7ft2hanOvq3zRRfyMMReHZ7oHljjJbwRfAHqQ/HOHFgUH0HTIXarLM+d5+
      jiaSNBx3VXqjpIZQMtPQ3UdMLVIWKUKpPgKqS8dAP0YkQnnqJul0g9L4JS5fvI0WDqMbBqFo
      DEVViff3gQsdvd3k5+dQgiGwbaz8BBfe+gw9FMUIBFk51xuugyrJnO8ZJKq1F8AGzYP8mVQP
      iaWqEVvFd4TtYUqWyfuz06Rrta3HzAeCvNA/sOxnmKlU+MnonZ17yC0S1jT+wePHCGkaluty
      eXGemWq5pXKMEU3nZLKLwUh828/hh0LsYWK6wW8NH+Z2IcfVxWxbnuKQqnIq1cmxZGpXm2Pv
      BLqi8HRXP4djdcZLBdL1CnV3dWEAGYm4EWAwEmMoEl91kN8OvgD2OKosczLVydF4knS9xkS5
      xFylguk6eOJ+4XNFktAVla5gkJFYnN5wZM2JL0tS2+XGdwNVllbVCZIkiVQgRNII4ggP815V
      CASarBBWdTRFRm4z62zT59ixkXx2FU1RGIhEGYhEEUJQc5rpia4QyEgEVIWgqm1azjCw1HfL
      eiD/2MzNcvnXlzhy/tskE809+dXXfsRiEY594xWKl99nIVPjxCvfoXj1PWbSNue//z1CGuRG
      L3Hl4m16T3+FlLrI9c9H6Xvya8S8OW5emaD/3Nc4cqx/1f2MB+oQ3UOSJDRJQdMVIvrmSfvb
      xRfAPkSSJMKaTngLBpSQpmGoKtYDKZhKME7fUCe2eU8YHpaS5GvffxlFlYg/+zKDizcYm5pF
      qN189SWJ21fTPHGum+nbk5z73d/j+jvv0JBdzv7u73Pj7bcpy4Jz3/ktbr37a5xj/asmW0TT
      diUmqF1+80/g86ViKAodgYctJ2owjKGv3DJ5BGWTD/7qL7l1K00tfZepYpSjR+PogTB6Io5X
      bkZ0Pn7+Ka6/8SvmZhY5+swTXH/jV2QWShx5+hTX3nyDbLrAg0fbvvDWPLc7jS+AR5CReOyh
      z0pTN7j09gd8/vb7VAppFufSNCyBoqoglfn4J29QmrlNdtGjOHaBd/7qXbpP97IwNkW9WMJz
      GvQdP41ZLuG5dbqOncYulfAci47HT7JysVIlicHo9uqO7hS+GfQRpO44/N/Xrq/yB3iOhWXa
      IMkU7lxGH3mamOHguqAHdKx6AyEEqhFAEg6OKyFbRcanChw5PoJtOWiBAHjOin+3sS0XLRBA
      lu+fTfojYb535MiOHma3ii+ARxAhBO/NzHA52173xZ1AAr5zeITD8e3b8HcCfwv0CCJJEk92
      dRHcYv+w7dAbDjMU/XJzHzbCF8AjStwwONvV9aXeU5dlnu/r3RPWn3vsnSfx+dJ5squTwciX
      dxg9191N7x6x/tzDF8AjjCrLfGt4iI7g9gLKWuF4KskzPd174uC7El8AjzgRXed3R0bW9A3s
      FEcScV4cGNhzkx98K5DPEjXb5pcTk0xXtt904h7q0mH72d6ePbXvX4kvAJ9lHM/janaRXy8s
      YG2zcG13KMhzvb0MR6N78s1/D18APg+RbzT4IpPlZj7fdtOOuGFwMpXkdEcnRosFan+T/P8F
      AyJ0vuSFIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Map and Bar Chart' width='192'>
      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
      FQviFyDWkusfFCvg1r5mmFoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage Of Penalty Points Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAFuUlEQVR4nO3cbYgUdQDH8d/szp233p53XWpqZSlmGVZGYpgp3PpKMXsp5ANoaV0YPlQm
      ZfjUvQks6JXgSWAJIUIKkVgaZnqHGZdGiqGW54mlF5164l27Ozu9OMmWiHy4M+P3/bwbdpj/
      zLDf/f9hhwniOI4FmEr81ycA/JcIANYIANYIANbC4s1YZ1uOaceuvQrT/VSTqVG/dKhfL3Sq
      7219rnuQAw2f65vDzX9ujxyTUVXulNJDxmhQRaxzlyJVV6alQlbvf7hZs2c9c91jAdeiaAbI
      d5zX2voPNHL0WA0bmNbJ063ShVOq37z9hga5d/jDyowbre9/PK1MJqP7BvfXoKEjVJ0uUefP
      h7VxW0PXjnGsM2dbb2gs4FoUzQBBEKiQ61TbhQ49NuoJpctKtPG9ZdrXcFJvnDig2iWrdWTn
      Bu1qOqpe6b6a+0KtzjRtU3Mure8amzRu3DC197pfUyeM1PaP1umezAw90D+lqr53qKq8VOV9
      KjV06FBJ0u4tH6v/2CnauX6Ddh+/qNYj32rh0oWXzyRW05efaOuOr5Usr9a82loNqCy72fcG
      BopmgGRZHy1atEC//LBfby1fpsZDLZo+c44en/iU6urqNEAntOd4XitWrtbMyaO0ddtX6rx0
      TgePntGCpYs14ckaHdq3S/koq4PN7RreL/WPA3dcvKDfo1Czn52lCVOmadWK11Rd0vVZofO8
      tuzYr0lTn9boIWl9unN/j94E+CoKoBBFSlUN0LRZc/X6SzPV2Ni1NCkUCoolxfmswlSFwmRC
      FX0qlevslJTU+JoaVZSVKJmq1iMDE9r1xWca+NB4JYKrO4lCVCjajqNIF9vPq6W5WR1htR4d
      cXd3XCvwN0VLoFzHb1rz9jvKBinlo0hTZ8yTKqqUPbZXK1c1a/6SxRqS2Ko3ly9XLlfQnPmv
      qK1pqwJd+aZnJk/Sc/NXaU19/VWdQKrfYDU3rFddy09a+OocSVKyd5UmjhmhPU0H1DtVqso7
      H+zGSwauCIofhYhViArKR5ESiaSSyaSCQCpEeeWjWCUloaRY+VxeQTKpMJlUIYqkIKHE5Z/7
      i63HtXbTXr384kwFwV+mgDhWPooUhl3NFaJISiSUCAJF+byiOFZJGCq6vE8cx8rnc5IChWFY
      fCygmwTd+SxQ9twpvbtuk6bPeV533V7eXYcFeky3BgD83/BPMKwRAKwRAKwRAKwRAKwRAKyF
      /74LcPNls1lFUdTj4xAAbkltbW1qb2/v8XFYAsEaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAab4XALSmdTqu0tLTHx+H16LDG
      EgjWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADW/gBIIj8g8s8xJwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
