<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PenaltyPointsData (ImportDataForTableau)' inline='true' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ImportDataForTableau' name='excel-direct.0cy02yi0mdmiva145u30812gfpeh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\DataSets\PenaltyPointsData\ImportDataForTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cy02yi0mdmiva145u30812gfpeh' name='PenaltyPointsData' table='[PenaltyPointsData$]' type='table'>
          <columns gridOrigin='A1:V1045:no:A1:V1045:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='Offences With Alcohol' ordinal='2' />
            <column datatype='integer' name='Failure To Wear Seatbelt' ordinal='3' />
            <column datatype='integer' name='Breaches Of Driver Duties' ordinal='4' />
            <column datatype='integer' name='Careless Driving' ordinal='5' />
            <column datatype='integer' name='Contraventions' ordinal='6' />
            <column datatype='integer' name='Dangerous Driving' ordinal='7' />
            <column datatype='integer' name='Driver Exceedings' ordinal='8' />
            <column datatype='integer' name='Driver Failing To Restrain Minors' ordinal='9' />
            <column datatype='integer' name='Driving a vehicle when unfit' ordinal='10' />
            <column datatype='integer' name='Driving a vehicle while holding a mobile phone' ordinal='11' />
            <column datatype='integer' name='Driving dangerously defective vehicle' ordinal='12' />
            <column datatype='integer' name='Driving Dangerously Which Could Harm Pedestrians' ordinal='13' />
            <column datatype='integer' name='Driving vehicle before remedying a defect' ordinal='14' />
            <column datatype='integer' name='Fail To Comply With Signals' ordinal='15' />
            <column datatype='integer' name='No Child Restraints' ordinal='16' />
            <column datatype='integer' name='No Insurance' ordinal='17' />
            <column datatype='integer' name='Overtaking   Offence' ordinal='18' />
            <column datatype='integer' name='Parking a vehicle in a dangerous position' ordinal='19' />
            <column datatype='integer' name='Speeding' ordinal='20' />
            <column datatype='integer' name='Use vehicle without NCT certificate' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offences With Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offences With Alcohol]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Offences With Alcohol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Failure To Wear Seatbelt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Failure To Wear Seatbelt]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Failure To Wear Seatbelt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breaches Of Driver Duties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Breaches Of Driver Duties]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Breaches Of Driver Duties</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Careless Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Careless Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Careless Driving</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraventions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contraventions]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Contraventions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dangerous Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dangerous Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Dangerous Driving</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Exceedings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Exceedings]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Exceedings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Failing To Restrain Minors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Failing To Restrain Minors]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Failing To Restrain Minors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle when unfit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle when unfit]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle when unfit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle while holding a mobile phone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle while holding a mobile phone]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle while holding a mobile phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving dangerously defective vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving dangerously defective vehicle]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving dangerously defective vehicle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving Dangerously Which Could Harm Pedestrians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving Dangerously Which Could Harm Pedestrians]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving Dangerously Which Could Harm Pedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving vehicle before remedying a defect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving vehicle before remedying a defect]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving vehicle before remedying a defect</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fail To Comply With Signals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fail To Comply With Signals]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Fail To Comply With Signals</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Child Restraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Child Restraints]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Child Restraints</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Insurance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Insurance]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overtaking   Offence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overtaking   Offence]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Overtaking   Offence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parking a vehicle in a dangerous position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parking a vehicle in a dangerous position]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Parking a vehicle in a dangerous position</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speeding</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speeding]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Speeding</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Use vehicle without NCT certificate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Use vehicle without NCT certificate]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Use vehicle without NCT certificate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V1045:no:A1:V1045:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
      </column>
      <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
          <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
          <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
          <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.130705' measure-ordering='alphabetic' measure-percentage='0.869295' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar Chart of Driving Offences and Penalty Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar Chart of Driving Offences and Penalty Points</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' field-type='quantitative' max='5937880.2000000002' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Numberof Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000d6' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#0000003e' />
            <format attr='line-pattern' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#6666664e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage Of Penalty Points Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Penalty Points in the Republic of Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' included-values='in-range-or-null'>
            <min>0.0046992552886938</min>
            <max>0.48184101428610038</max>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-322530.15371996537' min='-1499602.0940846899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7488206.7395304907' min='6680774.2487437539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Percentage Of Penalty Points Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Month:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Year:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Bar Chart of Driving Offences and Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart of Driving Offences and Penalty Points' width='192'>
      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
      7ZMHexYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage Of Penalty Points Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      /h8VKHewmMx+JgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
