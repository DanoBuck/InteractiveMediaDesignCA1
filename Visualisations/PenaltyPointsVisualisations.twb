<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PenaltyPointsData (ImportDataForTableau)' inline='true' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ImportDataForTableau' name='excel-direct.0cy02yi0mdmiva145u30812gfpeh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Daniel\Desktop\College Work\InteractiveMediaDesign\InteractiveMediaDesignCA1\DataSets\PenaltyPointsData\ImportDataForTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cy02yi0mdmiva145u30812gfpeh' name='PenaltyPointsData' table='[PenaltyPointsData$]' type='table'>
          <columns gridOrigin='A1:V1045:no:A1:V1045:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='Offences With Alcohol' ordinal='2' />
            <column datatype='integer' name='Failure To Wear Seatbelt' ordinal='3' />
            <column datatype='integer' name='Breaches Of Driver Duties' ordinal='4' />
            <column datatype='integer' name='Careless Driving' ordinal='5' />
            <column datatype='integer' name='Contraventions' ordinal='6' />
            <column datatype='integer' name='Dangerous Driving' ordinal='7' />
            <column datatype='integer' name='Driver Exceedings' ordinal='8' />
            <column datatype='integer' name='Driver Failing To Restrain Minors' ordinal='9' />
            <column datatype='integer' name='Driving a vehicle when unfit' ordinal='10' />
            <column datatype='integer' name='Driving a vehicle while holding a mobile phone' ordinal='11' />
            <column datatype='integer' name='Driving dangerously defective vehicle' ordinal='12' />
            <column datatype='integer' name='Driving Dangerously Which Could Harm Pedestrians' ordinal='13' />
            <column datatype='integer' name='Driving vehicle before remedying a defect' ordinal='14' />
            <column datatype='integer' name='Fail To Comply With Signals' ordinal='15' />
            <column datatype='integer' name='No Child Restraints' ordinal='16' />
            <column datatype='integer' name='No Insurance' ordinal='17' />
            <column datatype='integer' name='Overtaking   Offence' ordinal='18' />
            <column datatype='integer' name='Parking a vehicle in a dangerous position' ordinal='19' />
            <column datatype='integer' name='Speeding' ordinal='20' />
            <column datatype='integer' name='Use vehicle without NCT certificate' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offences With Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offences With Alcohol]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Offences With Alcohol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Failure To Wear Seatbelt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Failure To Wear Seatbelt]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Failure To Wear Seatbelt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breaches Of Driver Duties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Breaches Of Driver Duties]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Breaches Of Driver Duties</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Careless Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Careless Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Careless Driving</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraventions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contraventions]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Contraventions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dangerous Driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dangerous Driving]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Dangerous Driving</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Exceedings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Exceedings]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Exceedings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver Failing To Restrain Minors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver Failing To Restrain Minors]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driver Failing To Restrain Minors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle when unfit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle when unfit]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle when unfit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving a vehicle while holding a mobile phone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving a vehicle while holding a mobile phone]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving a vehicle while holding a mobile phone</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving dangerously defective vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving dangerously defective vehicle]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving dangerously defective vehicle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving Dangerously Which Could Harm Pedestrians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving Dangerously Which Could Harm Pedestrians]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving Dangerously Which Could Harm Pedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driving vehicle before remedying a defect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driving vehicle before remedying a defect]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Driving vehicle before remedying a defect</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fail To Comply With Signals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fail To Comply With Signals]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Fail To Comply With Signals</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Child Restraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Child Restraints]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Child Restraints</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No Insurance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No Insurance]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>No Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overtaking   Offence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overtaking   Offence]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Overtaking   Offence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parking a vehicle in a dangerous position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parking a vehicle in a dangerous position]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Parking a vehicle in a dangerous position</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speeding</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speeding]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Speeding</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Use vehicle without NCT certificate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Use vehicle without NCT certificate]</local-name>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias>Use vehicle without NCT certificate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PenaltyPointsData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V1045:no:A1:V1045:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
      <column caption='Average of Penalty Points' datatype='real' name='[Calculation_564920284103004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate])) / 21' />
      </column>
      <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
      </column>
      <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
          <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
          <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
          <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
          <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
          <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
          <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='None' name='[none:Careless Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Dangerous Driving]' derivation='None' name='[none:Dangerous Driving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_564920284103004161]' derivation='User' name='[usr:Calculation_564920284103004161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Careless Driving)' hidden='true' name='[Action (Careless Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Careless Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
        </groupfilter>
      </group>
      <group caption='Action (County,YEAR(Date))' hidden='true' name='[Action (County,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Dangerous Driving)' hidden='true' name='[Action (Dangerous Driving)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Dangerous Driving:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.130705' measure-ordering='alphabetic' measure-percentage='0.869295' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_564920284103004161:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter Bar Chart By County' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard of Map and Bar Chart' type='sheet' worksheet='Percentage Of Penalty Points Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage Of Penalty Points Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard of Map and Bar Chart' />
      </command>
    </action>
    <action caption='Filter by County' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Percentage Of Penalty Points Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage Of Penalty Points Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart of Driving Offences and Penalty Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar Chart of Driving Offences and Penalty Points</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' field-type='quantitative' max='5937880.2000000002' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Numberof Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000d6' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#0000003e' />
            <format attr='line-pattern' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#6666664e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <reference-line axis-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</rows>
        <cols>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Bubble Chart of Total Penalty Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <size column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Penalty Points for Counties and Offences'>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving Dangerously Which Could Harm Pedestrians]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving vehicle before remedying a defect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Failure To Wear Seatbelt]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breaches Of Driver Duties]' derivation='Sum' name='[sum:Breaches Of Driver Duties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Careless Driving]' derivation='Sum' name='[sum:Careless Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contraventions]' derivation='Sum' name='[sum:Contraventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dangerous Driving]' derivation='Sum' name='[sum:Dangerous Driving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Exceedings]' derivation='Sum' name='[sum:Driver Exceedings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driver Failing To Restrain Minors]' derivation='Sum' name='[sum:Driver Failing To Restrain Minors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving Dangerously Which Could Harm Pedestrians]' derivation='Sum' name='[sum:Driving Dangerously Which Could Harm Pedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle when unfit]' derivation='Sum' name='[sum:Driving a vehicle when unfit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving a vehicle while holding a mobile phone]' derivation='Sum' name='[sum:Driving a vehicle while holding a mobile phone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving dangerously defective vehicle]' derivation='Sum' name='[sum:Driving dangerously defective vehicle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Driving vehicle before remedying a defect]' derivation='Sum' name='[sum:Driving vehicle before remedying a defect:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fail To Comply With Signals]' derivation='Sum' name='[sum:Fail To Comply With Signals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Failure To Wear Seatbelt]' derivation='Sum' name='[sum:Failure To Wear Seatbelt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Child Restraints]' derivation='Sum' name='[sum:No Child Restraints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No Insurance]' derivation='Sum' name='[sum:No Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offences With Alcohol]' derivation='Sum' name='[sum:Offences With Alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overtaking   Offence]' derivation='Sum' name='[sum:Overtaking   Offence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parking a vehicle in a dangerous position]' derivation='Sum' name='[sum:Parking a vehicle in a dangerous position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speeding]' derivation='Sum' name='[sum:Speeding:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Use vehicle without NCT certificate]' derivation='Sum' name='[sum:Use vehicle without NCT certificate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Speeding:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Fail To Comply With Signals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Exceedings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Offences With Alcohol:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving vehicle before remedying a defect:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Failure To Wear Seatbelt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving Dangerously Which Could Harm Pedestrians:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Dangerous Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Breaches Of Driver Duties:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Overtaking   Offence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Use vehicle without NCT certificate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle while holding a mobile phone:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Contraventions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driver Failing To Restrain Minors:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Insurance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:No Child Restraints:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Careless Driving:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Parking a vehicle in a dangerous position:qk]&quot;</bucket>
              <bucket>&quot;[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving dangerously defective vehicle:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]'>
            <groupfilter function='level-members' level='[County]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[County]' />
              <groupfilter function='level-members' level='[yr:Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]'>
            <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' direction='DESC' using='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[sum:Driving a vehicle when unfit:qk]' />
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County)]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (County,YEAR(Date))]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='Number of Penalty Points' />
            <format attr='subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-color' value='#6666665d' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='286' />
                <format attr='maxwidth' value='286' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk] / [federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names])</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage Of Penalty Points Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Penalty Points in the Republic of Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
            <column datatype='integer' name='[Breaches Of Driver Duties]' role='measure' type='quantitative' />
            <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
            </column>
            <column datatype='integer' name='[Careless Driving]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contraventions]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
                <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
                <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
                <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
                <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
                <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
                <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Dangerous Driving]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Driver Exceedings]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driver Failing To Restrain Minors]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle when unfit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving a vehicle while holding a mobile phone]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Driving dangerously defective vehicle]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fail To Comply With Signals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Child Restraints]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Offences With Alcohol]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Overtaking   Offence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Parking a vehicle in a dangerous position]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speeding]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Use vehicle without NCT certificate]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' included-values='in-range-or-null'>
            <min>0.0050000000000000001</min>
            <max>0.48184101428610038</max>
          </filter>
          <filter class='categorical' column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</column>
            <column>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]' field-type='quantitative' max='-322530.15371996537' min='-1499602.0940846899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]' field-type='quantitative' max='7488206.7395304907' min='6680774.2487437539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <text column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' />
              <lod column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' />
              <geometry column='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</rows>
        <cols>([federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok] * [federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='PenaltyPointsData (ImportDataForTableau)' name='federated.0za22411ugw8qy15xnm9l0ev0lfo' />
      </datasources>
      <datasource-dependencies datasource='federated.0za22411ugw8qy15xnm9l0ev0lfo'>
        <column caption='Penalty Points' datatype='integer' name='[Calculation_589690081844793344]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Driver Failing To Restrain Minors]) + SUM([Breaches Of Driver Duties]) + SUM([Careless Driving])&#13;&#10;+ SUM([Contraventions]) + SUM([Dangerous Driving]) + SUM([Driver Exceedings])&#13;&#10;+ SUM([Driving dangerously defective vehicle]) + SUM([Driving a vehicle when unfit]) +&#13;&#10;(SUM([Driving a vehicle while holding a mobile phone]) + SUM([Fail To Comply With Signals]) +&#13;&#10;SUM([Driver Failing To Restrain Minors]) + SUM([No Child Restraints]) + SUM([No Insurance])&#13;&#10;+ SUM([Offences With Alcohol]) + SUM([Overtaking   Offence]) + SUM([Parking a vehicle in a dangerous position])&#13;&#10;+ SUM([Speeding]) + SUM([Use vehicle without NCT certificate]))' />
        </column>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Co.Carlow&quot;' value='&quot;Carlow&quot;' />
            <semantic-value key='&quot;Dublin City Council&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Killdare&quot;' value='&quot;Kildare&quot;' />
            <semantic-value key='&quot;Limerick City Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County Council&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Limerick County.C&quot;' value='&quot;Limerick&quot;' />
            <semantic-value key='&quot;Lonford&quot;' value='&quot;Longford&quot;' />
            <semantic-value key='&quot;North Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;South Tipperary&quot;' value='&quot;Tipperary&quot;' />
            <semantic-value key='&quot;Waterford City Council&quot;' value='&quot;Waterford&quot;' />
            <semantic-value key='&quot;Waterford County Council&quot;' value='&quot;Waterford&quot;' />
          </semantic-values>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_589690081844793344]' derivation='User' name='[pcto:usr:Calculation_589690081844793344:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[County]' ordering-type='Field' type='PctTotal' />
        </column-instance>
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80700' x='0' y='0'>
              <zone h='50000' id='1' name='Percentage Of Penalty Points Map' w='80700' x='0' y='0' />
              <zone h='50000' id='8' name='Penalty Points for Counties and Offences' w='80700' x='0' y='50000' />
            </zone>
            <zone fixed-size='193' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19300' x='80700' y='0'>
              <zone h='14000' id='6' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' w='19300' x='80700' y='0' />
              <zone h='8625' id='7' name='Percentage Of Penalty Points Map' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='19300' x='80700' y='14000' />
              <zone h='8125' id='9' name='Penalty Points for Counties and Offences' pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' w='19300' x='80700' y='22625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard of Map and Bar Chart'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='752' h='94000' id='11' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='47000' id='1' name='Percentage Of Penalty Points Map' w='100000' x='0' y='0' />
                <zone h='47000' id='14' name='Penalty Points for Counties and Offences' w='100000' x='0' y='47000' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Percentage Of Penalty Points Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Month:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:Year:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Bar Chart of Driving Offences and Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bubble Chart of Total Penalty Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[usr:Calculation_589690081844793344:qk]' size='40' type='color' />
            <card param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]' size='322' type='filter' />
            <card mode='slider' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]' size='50' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Penalty Points for Counties and Offences'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[:Measure Names]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
            <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard of Map and Bar Chart'>
      <viewpoints>
        <viewpoint name='Penalty Points for Counties and Offences' />
        <viewpoint name='Percentage Of Penalty Points Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[none:County:nk]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[yr:Date:ok]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Geometry (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Latitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[Longitude (generated)]</field>
                    <field>[federated.0za22411ugw8qy15xnm9l0ev0lfo].[pcto:usr:Calculation_589690081844793344:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Offaly&quot;</value>
                  <value>2015</value>
                  <value>&quot;POLYGON ((-7.0763 53.3806,-7.0834 53.3681,-7.0607 53.3541,-7.043 53.3572,-7.0257 53.3457,-7.0145 53.3288,-6.9741 53.3105,-7.0044 53.2949,-6.9899 53.283,-7.0283 53.2757,-7.018 53.2585,-7.0318 53.2475,-7.0665 53.2317,-7.0397 53.2229,-7.0273 53.2271,-7.0091 53.2172,-7.0317 53.2074,-7.0321 53.1883,-7.0735 53.1914,-7.0873 53.1862,-7.1467 53.1913,-7.1594 53.1798,-7.1242 53.1805,-7.1061 53.1683,-7.1185 53.1585,-7.1716 53.1575,-7.1931 53.1619,-7.2381 53.139,-7.3008 53.1344,-7.318 53.1435,-7.334 53.171,-7.3183 53.1714,-7.333 53.1882,-7.3804 53.2174,-7.3915 53.2092,-7.4059 53.2144,-7.4321 53.2065,-7.432 53.1887,-7.4648 53.1901,-7.4876 53.1991,-7.4977 53.1911,-7.5329 53.1857,-7.5516 53.1765,-7.6055 53.1731,-7.6312 53.1681,-7.6455 53.1439,-7.6056 53.1136,-7.5846 53.1056,-7.6045 53.0868,-7.6091 53.0748,-7.6591 53.0508,-7.6556 53.0411,-7.6968 53.0276,-7.7098 53.0099,-7.7042 52.9864,-7.7304 52.9596,-7.7858 52.9701,-7.805 52.9804,-7.8649 52.9452,-7.8452 52.9329,-7.8931 52.8928,-7.9139 52.8954,-7.9151 52.8823,-7.9407 52.8776,-7.9434 52.8646,-7.9738 52.8484,-7.9959 52.8638,-7.9888 52.879,-8.0369 52.8905,-8.0441 52.901,-8.0363 52.9155,-8.0479 52.923,-8.0382 52.9325,-7.9974 52.9286,-7.9818 52.9385,-7.9861 52.9732,-8.0036 52.9828,-7.9993 52.9947,-7.9833 52.9988,-7.9523 52.9945,-7.9592 53.0181,-7.9517 53.0458,-7.9429 53.0438,-7.9271 53.0657,-7.9206 53.1048,-7.9554 53.1255,-8.0198 53.1482,-8.0549 53.154,-8.083 53.1694,-8.061 53.1872,-8.0416 53.1943,-7.9956 53.1929,-7.9702 53.2141,-7.975 53.2358,-8.0086 53.2513,-8.0266 53.253,-8.0283 53.2628,-8.0537 53.2743,-8.0467 53.2884,-8.0235 53.3037,-8.0259 53.3222,-8.0046 53.3222,-7.9845 53.3363,-7.9418 53.343,-7.9437 53.3502,-7.9224 53.3637,-7.9065 53.3634,-7.8738 53.3474,-7.8549 53.3476,-7.8186 53.3573,-7.7737 53.3486,-7.7133 53.3614,-7.7099 53.3812,-7.6926 53.3944,-7.6499 53.4051,-7.6239 53.4181,-7.6071 53.4124,-7.6057 53.4014,-7.581 53.3921,-7.5678 53.3808,-7.5659 53.3533,-7.5407 53.3372,-7.5304 53.3485,-7.4888 53.341,-7.4576 53.3194,-7.4246 53.3359,-7.4006 53.3315,-7.3689 53.3412,-7.3653 53.35,-7.3281 53.367,-7.2759 53.3963,-7.2133 53.41,-7.2091 53.4229,-7.1923 53.4269,-7.1129 53.3873,-7.0763 53.3806))&quot;</value>
                  <value>53.167400000000001</value>
                  <value>-7.8057999999999996</value>
                  <value>0.0058707294177302721</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <device-preview selected='Desktop' visible='true' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Penalty Points for Counties and Offences' />
        <viewpoint name='Percentage Of Penalty Points Map'>
          <zoom type='entire-view' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart of Driving Offences and Penalty Points' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart of Total Penalty Points' width='192'>
      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
      f3mRzMKpEd8gAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      rQL9DzZE7TDR03L2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Map and Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Penalty Points for Counties and Offences' width='192'>
      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
      sUmhoiQ3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage Of Penalty Points Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29WXBc55Xn+btb7ol9BwgQBECC4k6JWihZsmypZFe52u6yXdXrTFXNxEw/
      TExMTMw8zFs9T8S8z8RMR3dVl7vsssuuKlsrtVrURlHcNxArsS8JZCL3vOs8JL7Lm4kEQUqi
      SDDz73CImXnvzXuR53zfWf7nHMlxHIcaaqhSyA/6Bmqo4UGipgA1VDVqClBDVaOmADVUNWoK
      UJWwmB4bYXRiGsOyH/TNPFDUFKAqkeV3//wGK1MX+Ic3ztx+N3aL9z+//ADv65uH+qBvoIYH
      g2hLFydf/AGX/7//l4kLBV47/RlHDuzl1OkRmuoCnD31O2I5hb/4n/5nWoMP+m7vH2o7QBUj
      uzaF5G9hdGSS3QN9RHr2c+TEM+wKZ1jJBHjqyUPIj3iWqKYAVQkfjb4cb3x0kx/+6Pvs2TuA
      HGihu7OHZmuVJaeLZ4/3EE+b+B5xG0GqZYJrqGaU7ACGYTyo+6ihhgeCEgXQdf1B3UcNNTwQ
      1HyAGqoaj7iLUxmrs+NcHruFFGzm6O56Prs0SqSljwPdAT47N8lzrzxPdvIaZ6cWae/Yw5HH
      +msrxSOCfGaVc59fJmc5HD9xrNQJzmQyhMPhB3l/3wgcx0HPJRmdWsJv5Og4dISJixc4eOwo
      c9dv0Dy8j/mr58jLUXp6e2mMBB70LdfwNcFxHBxLZ+LGCPjD1bmwmelVbk7HGBwcQJEc2FgC
      JM8xu/oHaYoGuHn1Cnp1swUeKThmgZuj47Ts3kuDr0pNoMmbIyynDNbTOY7sbuazd09R3znA
      2uwol25cJ5rM0dvs49bsMqHGHlRp+2vWsDOQXJtjcmKGpdUEhw89Vp0mUA01CGzaASzLehD3
      UUMNDwQlCmDbdi0XcA9wHIdcLodtF52EYDCIJEnI8p1dK8MwKBQKaJqGYRjIsoxt2yiKgmVZ
      SJKEbdtI0p1tL/G5qqqo6u2fUlGUr/hk1YMSBZBlmWDwEab+fU1wHAfHcUilUkiShKIoaJpG
      KBRCkqRtBddxHAzDQNM0bNvGcRxkWcZxHFeBxHXEe+K8StcW11MUhUgksq0C1nAbtb/Ul0A+
      nwcgEAggSRLBYJBoNOoK7t2ifLf1Ko8QfoDt6Fri82AwWBP+e0RVRoG+ChzHQVVVdF3H5/MR
      jUZLzA8vhDlTLpR+vx/LslzulRB20zRLzJfyHaASVFV170nTtJLPTNNE13UsyyIQCKCq6qbv
      qnaFqSnAXcK2bUzTxDAMbNt2BWcr4Rf+geM4RCKREiE2DANd10sEXPgA5dcQ3w1sMoVkWXbP
      CYVC7me6rpd8v23bGIbh+gqGYWBZlnsd8b64RjWhpgB3ASFMhULBfU/TNHRdJxAozRIL51Ws
      vlA0mYS5BEWlEY6vQCXH1WsOiesKoRXv6bpONBoFijtONpt1dxZxjlBWwzBKGL/i+qZpYppm
      VSpAde9/dwGxCiuKUrLam6a5yeRwHIdsNuuu5kLAhM9gmia2bVMoFPD7/Zu+Y6vv9+4EwmkW
      yuP3+8lms6yvr5NMJkv8inKfRJx7N456taCmANvAcRzXhg6Hw+5q6jU/BIRplEqlSlZaIcSm
      aQJQKBTcMKi4RiWH1yv8IlIkFEuSJHw+n2veCOGudK73fLGLlH9WraiZQNugfBUVNrN3BYei
      EKXTadc0yWQy7vteofOu5uJ1JROn/NoiTArF3UgolNgJylf28ihSbeWvjJoC3AWE0AgTRJbl
      TeaPcCwrRVVkWaZQKLhRF0VRME2zREC9guv9Xq/jK94T2fpy80YcXy78NcHfGjUT6B4ghMnn
      820yG3w+H6qqYlnWJuUQiiNWa2HGiLCkd5fxCqp316ikCF4I5ZIkCcu2yel5CoZeco2tzB6x
      A1UjajvAPUKEQ8ujPwCRSARd111nWdd11yEud1w1TXOjSneywb3mk9dUKqdKOI6DbhpYto3t
      FL/Hdixsw0ZTNNSNe/DuDl5Uaz6gpgD3AGG3G4ZR0VaXZZlAIOA6znA7vGkYhrvqC+H32v2V
      sBXtodw0kiQJ3TTQTaPkPMdxsBwH29ExbRmfqmHZNkqVCnsl1P4S9wBBXPPG9CtB0COEcAtl
      cByHfD5fEq4UDm4leHcN77FeW1+cW+l+vIpgWhbZQp68UcAuM4eqGTUFuAeoqropK7sVfD4f
      gUAAWZZdk0iWZSzLKjGLyoXcG+sv/55KTrF73F3cv1BG3dBrTvEGaibQPUCWZTccuR1HR+wC
      IuojfINMJuOyNlOp1CZBLxf4O8G2bdfmNyxz2/uBoqKoirrt/VcLagpwD9A0bVOEpxzlyiHy
      Baqqkk6ngSJrM5PJ4DgOiqKU7ADlK/xW36GbBqZlYm8RFfIeW/IayBsF/KqGpt75WaoBNQW4
      SwiSmbD/txI4y7IwTRNVVcnn82iaht/vd02bYDC4KSpUKfR5p7CnbhoYlllRSe60o3ijQAWz
      WD8gS9VtBVf3098lBBkul8sBd664ElliXddLzpEkiWg0SiAQIJvNuoU0d3Jexb+9oVDTsjAs
      s+QzoMRvKFcMr9MsoMilwl+tTnFtB7gLiNCnWL23g7D/y8scBQP0Tj1YK9EgvO+rioIfHwC6
      oVMutuW0i/LridcBzVfyHdXqD9R2gLuAyP5uF/4sPyccDhMIBEin024otFAo3LFybCvOkBea
      om4cW6og5WaP14zyXqN8tyj/vJpQU4BtIGz1Spnf7SB4O5FIxA2FBgIBgsHgJqan9xzxX2/c
      Hyhxlk3LxHHuHC69Hfm5/VqRZMKB4Jbh1WpDzQTaBrZtY1nWl+604E1ciWtlMpkt8wl3eu1V
      FJ+i4VO1onlmmVie64kdwnaKtA2fVjxOomj7S2ydfa421BRgG4jY/5eFJEluNZmX9uClN5cf
      X14b7D1HvBaRJKSiUDuOg2lbbpxffJciKShlZLs7cYKqDTUF2AZfxjQQq7sQcsEDKmdcltvq
      fr/fJchtxRMqN5uEKSXLsrvye6F5qti2okhXsyLUfICvGaZpkkql3OovSZLw+/0Eg8GSKFK5
      0ImoEZRmnAXKyW9e5alUTL/V7uIt6Pf6D1sV9z/qqM6nvk8Q9r1gfIrKMFEMIzoylDud4XDY
      3Sm88PoOXsd2uyzxVsdVijABVd0epaYAXwO8FOlwOOwmuERnCC8rNBAIlBSuaxsOqiic915T
      /LeSqbKVL7GdyebdgcS5qqpWbUfAmgJ8ReRyOfL5vNtXx2uOKIriNsESLFDRwtC76oqidoGt
      hLgSUa5Sp4c7KYHXZ4Aia9Vb7F9tqCnAV4Qsy66NX6lARtM0VzhFMyqhENFo1N0p7mVCp70R
      0oTKSa87QZhmop+p3++v2hwA1BTgK8PnK1IKthIin8/nEuTKIRRC8IUEKpU7SpKE7dgUdB0b
      h4Dmdyu7KilBpTBrIBBwSzpFcq+ahR9qCvCVsZUAeYvgRSLNWwAjVl9Biy6P8pRfP2/omNZt
      JbIdG1XaPjknlElRFAqFwqbvqmYeENQU4L7Bm/F14/Sa5u4Ifr9/U7tFgfJklWVZWPbtwSXl
      VWR3ghBu4YN4bX1RnCMc92pETQHuE1RVJRKJuG1StiKoiVYqXrgmjzdMaUlYnri97TjYjoO8
      BXXCu7J7lVAc4w2J6rpeiwLV8PVCJJe2SjAJO7wS90fQpu/EC7Idm2whh0/V0DaoD3B7d/Cu
      9OURHlGFJgr8y7vcVRNqCvANoJyx6a0uEy0UBcpXcHGuqqhu2xMvLNtCVYoENwFvprdcifx+
      P6FQaFPotFpRncHfbxC2bZPNZt3XQvh1Xd9kdwthFBEjbxRHRkKRbx+vKSphf5CgL1BS2bVV
      PsBxHFf4xS5T7cIPtR3gvsPr5IqQp5gXIPqJwm3BFdVj5cIrkmei65ssySU7hPd4sQOIawsH
      3Bv2tCyLXC6Hoij4fL6aE1zD/YEsy/h8PiRJIp/Pk8vl3ORZOp0uiRCZZmlrEy9tQdQSeFfu
      rcKY3iyvZVluexbveZlMxt1phDlWjb5ATQHuM4RQOU6xnblwPL0jisR7qVSq5FwhtKLDxJ0q
      yLwQvCTRgVrwkXw+nzvZxpuYsyyLdDpdU4Aavl6IGL5giAqTw+/3l5guYoUXkRnv3OB8Pu82
      2d0qKlSJ51/OBvX6HuJ1+fHViJoC3Cfouk6hUHCFV2SDhTkiTB8Roxcjl4Rg+v1+t6NEef/P
      SjvBdmHTrSCUr1p9gFoU6D5A0JsF91+s6sIMgdJBF1BUmEgkQjgcBm4XxQhqtTe0Wc4AvZup
      8pUgzt+qP1E1oKYA9wmO46BpWkkSqr6+vkSQI5GI+2/v0AzhIwhzxTsGCTYXsIhzt6oE895T
      uVl0N+c9yqgpwH2A4PeLSTJilRYhTlFAI5xUwccRI04DgYA72FqgUrjT+9ndCHG5rV9OjahG
      1BTgPkBRFOrq6kri696pkkJYc7kckiShaZpLjBMEOlVV3ajN3QrndmaMt/V6eZ6hWhWg5gTf
      BwhBLxQK7gBqn89XMmLV6/CKophyc0SSit3lRAQJSofhle8K263k5Qri/f5qrQirzqf+hqBp
      GvX19fj9/k0CJmL14jhv5znB24fbY5dUVa1YE1y+et9pF6gU8qxW51egpgD3Ed4oTjlEGLTS
      MZX6B4no0de5Uld7MQzUFOCBQ9QK3Ik6LRJqlVZu74q+lS1fvlt4j6tW21+g5gPcA76upJEg
      osFtQZZlmWg0WtFBTafTbmTJuwN4i2a22mW8/96q3LKaUdsB7gGxWIy//a8/49MzZzbxdu4F
      pmm6nSG8yTAvTdlLjfbSo70tE7czYbwVYUAJIc57DTHDrBpRU4ANbGUKCCExDINQKMTc4iKL
      6Lz+3jsljuxWEHSIcghahODnb4VcLndXvX+8yuF9r5z7760nFlngZDKJWVaWWS2QHM8vmMlk
      3FR8tUF0ZPaujKOjo0zPzqLIMmuJOGtmAVlVkRWZtt4e1iam6Wps5tmnnympqRUF6HC7/PDL
      0g3i8bh7PwXTKHZ/lpWK/UAF7vV7Esl1fAE/PR1d93x/Ox01H2ADQqASiQSn3nmbaCTKW2+f
      onVXN727ejFti/0nnyw5p665idEvLrBrepp9+/ZhGIYb+/cqgHByKzXPuhPENHmAgqFjbnSG
      MG0LPz7UssRaJVan8BMqfS7LMvF4HH/A784XqDbUFIDiKntrZpqlxUVml5bQfQrnP7xAW28P
      iZUYxkA/yzdv0XVwH8FotHjOwhLWSpznDx6luamZRCJRMcsqbHzB9txuzKqAaZrkcjl3ZTdt
      a9Mqb9mWWw5ZqRtEpdderK6uEgyHsJzqFH6oKQCO43D1xg1WZJN4PsPuk0+gairh+ii7hvdy
      7eMzdA70szJxi9XZBXbtj5JaixNOFXjuOy+Ry+Vck2c7f+BeYvhi9Rfn+FWNgmFgO0U7Xzd0
      fKoG0tYZYG/Uqtx3iMfjNDQ0YFoWtuXgbBq39+jDcZzqdYKF2ZBIJLgxOkJ9azNDjx/BF/Aj
      Kwr9hw6gahrDTz3BjY8+Y29fP0ahwNzEJFNnL3L44EGX4CawXWGJN8N7p/uybXuT46wqqjvp
      xXGKY5Gy+u0qsa2+19siUZIkkskk8XicxsbGYgRIlgn4fJv6Cz3qEAVCVbsDWJbJ1bOn+et/
      fp8DTx9GVhRSC+N88M6nBNuHOHGsi09OfYjc2Et69DqffPIF3/7hKyyfG+Nf/fgHJdNc7gYi
      krRdAyrTNEvKHwUkScKv+VAdm/zGpEnYaJTroTXfKVkmyjCbm5tL6o/FrlItcByH6dGL/PXP
      f1u9O4CiyDR3D6GnV+ke3IOiqgSaunj5p38CK7fIyWG+9aN/ibJ8g9k1i+/+4AmufXqRF17+
      A+rr6++62kr8Vwigt0VKJei6jmEYLvXBC0kqtkYJ+QP4VK2oEJ5oUPkOpKoqdXV1WJZFMpkk
      n8+7r73HK7JC0HfvUzB3MqIN7QRUu3oVQJIUonVRcobNwvhUsYBFsfnst69iN7ZTFwowcuZj
      Bl78EX/+33+fyVtp2qQY//yLv+Pd8xObkliVv2OzkohKsa0gmuhWMpckSULeiOtriurOBCu3
      70XUSRTcBAIBIpFIxd2nGqnQkiQRbWxBN8zqNYEKhQwXP/8EKR3jwhdXCDbVo+oJiNSTX57l
      0gdJ5pMSBXWKrqeO0dM2S9BpYVVuxjR0V/i3s8HFMV5HNZPJ4PP5KoZFfT4f+XzezUv4fD50
      XS/ZTUKhkJsh9gqvoigEAgE30iRJxQmVd1K4cnpFNcCyLG5cOoOdWatOBbAsi6WlFd78/Wme
      /2//nEA4SkNzPZraxsH6DrRwPQHFZCCZQVI0FBnsgsJLP/5LbNMmWNcAW0RNKoUdy1doy7LI
      5/MVV2TBCUqlUgSDQXdCfTabJZ/Pu7SFuro6dF13/QVJkgiFQqjq7T6hYhbAnVBNtj8U/yb5
      fJ5X33qPjpMvVJ8CJJNJTn3wPklLJ9TYQHJxmf4X97mfN3eEAMjncoRCIYyCzq3L1+htaaWp
      qcWNHmyVePLiTsmpO+UDBE3CNE23O4QwZ7wtUvx+Pz6fz13Fy+P/XqqGbdvYjoNlW/jU292q
      q2n1tyyLdz94n8X0OkpjI7Gp2epSAMMweP3UW0QG+2hraWLg8SOb1nFJAj2XZ/LMeZrDUaKR
      CM8/doRQqKgY28X774ZtKaq8RMuTSkIoqsC8wi1meZXPE6vETnUcx3W4s4W821IRNkKqVbby
      A3z8ySfEHIP+x4+w+/hhHNuuLgWQZZlINEomXszayopMYnmFUCSCI0FqNU7v/iGQJHLpDOGm
      VlqbmmlpaXEpBduZFFDZLxC7gWh2ZRgGsiyjqqo7K6z8XssjQbIsu4q4HYQTbdlWifADFIwC
      iqygKsqmTPKjDJ/Ph1yA2Ow8gUiYxPJKdUWBFEXh+y+9zHBzB8pyHH1ynqvvnka/tYA9t8L8
      jVEc28EX8HPwu88xGlvk+vXr7qpfzv6stNp7hb9S4YmIHnkb2Faa9iJs+vLdYTuzS0Bc066w
      W9kbibScXigO2riLLPajgCdPnODk3gP44mmUpQRX3z1d3WzQfD7P3NwcPT09vPrGG4QGd6Fo
      GjPXRtCCAZpRee6Zk67ZIVZtsZqLCq5yIS6nIGzVuCoSiZDJZAgGgyU1wV8Vtm27FOdcIV+R
      5iB+9oDmQ1OL/khTU9PXdg8POyzLYmJiorpMoHJomkZbWxtTU1PcGB9lb1sDi6Pj/PSVPyKf
      z9PU1IQsy+6URyHEolV5eXGJ2CGEqSPO2aqCzLZt/H6/253560JJCeQW0Spxz/ZdFNY8ipBl
      me7u7upVAMdxuHHjBr997VVa9/TStnsXU19c5Eff+0Pq6urc8kRRvSWEyiv88XgcwzBoa2tz
      dwSvmXSn0klR5yuK4+/lvrc7RzTaiifiFZNp4jre61WTAjiOw/r6Ov/pb/66OhUgm81y8fJl
      RhZm2HX0APl0moPPnGBtaYVzly7S1NREMBjcZL97m1ul02lePfUm6XyeZ44e5/ChQ25E527s
      aaEAlmXd9epvWZZbitnQ0HDHY1VVJRQMUTB0rC1MMEVW8Gs+bMepmoowwzC4OTrK+ZFr9D1x
      aOc6wWLlunz5MqdOnWJ8fJyZmRnW19fJ5/OsrKxsKYhXrlzhw88/JdBQh+rTaOkuVkI1tbei
      dTTx2ltvukXriqK4ySWx8uu6zm/++Z9o6N/Fk3/8B1wcvcH6+rp7vIA3+1tpJRYmUiXeTyXk
      cjl3xsB2SiZJ0qbBGOVQ3Qo4m5yev6t7eBggfvv5+Xlefe01RkZGGB8fJ5FIkMvliMViW2a/
      19bW+O0br6FLDsFIZGfuALlcjrfeeZvdvX1cunaVlgNDXI7NY1sW2fUkhWyOQCRMmxbkpRe/
      w+tvvUXeKHB4/wEc26ahoYE9Hd3cOHeJJ155kaWpadp2dSFJEu27ezk3Pskvfv0P/Ouf/BRN
      01BVtUSQUqkUuirRvXegGJ9va2Zubo6GhgZXSYQpJNqib5UdrtQ0qxJEs1xZll0axHbFNbIs
      o6kaphi7RFHYherIkmjTrhRrC3YAHMfh408/JZvNYhoGelOEkWQMB0iPXsfQC8iKglYw+ckf
      /5CLly9xa36O3s4uWptbsCyLZx4/wZvvvk3PvoGdqQDjExMkVXjn048I1UXpb2ok2tRYcozj
      OIydOcf169dJqjZdB/Zz8dY0pmEgyRLXJ8Z4+o9fIRgJYxpmUSgch/FLV2np7iIdTzA5OUkk
      EqGjo6NEgHO5HPp6GjYmM3b293Hj3FU6OztpaGhwWx9C0dH2NsYFCAaDbq2wGJ90Jwg2p3gu
      0TN0O0iSRENdPXbCJuDzFyNZlklB15FkTwcKismxnYB4PM71mUlkv4+F8Sme/9MfuX+/5q4O
      97iZkTEuXb7MxNI8Xcf2s7wcY2pqBBSF0fMXOfH97xJpqN+ZClAoFFibmiGXSnPohZMVj5Ek
      iebeHn7z+qs89S9eQQLa+3uBohC17upB1VQcwLYs9FwefzCAoiqk19fp3LObS3OTrC/HODo4
      zOHDh4nH4+i6zlvvv8u+F54pir8DwWiU0K4Ofv6bf+DogUOcfPrpknh9uRl0rxEfQX8QLUzu
      ZZSRpmk01jeQzxdNnHAwhCoXSXO5XK6Y+oZNybKHFYZhkFqNo2eyDJ88seVxLd0dvP/uaXYf
      eQzbsmnsaKOhvQ2A9r4e97fZkQpw9coVvvXk01weuwlsvXo2dbaz98njTF66Rjad4ci3n0Xd
      6MSm+XzFckKge+8gN89dIhQN09Hfh6qqTFy+Tmd/LwNHD3H9k88597OLZHI51ldWaehqp77l
      dlGJrCh0DuymubuT5QvX3O+/fv06Pp+P3t6i4omuz/cCEYmCokkTDofv2meAUgKeyCSHw+GS
      8a1FKvjOEIXx8XF2tbYTHaqncIe/QzAS4bHnnmJmZJS5sUkGjxygvrUFAMVj7il/9Vd/9Vfi
      xVaFGA8bCoUCoVCIS1evsDg9S8/ewS2PjTY20NDaQmJllbbebiRhb3v0xh8Kkk2lMXWdxakZ
      WtsifH76LOm8Q3Z1heETR1mZG0Nv6uP4c8eYv3aOU699ilNY4+zpc/QfOURiaQFJUlifmiGX
      zfHJJ5/wxcULpMwCuzq6CAQCOI5DNBq9p85yIgehaRqRSOSui+q9EIm8UCjk+iNiQiVQYpo9
      7BB/i+m5Oa6ePU//4QNbmpD+YJCWnk7WV1Zp7elE9fmQJHfTA3aYAginsq2tjWg0SkB2WNEN
      Onq7i59bOivzCxio+BSb5blF0PzEJkdZmF8hFAqg+P1MX79JOp6gvrkJ0zCYunIDVZXpHR4i
      tRZn8uplhr/1FLcmltl/cIiLb/6S1eBhOjLjpBsbSBbC/Is//R56Joah57l2fhpftI6unjZW
      YitMz8/SdWAvit/HrgP7uHLlMmHNT09Pzz33BxJRovJpM/cCwT4VNn/58G5xzMOuALZtEw6H
      aWlpobkhyvjcHD37Bt1I1vrKEsmMQSigEVuYJ5nMYpsFrn52nmAkTDASZnVhkZkbYzR1tAHO
      zjOBxHBpw8gyPz7K1TNfMHhomHB9HUvj1xidWmM9kaWtQSInBUkkr9GsJllOGNiffEpWrqMp
      CLIi07qrm4WJW9iWSe/wfnKZLJrPhx2sp7urlzH/CI3trYRbdzN98QMuanU8tWeRpYkp3lpb
      4NCJA6SuzaLbBtc+fIdE6jkaLIPGjjaaOttZuDZKIJ4lqPpRKjSzuht8XQkqrz8iaBremQQ7
      AaZpbvz+JvMTNxg//wX9Rw/R3tuNkVzgwplr5JYX2P/Stzj7+7Ps3jNAgASOVuD856M4n16i
      syWKZVmsx2LIsrKzFECsUkWqr0S4pZVI316Sq2uomkZz3358/klGZgq0hVN8fmGSuu69+PQE
      BgqBliayy0lsfysD+/oYOXMO09BpaG1B2lgdV2bnWRof5dbe3WR0jZEvLrIwcp26Iy+xO3ee
      Jb2N/gMhuoJLJOVdvPSyzPXJNBc//pipsx9x+PAwA4cPICsyXZ2dPPv0M+69PwwQk+phc6HO
      ww6fz4fP56NQKBBt302op49UPEFDSxNyoIWnnj3E2U80/GaO9Ooimd4hWqI+1hNZ2gd2U1he
      Rw+3sqvFz/zYVJHb9aAf6stAMCWxHTRTp0PyE4lnOPOLXzKxJvP0c0eYv7XMd//0x5hrczz+
      hz/l+RN7CZOnbU8vE2NTWJbFkRdO8sQfvMjgsUMABMJhnnjlO/QM9DJ27jqD+/tJrKcY+vYf
      sfz7XzGv7eGZo3vZ1WSxaPVwZG+UhVUDMxFj72APR174NrKiYFlFpzWnwptvn3KnRT5oeB3q
      nQyfr9gMQDF12rUgDckCk+/9no9OX+HEy8/T1N7DT/+H/5Gm9A2M7qf5Fz/5Po2KQd1jj7Pw
      xXvk0hkeO/kkh58/ubN2AAHHccjlVlmdmSZoWziRbgrJGVaWZjEMi+XZWY4d2MeHv/lHWgaP
      IDsFdK2BweMtvPb3bzO4d5DOPX0UPeHS7V9RVQZOPM3Y+Uskp6c49sJzWIbJS//u31PIZkks
      r9Lav59WWQLLpq6xEVVW6D/0GABLU35ic4t09vfSvX+Isc/Ob1s8/02iEvV6p8EwCqyMXySi
      BogXAuwJ+kgmVpiajpFKrPDEiy8y8vHrOHU9vNCssjRWDJmeef1NpLpuhp98HJCKDvFOpEOL
      W47FYpz6/fugquRtE83vp+/Q/m22docL753m+He/tSUJTM/nufH5RfY//cTtqBFw/dPPWV1e
      Q08l2XP4MTLrxeRU3/69GyE2B8d2GDl7Hn8wwMDhA9y6coNvH3qcjo6OTd/zTUNUiYmSzvIo
      0E6hQ4uuGW+9+w4pPY/hODgS9B4cxr9hIm+1405cukJrTzfRpoYigfEbvvevBaZpoqoqK7EY
      od5OWro6N/2YlViOjuMwe3OMSEMdVz87j64b9PT30NpT2hV54soNuof2FDk3GxyLjKIAACAA
      SURBVO/Nj09i2LD35FOsTEwSqa9j8OjBjevePleSJfY+fpTz735IOvEJGBb+J+4+cXU/IUxH
      UdtwNx0tHjYILlQ2myWnyfQdOXrHCjwv4kvLZJMpVubmmb45RqSubmcpgAiDimRSoVDAsWy4
      QyeG4nk2k1dHSMfXWZqZo7G7i8Y9g0QjESYvXcAfDFLXXKRSrC4sEYxE3KQJwNzNcdZTWXqP
      HUWWZboOPMbK5BSz73xIPp3h5A/+YGOn2Cg0V2SOv/Q8lmGytrDE6uoqjY2lVI0HAcdxSvoS
      7STBB1xeFYjBIUZFQS9/vTB5i/XYKvNjkzR1daCFIrQPDjE/OrazFABwY9i///BDZJ+Pqzeu
      0zI7jyQrKIrM7v170fw+FFVBCGRiOUa6YNF86CgtR46XXC/U0sbqwpK7JcYXV9i1f+/tPJnj
      kFhdo2VwyGVhyopCx9AA9p5+bp07j6yUxhIcR8I2TQq5PDPjU8SnF2lubn7gSuAtlIfNtQEP
      O0TP1HPnzrGeyRCbXWR9PYnm86FoGi1d7RsRPQlpo9ZZz+eJLSyx5/hR+o4e3bhS8Xmbe3ZY
      QYwkSUxNTfH6Rx+RWF+nde9ehr7zXYx8HkmWsQyDm9fHySXXkU2dx7/7ArKiMD85Q8PA3hJ7
      3qGoHvU9PSxdu0p7OkMoGmHX8CDXPjmDPxQiFI2i5/P46uoJ1kXdexDIxBM0Nlfm5U/fHCeV
      ztF96BCSrPDqu+/wb//kxw901fW2b9+JRTCFQoG/+fnfYfl92MC+F7+FJUw5SSI+v8DcxC3S
      a3EOPfc0kYZ6lqdnaentRfZQPTYOJxiN7iwFABgaGuLqtWtI9fW09PcD4NvolKAFAgSixR4/
      tmny2dsfkl9fQe3cTXp+ha6+bhRZKq7qSwtEWrvIr86znrNYnp3H51dp6O5F8flo3n8QVdm6
      AN0oFIhNTjJ0cB+mYTD56Vvku57j0EA9Vi7BxNUL3Bhb46dDu/jo179GseqYPnaNU29/xh/9
      m3/L2tQEwweGv9H2JKJznK7rO074odhO5uQTJ3jn7BkOv/Qi4JTs9B0De2BgD47jMHHuAmY+
      jWk71PcPU+8eBZnVRQi34ncyOy8PYJoml27exNR1MmtrTHzyCWaFLs2yqtL71NO0HTyIYWS5
      +NFnWBs7fWF1gjf+y8+IxZf47J0vyC7d5PTv/pEvzl7l3BfjLEyPU8gXisUvuRxL45PudR3H
      IbG0zI33P6ClrZlbN0a5cOp1zn54lrMfniG5Fid+4wzx4CD9UYPZrMTA488yFFjng4uTPHWi
      lw/e+gxdq7vnluSGYZBOp91Gt/diugjTUdj/Ikiwk3qDOo7DlRs3MHQdPZfn2ocfk4ytbTpO
      kiQGHj9G36EhTElj7PdvMFusV8LKr3P6v/4/XJpKce6dd3cWFwiKq9ih4WFUw2Btaoq5iQka
      +/qYv3gRyzAINjSUhEGDdU34nAxKYx8d7Q04ts7FTy7T19+Iv32Y9dEvWE051DU2kFuNofkl
      CpkMk5OLNNQFWRufIORXSa2nCEQiLIzcJCjb9A7tYeTsBfY/c4LJq5fp6mwgFRmkTsqwEssy
      efY02UKW+gMvkBv5kKlFnT/7g6f4/OItWuvhwucfMrZic2hv77bPLAQ0l8u5gzMsyyr2udkw
      68rDmuK1aJ+4urq6ZSWZoG4/7FwgSZLo6+2lo6GRubFxJq9eJ9raQnJ5haXJKRo72pFksahI
      qP4AyyOXmEv5OfLEMJrkMHnuDPWtLRiBVhxzB3KBAJqbm3nh2WfZPzTEz3I5sgsLHO7q4uPL
      l2ns7UUq49zcGplmz7deBiC3NMH0xCS5lQn6CgGs1qM825Pk8+kQLx7XuLWQJZbK0NykENQ0
      dj1+GF/Az9iFyyxeu0pLeyude/qQgGMvPsfU1Rs0d7YTn7lJwooTfXyITDJB7/AwCytZmnKX
      +f3n4/z4x/+SaM9hTuYz5HwtzMcSYObu6nmF8yqyuOWENlH6mEwlkSgKsvhc2PqyLJPJZIhG
      o5uGbu+UHQCgvq6O+oMHGRoaIpNMgmXRofk5O3mFrr1DhBvq3GPNbI7Bb71C6KPfMrWoM9zp
      cOXMOYx8gnibynCTtDMTYQJCMHK5HGtra/zm/ffpffppAIxcDjOfR8+sMHNxlvr2Olr62iiE
      e2mu11idvI7WPsj0J2+ylJQ58NyzZEYvsr6aorvJJhnZw7eePYxlmfg0H4aho2oaOA6maeHz
      acSXV5i4McaR554BM0/WVJGsPNfPnCPS3kG4rYuQz2ZlfoXCxDR/8ef/HY6RIxQKElucx1ff
      Rn1o+x1XhH9TqVTJnGAoFr/7/X6S6eJnXl6/dyeQZZlCoUChUKCurs69rjgOdk4iTCCfz7sL
      w8//8Tf0PfUE/nAIPZfDyOVJzY/zwavvUrB9/ODPf0JejrCruwV9eZxFqYfg+sjOVgCBIjUi
      x7Vr11hZXyekaTQ3NRGJRNwCkr/+zW9oe/xx5C0KUgqFAqqqsrawgD43zeHnn8Kxi06WKius
      La+wPDNLIBRm92N7Sa8nGbtwhUhLMwMHizQIEVkau3CZ9FocNRIlk1gnEA7Rpvr4sx//5Cs9
      p9vwaqMtujB/ih3ebPyab1NhizchKHaCWCxGS0vLJlrETlMAuP18V69eZWltFSybtpYWwuEw
      oVCIlpYWfvEPvyL62F5CdXWbzt+RJpAXolhc0zSeeOIJ9/1YLMbExAShUIhPPz9Dej1J6zZb
      fWJmhuTEGAMH92FZFpqqYZkm1z8/S7ihnqaODpIrq8yNTjB17Sa5TJbewwfc8yWKQmrk8xz9
      zvOszM4R3jeAFvAzf32UbDZ71709K0GSJLebnHBmi12fi4JsmAaqrJTE98ujPeX1yTsxGywg
      EnuKonDw4EEObTxDPp/nwoULdHZ28otf/pLZhXmGBvsrXmPHK4BoIitS+5qmYVkWn3x+Brut
      kfj0OIHeTuqzrVuu/gCSZaHZBR7/wXeZunCFUDRKpLMNiQCqqrDn4H4URaW5vY1cOs3JP/4e
      N89dJOpZVfLZHDMjo3QP7kGSJNp6ujcuLtG0q4vp6WmGh4e/9LOK5lvRaJR4PI7t2OSMYgTM
      cRxsIG8UCPoCm3qYel83NDSQSqVcZdyJOQEB0VlPLIKSJHHj5ggTuRTXLi0Q3d1FnSYTrq/j
      9h59GzteAUS/HtHC0LZtrly7Sr4uSFt7Kw3trdiWjTw5RXx6mqbeXtYXF8glUzTt2oUvFMI2
      TWIj19j31BEUVSXa1IgsF7slxOYX0HzFyZGOY6P5fWj+JiRJIhAKYhZ0VFXFtm1Gz55n8Nih
      21utR6gUVf3aqMiio1zBKJ0kKRJdpmWhbJRBCrMHbgu63+93HWJvy8edBmHWBQIBt8lYMpnk
      wtQ4u44cLIaZJdD8fm5dvsLA48dIxlZJLK9Q19xMfVvrzssDVILjOFhGAcspCsGNqQmau9vJ
      pNIYpgVY1Le2sL64yNzli6hmgf7dnSxcusDy6Chzly+za3gPvkAA27JYGpsi2thAci1ObG6B
      weOHS79wIwqTXIu7psjsyBi9w5XtTAA9m/vKIWbBgkyn0+5r72fCpjctE4fN7ROFMjhOcczS
      8vLyjqoI2wqmUSCTyYCscObs53TtH6KQzZAvGOBAXXMDuWyeuZER5scmadvVzcLoGNNXru78
      HaCIAqd+/h9Z73qOQ50qq/E4Y7/+JWkpgOVvpV1dYTXjYMlR7Kkb3Ay2892n+6nfPURTEKZj
      i/hDxRh4KrZGpL6OmZvjpLNZsmsJbNNCVhTY6KEDIMkyQ0cPcfPcJfY+eZymznZWpmepa2kq
      Drqj1L6ONDcxOj7F3r17v9QTWpblzvsSDnAoEMS0LHTTcHdCAMMyS4Zoi3swTbNEebwtH3cu
      dD5683dMLsfQI3uws/NIq5PcWkqTjOd5+S/+FSsfv8bHV/I81jRG3FKJdrZS8DfQ3da08xJh
      lSBJKkN97cwlbQ4O7WJ0bBzJZ7OWyFDX0QPr8yR1hdVEnPYGP0lTIYDB8vI6GHnad++irq0Z
      SZJYmrgFjkMmnab/+CEyqwlaezqLxewUM9HLM/PMjU/S2d9HKBphemS0yEVZWGRtYYnl2Tma
      OzuQPQXw6bU1+htaaGtru+fns22bdDrtmivBYJBQKEQwECSdzbi9P73/N+2io6vIRaVQFIVY
      LEZ7ezs+n49QKITP5yupU37YE2GVIdM3tB9NT1Lf2Y+kZ/C1NZNdW8IMt9LfrjI2b9NQ56Ot
      QWMpnsFxVArxRQoEHg0TyItEIkGws5VkxuCFH/0R2eVZnvjjP+P7P3qJjrZOnv/Jv+LZQz0Y
      pkWjP8di2qZ19+1GSb2H9oOqMHDi2AbP3yEVXyedWCeXTvP7X/+WlaVV/KEQc+NTrK8us7y4
      iubzMXTsMGowUGQgzs2RzRsYuQz5vE7q1jxDQ0P3/DwixCtGJYlZAqJdI1Q2YVT59vQXYR4J
      XwVw/YOdXyHmcOn0W9gdhzky2Elacmjs6uHYy39Ik7XMe2+8z+zNK5w9/Tntx1/k5ZdP0mDF
      UToHmDp/5tEwgRwnwc/+5h+4mcjzabSRXYcH6N/Tyfu/+R0tQ0dZHvmCL85NcvjlP0SyshQC
      bQwOhXjtHz/h4Mn2kmtJksTujUIXAF8kzMzoOKFohJWpMTLZNbr7fkRnk8WFN3/HyNgKHd0N
      rDt+ls5+wu9+9wE/+umLvPW7D9D8YYLWKu39+/jJt1/80rurmBRZicUZ8PvRy5xh2JgDVmba
      +Hw+YrEYTU1NJf7AjvYBrBxXro0QO3eDV9UGAk0SwflxPj59EbW+g5f+9DuEZZOLF2/QXBfk
      1myegWee4u1fvo6/ofXRSYTFYjFe//AD/M31dAyUxnxlRQGnOAyCjdVQkuCz377JnieOUN/W
      gqzIJXRpgVRsjYWRcYaOH0Hz+1m7dppE27fY3Why9dVfkOx+lqd64eJcjsLMJLem53j++yf5
      1f/9K/Y+c4KQ5nBrYpX/8//4X2j+Eomm7eL0lmWxHFtBN293Q5YkiZAvUNEJTiaTRCKRiqHP
      5ubme76/hwG6rvNPb75OTpXp2jeIoqluxFOWNnohOTaOA45dLKCavHyVQiH/aOwA8XicU6d/
      T+ehYXyh4G3Ct+NgWzbzoxMopoWtG0iKjGTZWKbFE8MHWJldJreWZi2bomV4gFB9aRQn2tKE
      FvQzfukq+5983H1fUVX2PHmCN978nGT9XoyVW1y8NMHi6GV8DZ385f/+l9yay7AwfpWupgj+
      8J37+W+F7UKUBb2AsdGFwqdqyCIsLG1WZmHyyJ4Q6U7OAUCRIPj+h79H62yltaPtdnmqBDgO
      yzPFHrKmXtwlLdMsFswAfk3b2QrgOA5TU1N8fOUCrQf3Yts2mfV1cIpt8RYnb6HldJ567KA7
      Z1esil6ejKqqfHH+HKktesoHwmHCjfWMffouFy+NY9VlaDg5iFXfR8R6n48vzHH42FHa2vqx
      zJN0H3wcIzFH954+zOXr+FqHCfq+fnfLcRwKnpnFUBx6UUn44fYOv5MFXsBxHBKJBG9/9CGB
      ng6CoSCZ9WSxe7Y/QHJ1lbW5BVq72ukd3I3i04rt4SlW9LnRvJ1sAl25coU33nqT7r4+FuOr
      tPT1oKgauXSazPQC33v5ZVpbWzd1ZxYQrzVN4423T9F04uCm8kaBXDLF6vQ8/Qf2l7yfjK2y
      Nr9ILpNh6IljqJrm5hsdoJDJEk5kefapp7/uxwegoOvE1mKoilrCAypf2WVZZnFxEcuyaG1t
      LUmQCewkE2h1dZW/+Zu/oaG9lWw+T6ijFd9G/9Wpy1fZd/ww3YP9HsrHxoluJ5wNMuGDuPmv
      C0NDQ+zbtw9Jkvjl67+jc3ijGsy2mUhlaWtr2zRUGkrt6nw+z5tvvUXSMWnZQvgBVL+PfCqz
      SbAM3Sj2+Q+FUCpQLVIrqwx09X0tz1sJmqoSDoTc59zKpBHdoRVFcWcW3On4hx0NDQ38h//w
      H/D7/bz9/vvQ247q94EDei5HfUtzSSZe/NNDEMFx7J0dBjVNk4WFBX7z6m/xtTa5NA9ZUcDa
      Orzn7d0/OTXFuuYw8OwTWx4PRZvfkTxzfzfeb2hvZenWjMv/gdtsk0ImS6Mts6e/MhHr64Bt
      25tCmd4dTyTNEokEbW1tJTsi7NwkmKCHv/P+eywWMiiaBs5Gwk83NkolN0NiQxkkSK0ldrYC
      nHr7bf7+td8R2beH5o05X7eNu43/eFYBXdeZmZlheXnZ/eH39PdzvHeAuS8uFyME5diIHMmy
      TLSliWRstaSX3Or8InuOHiIQ3szyXL45wXNPP3NfV9hK/KJyU8+2bSKRCIlEAjFkY7tWIg87
      rl69yn/82/9CMuKn5+DwRieIjQVIzHLeONYBHNthdWGJ9dgallns1Bdp3KETYsQP/Iff/z6n
      3n9vk+nhbFB+M5kMC4uL1EWjRKNR3nj/Pey2NrKrqxxeWuLIkSMEAgGam5r5VnMLb5/5nMGn
      jmNbJrYNsVuzTI/NshxLoyoSPsmif7CHQCSMFggiORZLt2Y4cPIE1kZ0Rdq4v9krN4ggf6l+
      /vfyd9D10hyAd3fz1vyqqkpdXR1ra2vIslwyZXKnCb/jOBw+fBjTNJlXyhctB8e2KeTyxdFX
      tk20sYFbN26CUqS3z0/eYt/xI8UBiA/kCb4kMpkMly5fpn9XK//0y3+A+j5aulrQ4wmWV29x
      /two/U+9SKuaYCJZ4D/+7D8zPztNPtzLUDNEj79AV3cz9d1dXB8bZ/X0aTK5LEupNPVOjp//
      6nX+YmAP53/1S9AkFrJtpO0w+bUFlqbGaX3sO3zy8T/T2qTRsGuQNnmdC6Mpunc3sZSLMjzU
      WdwdpOIUhmNHjty3v4Ugxm3HMBUKIRYNkYzbackvy7K4cuUK4Yifa2c+YjKms/uxY6RJEGlq
      YG3sHFdXw/SoS1y+fItf/+2vOH6gi9lsmEP7O1EibRx99hg4FJsafHERdaeEQR3H4db0NGeu
      XsKpC3PhrbcoNLbjm/2cEek5mtYX6Rjaw/d+OsSH719h14n9hNUJGjqiJJtfIpK6hdTeQ1vH
      RmMqSaJlcIB8Loff56NfVbjyzpvsPTKMns6QWFkj0hhmV3c9Y1NpaOqjpZABwPbXsbS0xGJi
      mglzjVzWYGpyjvWURGNYprGhDl8oSOfwIG+c/oB//YMfuiWIXxcMw0DXdQqF27UAlVZxb6hX
      HGcYxrYzhh8mOI5DKpXivY9Pk/GrpK/Pk9MVwnKcLy5fo7URmjvruHhhGqepnYGXX6Rn7yJv
      qQH8zXUcrg/gl4N0HD7kOm4N7W2EG+qBHRIFunjpEm9/8D7H/vgVFFWltaeTiYtnSERf4PBQ
      F8FImML6Mmc+us6TLz5DJKDhC0WQQlFa00vE/PXEZm4ycu4iJ//Nf0NzqCgc/o2CkMLSDS5c
      HKewdJMbIwtk9Xoa8haZ6Rmaukqb2uayOSK9T7I6foX+x55CWpli4fp16hSVdPth1OUpcraJ
      T5LR40k3//BVIQTZMAxSqdSWHR7Ke6J6k13eFo07JfqzurrK3/7i5/Q8cYSOzg6cPbuJT13n
      6qTKsaPDhEJ+bp5+h8Y9u5meXMS0bGZGR6hr62V4IMiVm8vU+bO8/p/+M8f+6Ecc2NMCEvg2
      BhU+9ArgOA4r8TXahwdZHJvANEyyq5O89k+f0tbWQG6kl+aDh5i/+D5K515uTcwQ1lcZuXiZ
      ps4+nv7eSTLnb6EpKfSchW6yqTDI3z7Mv/tfh7n23imu3Vzj5vVRFucdmgf6Sa3FUMwEa7du
      0mnDs0e6mV9b4bkXH6evvY7PL8XZ29lILivzwnOH6a0rRh9EZdpXjbIIoc/n827Ep7yjw3bf
      Icwg0Ve1/BoPKxzHYXFxkea9e0jH1sjGEzhWmt/+9W8INdThLC2jhFV6B7qYm1kgtryKXkix
      tCazq7uOhl27aVszaAkbzCxmMc3Nbeof+kSY4zjMzc+j6zoN9fXFVc+xiMXWeOOD9+h78jj+
      cBQzlyCXN9HCUVQrTzarc+3sJR57/iS27Ed2CqQzBnWN9bdDYWwkSKTb+hCbmub1t65iyEVq
      sORY7JJX+eFLz/LM008SjURKVlUxvPrrdHa9K7thGGQymYpCW1726H2v/LUsy6yvr9PY2Lhl
      FdjDVhTvOA6ZTIbJqSm6u4qDzG3LJJVMcvqzM9gdrTS2NROORsCxKegmfr+CXrCZvHiJ7sF+
      fOEoPp9MPBYn2tSMqnh+bGcHKIAXuq5zc3SU61MT6IpEY283oY2enS42nsZxHC5/+AlqfSNt
      gwOIgQieQwRdpEQBLNPk7Jsfcn3ewpaKG2S9neD/+t/+nM7Ozvv7gBsoFArkcjkURXELYASH
      Z7uV27LtTSxQAN0szlaTHNyJleXXetgUwAvbtpmenubSyHXSlkGgtYXGjtLaCq/yT125RiGT
      ZeB4sczVXRBw8KbqH3oTSMC2bd59/33iGrQf2nfnbV+C1Gocy7JRNyR8K7kpf19RVY6++BSc
      Os34YordTQFePPHklypkuVeIsKbg/3sny9zNgD3bscnpeTRFRZZkHDYG4skyummgqiq5dMad
      ESDIcQ+7OeQ4DtevX+fTkWv0HjlAdBtaeSGXI7uexBcMVPSTihcFpB2iAIVCgV/88u8ZnZzk
      yR9+v6Lwl69oa/OLdBw6jBYK4lV6KDH/K0L1+djd1cxf/vAEddEoXV1d25zx1eE4Dslksji4
      rYywdzcwLNOlRAt2qIBpFxXJNE2C4ZCbC9A0jVAo9FCHRB3H4a1Tp/j08zP0nziGWkH4S+5f
      gnw6Q2NnOx39uzcdKyHhSJ5M+H24568dqqqiF3SGn32S9ZXYBqcbcMDIFxg7d5FP/+k1sskU
      UJwHkFiLo/g0qPDbbiR3XSRmZpn89DPyqRT5dBr95ign9u9n79DQNyL8xXsqFqrX19d/qXGq
      BUPfVpCLppRDtK6OhoYGbNtmfX39oadDaKpK21DRjC3kcjgb/7Mti7mbY5z57ess35opcrvS
      GRYmpghFoxWvVfQhb7/eMT7A/Pw8v/ynf2Swtw+nrwMJiE/Nsj6/iK0p9D9+lNWFRXKZLCYK
      rYMDqH6/K+jeXd4rJhKwcOUq8ckp2vt30xIM8soL334gfwcRwhT1v/cCe+NBTcvEdmzMDfNJ
      luRinYAsF7tFOE6xYJ6iWRWPx2lubsY0zYfWB8hkMvz1f/0Zh/c/xkQ6QfvAblbGp8itrJJK
      Jul/+glSa3FMXSeXTNN/5AABb/hZKq784PEBxPs7RQGKI3FM4vE47310moZwhIxe4Ob4OL2H
      HyOxmkAJhTH1Au1791bcKr0QD22bJrEbN/izb3+Hurq6+0pduOP9OMURptls1u3v44WqqsVu
      Exvvl1MgyiEUQPXsJrZtu06yvPH/eDxOY2MjlmU9tHRo27bd2cavvvUmkXCYXCbL5Ow0jf19
      6Pk8kcYG1peW6T9yiGC0KPxOCffTEzreUALHcXaGCQRFAQgEAnR2dvLKi99BURSWLIvWgweZ
      Hp3ElmSiBZ36bJ706irgWkmbrCDHccC2iU1Okrx0he8cPExjY+MDE3643fUtFAptug9hHoXD
      YSKRCMFgEE3T7lhjrCpKifALCOEX1xUh0YfZEZZlmVAoRCgU4o/+4BW62tqZWV1h+MXniM3O
      YZsmxlqCrmCUxbGJ2yd6BECYTeL9+NIS4x/vwKJ40zT57LPPuL4aw+/zscuBI8cfR7dMPjt/
      gbqhAZo3wpXlP2kulSIQDhOfmETOZBju6OSFV77/0Pz4kiShaRqKorgRoEAg4Ha+ExAOrJj0
      4k2Glc8kLi+KERBBA1VVH2on2AvbthkbG+OdTz+mZfcuCuMzPL3/IJFolHOXL7EUchh64ph7
      vDf0mc9kUTWN1EoMIxaHvM5f/OTPdpYCCBs5Eolw0O/n4PAwoVCIn/3d3xFLJJAiYXra2ylk
      Mvg3TDnbtsmsFaeI5MYn0Jpb2OUP8NIr33toQ4CyLLv8oTsVw5um6fbDFNGc9fX1uxJoSZLc
      /kA7BSIfcnBwiN6eHvp39/PrX/+ayZkZdMfi6Msvks9k3dyQ4zjkUikyiSTZ2CoNvgC5dIZ/
      /Sc/plAoFP92O8UH2AojIyN8/NlnrKRTtAwPU4jFWJ1fYOg73yafSmPNzvH4Y4+haRrNjY20
      tLS49OCdCi+5zcv5AchmsyXjk7yhVNEX1O/3u4Xx6XTaLah5WJ3grRCPx3n1tddYTa7Tsm8Q
      dIOxL87z9J/+CMswWbp+k6HOHnq6utB1naGhIXfRENi5UrCBfD7PWjbDk48doLOzk64TT3Lu
      wgVWbs3QE4nw/J/8yQO17e8HyoXei0Ag4A6S9sK2baLRKIENEpgYLrGToaoqMwvzHDp4kL7W
      Tnp6eljeM8T5K5cJ+wP8+OXvbWLilsvCjt8BBC04uhH3FQS0uyGJPcoQs8GEk6uqqtsRQtf1
      YjPZMuy0HQCKnQCj0SiKopRkt+82l7LjFaCGe4NIflVqFrATFeCronqXyCqFGK+0U4fkfd3Y
      8T5AtaASe1NERWzbpqAXikMibBt1o+hdVVUC/ts9Rb0Jtu1aLlYLagqwQyCKWQQEV15khHN6
      Hqusq4UsSYSDYXdajNfsKV/1q1URaibQDkElp87LFwpofrcOwC2fNE3S2Qz5QmFTgsxbW1Ct
      wg+1HWDH4E5F7+Lffs2HYZpYtu2m/QO+24pRnvirZsEXqCnADoJpmmQyGfx+v0sO9PoGgvkp
      2oHjbO78Jo6vCX8RNQXYQRCTEDOZzLZCLHnrPLldPF8pi1yLAtWwI1AphOmN8IjX3vfvNupT
      rTtCTQF2GMrt/vLPKoVKtyumv5fSy0cNtSjQDkF5HL8cW5kz3ve9LdHLj6tWBajtADsAjuOQ
      zWbdFinlzW9N28K0LFRZKU5GV9Qto0ZQDKmqqupeD3Zum/SvipoCPOQQaS2SXAAAAp9JREFU
      wp/P5ysKte04FIxiYUxho/OZ7TgEtNJqsWAwiCzL+Hy+koa5+XyeXC73jTzLw4iaAjzEsG0b
      wzBKmuCWr9R5o7DpPNnjCKuq6o5ZLYckSe7M4Urs0GpATQEeUui6vqlAvhKBTZFltwBeHCOG
      5Gmatm1zXlGGGd2ijcijjpoCPKTIZDLbhi4dx0GRZCzpdghUU1S3GF6US94NvkwvokcB1en5
      PMSoxNqsFKERdryiKCX2vuYpcq9Wob4X1HaAhwyWZZFIJO6KriBJEjIySBD0FZuASdzuXF0+
      PK+GzagpwEMEEZUpz/Sqquo6vyKS4zjFEUli1KuEhCzfPk/TtB1d+P9NofYXegggzJxcLlfS
      6weKkaBAIFBSzC0URAh4IBBwOzw4TnEKZGRjjkENd0ZNAR4gxIoPuK1MvI6voiiEQiFUdfvE
      luiepuv6lsfXsBk1BXhAsCyLdDqNZVkV+/sEAgG3xcndQPT8uVO7xBo2oxYFekAwTRPDMNx2
      JcKcEU27ROb2XlHj+t8bagrwgCDLMoFAgGAwSCAQIBqN4vf7geJcsBq+GdRMoPsIYdNXWslV
      VS2x1UVG1rKsHdWvc6ejpgD3EWLOVyW7vJKZIkKX1crMfBCoKcB9hOzpxX83qNnv3zxqCnAf
      URPmhx+1vbaGqkZNAWqoatQUoIaqRk0Baqhq1BSgBhzH2dQ7tFpQU4Aqh2VZpFKpex7M/aig
      pgBVDjEt8lGbo3a3qOUBqhyCk1StqO0ANVQ1agpQQ1WjpgA1VDVqClBDVaOmADVUNWoKUENV
      o6YANVQ1anmARxTe9iqC6iAK7mt1CrdRU4BHFLZtk81m3UEYQgFEIX5NCYqoKcAjCl3XMQyj
      pMOEZVnkcjkcxyEUCtWUAPj/ARU/mgEm7gUaAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
